
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model Favorite
 * 
 */
export type Favorite = $Result.DefaultSelection<Prisma.$FavoritePayload>
/**
 * Model ProductAnalytics
 * 
 */
export type ProductAnalytics = $Result.DefaultSelection<Prisma.$ProductAnalyticsPayload>
/**
 * Model ZdravieAKrasa
 * 
 */
export type ZdravieAKrasa = $Result.DefaultSelection<Prisma.$ZdravieAKrasaPayload>
/**
 * Model OvocieAZeleniny
 * 
 */
export type OvocieAZeleniny = $Result.DefaultSelection<Prisma.$OvocieAZeleninyPayload>
/**
 * Model Grilovanie
 * 
 */
export type Grilovanie = $Result.DefaultSelection<Prisma.$GrilovaniePayload>
/**
 * Model StarostlivostODomacnost
 * 
 */
export type StarostlivostODomacnost = $Result.DefaultSelection<Prisma.$StarostlivostODomacnostPayload>
/**
 * Model Pecivo
 * 
 */
export type Pecivo = $Result.DefaultSelection<Prisma.$PecivoPayload>
/**
 * Model MasoRybyALahodky
 * 
 */
export type MasoRybyALahodky = $Result.DefaultSelection<Prisma.$MasoRybyALahodkyPayload>
/**
 * Model MliecneVyrobkyAVajcia
 * 
 */
export type MliecneVyrobkyAVajcia = $Result.DefaultSelection<Prisma.$MliecneVyrobkyAVajciaPayload>
/**
 * Model TrvanlivePotraviny
 * 
 */
export type TrvanlivePotraviny = $Result.DefaultSelection<Prisma.$TrvanlivePotravinyPayload>
/**
 * Model SpecialnaAZdravaVyziva
 * 
 */
export type SpecialnaAZdravaVyziva = $Result.DefaultSelection<Prisma.$SpecialnaAZdravaVyzivaPayload>
/**
 * Model MrazenePotraviny
 * 
 */
export type MrazenePotraviny = $Result.DefaultSelection<Prisma.$MrazenePotravinyPayload>
/**
 * Model Napoje
 * 
 */
export type Napoje = $Result.DefaultSelection<Prisma.$NapojePayload>
/**
 * Model Alkohol
 * 
 */
export type Alkohol = $Result.DefaultSelection<Prisma.$AlkoholPayload>
/**
 * Model Promotion
 * 
 */
export type Promotion = $Result.DefaultSelection<Prisma.$PromotionPayload>
/**
 * Model UpdateSettings
 * 
 */
export type UpdateSettings = $Result.DefaultSelection<Prisma.$UpdateSettingsPayload>
/**
 * Model ShoppingList
 * 
 */
export type ShoppingList = $Result.DefaultSelection<Prisma.$ShoppingListPayload>
/**
 * Model ShoppingListItem
 * 
 */
export type ShoppingListItem = $Result.DefaultSelection<Prisma.$ShoppingListItemPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Favorites
 * const favorites = await prisma.favorite.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  T extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof T ? T['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<T['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Favorites
   * const favorites = await prisma.favorite.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<T, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<'extends', Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.favorite`: Exposes CRUD operations for the **Favorite** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Favorites
    * const favorites = await prisma.favorite.findMany()
    * ```
    */
  get favorite(): Prisma.FavoriteDelegate<ExtArgs>;

  /**
   * `prisma.productAnalytics`: Exposes CRUD operations for the **ProductAnalytics** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductAnalytics
    * const productAnalytics = await prisma.productAnalytics.findMany()
    * ```
    */
  get productAnalytics(): Prisma.ProductAnalyticsDelegate<ExtArgs>;

  /**
   * `prisma.zdravieAKrasa`: Exposes CRUD operations for the **ZdravieAKrasa** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ZdravieAKrasas
    * const zdravieAKrasas = await prisma.zdravieAKrasa.findMany()
    * ```
    */
  get zdravieAKrasa(): Prisma.ZdravieAKrasaDelegate<ExtArgs>;

  /**
   * `prisma.ovocieAZeleniny`: Exposes CRUD operations for the **OvocieAZeleniny** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OvocieAZeleninies
    * const ovocieAZeleninies = await prisma.ovocieAZeleniny.findMany()
    * ```
    */
  get ovocieAZeleniny(): Prisma.OvocieAZeleninyDelegate<ExtArgs>;

  /**
   * `prisma.grilovanie`: Exposes CRUD operations for the **Grilovanie** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Grilovanies
    * const grilovanies = await prisma.grilovanie.findMany()
    * ```
    */
  get grilovanie(): Prisma.GrilovanieDelegate<ExtArgs>;

  /**
   * `prisma.starostlivostODomacnost`: Exposes CRUD operations for the **StarostlivostODomacnost** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StarostlivostODomacnosts
    * const starostlivostODomacnosts = await prisma.starostlivostODomacnost.findMany()
    * ```
    */
  get starostlivostODomacnost(): Prisma.StarostlivostODomacnostDelegate<ExtArgs>;

  /**
   * `prisma.pecivo`: Exposes CRUD operations for the **Pecivo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pecivos
    * const pecivos = await prisma.pecivo.findMany()
    * ```
    */
  get pecivo(): Prisma.PecivoDelegate<ExtArgs>;

  /**
   * `prisma.masoRybyALahodky`: Exposes CRUD operations for the **MasoRybyALahodky** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MasoRybyALahodkies
    * const masoRybyALahodkies = await prisma.masoRybyALahodky.findMany()
    * ```
    */
  get masoRybyALahodky(): Prisma.MasoRybyALahodkyDelegate<ExtArgs>;

  /**
   * `prisma.mliecneVyrobkyAVajcia`: Exposes CRUD operations for the **MliecneVyrobkyAVajcia** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MliecneVyrobkyAVajcias
    * const mliecneVyrobkyAVajcias = await prisma.mliecneVyrobkyAVajcia.findMany()
    * ```
    */
  get mliecneVyrobkyAVajcia(): Prisma.MliecneVyrobkyAVajciaDelegate<ExtArgs>;

  /**
   * `prisma.trvanlivePotraviny`: Exposes CRUD operations for the **TrvanlivePotraviny** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more TrvanlivePotravinies
    * const trvanlivePotravinies = await prisma.trvanlivePotraviny.findMany()
    * ```
    */
  get trvanlivePotraviny(): Prisma.TrvanlivePotravinyDelegate<ExtArgs>;

  /**
   * `prisma.specialnaAZdravaVyziva`: Exposes CRUD operations for the **SpecialnaAZdravaVyziva** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SpecialnaAZdravaVyzivas
    * const specialnaAZdravaVyzivas = await prisma.specialnaAZdravaVyziva.findMany()
    * ```
    */
  get specialnaAZdravaVyziva(): Prisma.SpecialnaAZdravaVyzivaDelegate<ExtArgs>;

  /**
   * `prisma.mrazenePotraviny`: Exposes CRUD operations for the **MrazenePotraviny** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more MrazenePotravinies
    * const mrazenePotravinies = await prisma.mrazenePotraviny.findMany()
    * ```
    */
  get mrazenePotraviny(): Prisma.MrazenePotravinyDelegate<ExtArgs>;

  /**
   * `prisma.napoje`: Exposes CRUD operations for the **Napoje** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Napojes
    * const napojes = await prisma.napoje.findMany()
    * ```
    */
  get napoje(): Prisma.NapojeDelegate<ExtArgs>;

  /**
   * `prisma.alkohol`: Exposes CRUD operations for the **Alkohol** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Alkohols
    * const alkohols = await prisma.alkohol.findMany()
    * ```
    */
  get alkohol(): Prisma.AlkoholDelegate<ExtArgs>;

  /**
   * `prisma.promotion`: Exposes CRUD operations for the **Promotion** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Promotions
    * const promotions = await prisma.promotion.findMany()
    * ```
    */
  get promotion(): Prisma.PromotionDelegate<ExtArgs>;

  /**
   * `prisma.updateSettings`: Exposes CRUD operations for the **UpdateSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UpdateSettings
    * const updateSettings = await prisma.updateSettings.findMany()
    * ```
    */
  get updateSettings(): Prisma.UpdateSettingsDelegate<ExtArgs>;

  /**
   * `prisma.shoppingList`: Exposes CRUD operations for the **ShoppingList** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShoppingLists
    * const shoppingLists = await prisma.shoppingList.findMany()
    * ```
    */
  get shoppingList(): Prisma.ShoppingListDelegate<ExtArgs>;

  /**
   * `prisma.shoppingListItem`: Exposes CRUD operations for the **ShoppingListItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShoppingListItems
    * const shoppingListItems = await prisma.shoppingListItem.findMany()
    * ```
    */
  get shoppingListItem(): Prisma.ShoppingListItemDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.15.0
   * Query Engine version: 12e25d8d06f6ea5a0252864dd9a03b1bb51f3022
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    Favorite: 'Favorite',
    ProductAnalytics: 'ProductAnalytics',
    ZdravieAKrasa: 'ZdravieAKrasa',
    OvocieAZeleniny: 'OvocieAZeleniny',
    Grilovanie: 'Grilovanie',
    StarostlivostODomacnost: 'StarostlivostODomacnost',
    Pecivo: 'Pecivo',
    MasoRybyALahodky: 'MasoRybyALahodky',
    MliecneVyrobkyAVajcia: 'MliecneVyrobkyAVajcia',
    TrvanlivePotraviny: 'TrvanlivePotraviny',
    SpecialnaAZdravaVyziva: 'SpecialnaAZdravaVyziva',
    MrazenePotraviny: 'MrazenePotraviny',
    Napoje: 'Napoje',
    Alkohol: 'Alkohol',
    Promotion: 'Promotion',
    UpdateSettings: 'UpdateSettings',
    ShoppingList: 'ShoppingList',
    ShoppingListItem: 'ShoppingListItem'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }


  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs}, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    meta: {
      modelProps: 'favorite' | 'productAnalytics' | 'zdravieAKrasa' | 'ovocieAZeleniny' | 'grilovanie' | 'starostlivostODomacnost' | 'pecivo' | 'masoRybyALahodky' | 'mliecneVyrobkyAVajcia' | 'trvanlivePotraviny' | 'specialnaAZdravaVyziva' | 'mrazenePotraviny' | 'napoje' | 'alkohol' | 'promotion' | 'updateSettings' | 'shoppingList' | 'shoppingListItem'
      txIsolationLevel: Prisma.TransactionIsolationLevel
    },
    model: {
      Favorite: {
        payload: Prisma.$FavoritePayload<ExtArgs>
        fields: Prisma.FavoriteFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FavoriteFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FavoriteFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findFirst: {
            args: Prisma.FavoriteFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FavoriteFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          findMany: {
            args: Prisma.FavoriteFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          create: {
            args: Prisma.FavoriteCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          createMany: {
            args: Prisma.FavoriteCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.FavoriteCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>[]
          }
          delete: {
            args: Prisma.FavoriteDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          update: {
            args: Prisma.FavoriteUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          deleteMany: {
            args: Prisma.FavoriteDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.FavoriteUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.FavoriteUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$FavoritePayload>
          }
          aggregate: {
            args: Prisma.FavoriteAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateFavorite>
          }
          groupBy: {
            args: Prisma.FavoriteGroupByArgs<ExtArgs>,
            result: $Utils.Optional<FavoriteGroupByOutputType>[]
          }
          count: {
            args: Prisma.FavoriteCountArgs<ExtArgs>,
            result: $Utils.Optional<FavoriteCountAggregateOutputType> | number
          }
        }
      }
      ProductAnalytics: {
        payload: Prisma.$ProductAnalyticsPayload<ExtArgs>
        fields: Prisma.ProductAnalyticsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductAnalyticsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductAnalyticsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>
          }
          findFirst: {
            args: Prisma.ProductAnalyticsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductAnalyticsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>
          }
          findMany: {
            args: Prisma.ProductAnalyticsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>[]
          }
          create: {
            args: Prisma.ProductAnalyticsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>
          }
          createMany: {
            args: Prisma.ProductAnalyticsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ProductAnalyticsCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>[]
          }
          delete: {
            args: Prisma.ProductAnalyticsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>
          }
          update: {
            args: Prisma.ProductAnalyticsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>
          }
          deleteMany: {
            args: Prisma.ProductAnalyticsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ProductAnalyticsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ProductAnalyticsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ProductAnalyticsPayload>
          }
          aggregate: {
            args: Prisma.ProductAnalyticsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateProductAnalytics>
          }
          groupBy: {
            args: Prisma.ProductAnalyticsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ProductAnalyticsGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductAnalyticsCountArgs<ExtArgs>,
            result: $Utils.Optional<ProductAnalyticsCountAggregateOutputType> | number
          }
        }
      }
      ZdravieAKrasa: {
        payload: Prisma.$ZdravieAKrasaPayload<ExtArgs>
        fields: Prisma.ZdravieAKrasaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ZdravieAKrasaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ZdravieAKrasaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>
          }
          findFirst: {
            args: Prisma.ZdravieAKrasaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ZdravieAKrasaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>
          }
          findMany: {
            args: Prisma.ZdravieAKrasaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>[]
          }
          create: {
            args: Prisma.ZdravieAKrasaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>
          }
          createMany: {
            args: Prisma.ZdravieAKrasaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ZdravieAKrasaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>[]
          }
          delete: {
            args: Prisma.ZdravieAKrasaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>
          }
          update: {
            args: Prisma.ZdravieAKrasaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>
          }
          deleteMany: {
            args: Prisma.ZdravieAKrasaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ZdravieAKrasaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ZdravieAKrasaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ZdravieAKrasaPayload>
          }
          aggregate: {
            args: Prisma.ZdravieAKrasaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateZdravieAKrasa>
          }
          groupBy: {
            args: Prisma.ZdravieAKrasaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ZdravieAKrasaGroupByOutputType>[]
          }
          count: {
            args: Prisma.ZdravieAKrasaCountArgs<ExtArgs>,
            result: $Utils.Optional<ZdravieAKrasaCountAggregateOutputType> | number
          }
        }
      }
      OvocieAZeleniny: {
        payload: Prisma.$OvocieAZeleninyPayload<ExtArgs>
        fields: Prisma.OvocieAZeleninyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OvocieAZeleninyFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OvocieAZeleninyFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>
          }
          findFirst: {
            args: Prisma.OvocieAZeleninyFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OvocieAZeleninyFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>
          }
          findMany: {
            args: Prisma.OvocieAZeleninyFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>[]
          }
          create: {
            args: Prisma.OvocieAZeleninyCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>
          }
          createMany: {
            args: Prisma.OvocieAZeleninyCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.OvocieAZeleninyCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>[]
          }
          delete: {
            args: Prisma.OvocieAZeleninyDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>
          }
          update: {
            args: Prisma.OvocieAZeleninyUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>
          }
          deleteMany: {
            args: Prisma.OvocieAZeleninyDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.OvocieAZeleninyUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.OvocieAZeleninyUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$OvocieAZeleninyPayload>
          }
          aggregate: {
            args: Prisma.OvocieAZeleninyAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateOvocieAZeleniny>
          }
          groupBy: {
            args: Prisma.OvocieAZeleninyGroupByArgs<ExtArgs>,
            result: $Utils.Optional<OvocieAZeleninyGroupByOutputType>[]
          }
          count: {
            args: Prisma.OvocieAZeleninyCountArgs<ExtArgs>,
            result: $Utils.Optional<OvocieAZeleninyCountAggregateOutputType> | number
          }
        }
      }
      Grilovanie: {
        payload: Prisma.$GrilovaniePayload<ExtArgs>
        fields: Prisma.GrilovanieFieldRefs
        operations: {
          findUnique: {
            args: Prisma.GrilovanieFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.GrilovanieFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>
          }
          findFirst: {
            args: Prisma.GrilovanieFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.GrilovanieFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>
          }
          findMany: {
            args: Prisma.GrilovanieFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>[]
          }
          create: {
            args: Prisma.GrilovanieCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>
          }
          createMany: {
            args: Prisma.GrilovanieCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.GrilovanieCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>[]
          }
          delete: {
            args: Prisma.GrilovanieDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>
          }
          update: {
            args: Prisma.GrilovanieUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>
          }
          deleteMany: {
            args: Prisma.GrilovanieDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.GrilovanieUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.GrilovanieUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$GrilovaniePayload>
          }
          aggregate: {
            args: Prisma.GrilovanieAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateGrilovanie>
          }
          groupBy: {
            args: Prisma.GrilovanieGroupByArgs<ExtArgs>,
            result: $Utils.Optional<GrilovanieGroupByOutputType>[]
          }
          count: {
            args: Prisma.GrilovanieCountArgs<ExtArgs>,
            result: $Utils.Optional<GrilovanieCountAggregateOutputType> | number
          }
        }
      }
      StarostlivostODomacnost: {
        payload: Prisma.$StarostlivostODomacnostPayload<ExtArgs>
        fields: Prisma.StarostlivostODomacnostFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StarostlivostODomacnostFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StarostlivostODomacnostFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>
          }
          findFirst: {
            args: Prisma.StarostlivostODomacnostFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StarostlivostODomacnostFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>
          }
          findMany: {
            args: Prisma.StarostlivostODomacnostFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>[]
          }
          create: {
            args: Prisma.StarostlivostODomacnostCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>
          }
          createMany: {
            args: Prisma.StarostlivostODomacnostCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.StarostlivostODomacnostCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>[]
          }
          delete: {
            args: Prisma.StarostlivostODomacnostDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>
          }
          update: {
            args: Prisma.StarostlivostODomacnostUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>
          }
          deleteMany: {
            args: Prisma.StarostlivostODomacnostDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.StarostlivostODomacnostUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.StarostlivostODomacnostUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$StarostlivostODomacnostPayload>
          }
          aggregate: {
            args: Prisma.StarostlivostODomacnostAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateStarostlivostODomacnost>
          }
          groupBy: {
            args: Prisma.StarostlivostODomacnostGroupByArgs<ExtArgs>,
            result: $Utils.Optional<StarostlivostODomacnostGroupByOutputType>[]
          }
          count: {
            args: Prisma.StarostlivostODomacnostCountArgs<ExtArgs>,
            result: $Utils.Optional<StarostlivostODomacnostCountAggregateOutputType> | number
          }
        }
      }
      Pecivo: {
        payload: Prisma.$PecivoPayload<ExtArgs>
        fields: Prisma.PecivoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PecivoFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PecivoFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>
          }
          findFirst: {
            args: Prisma.PecivoFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PecivoFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>
          }
          findMany: {
            args: Prisma.PecivoFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>[]
          }
          create: {
            args: Prisma.PecivoCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>
          }
          createMany: {
            args: Prisma.PecivoCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PecivoCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>[]
          }
          delete: {
            args: Prisma.PecivoDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>
          }
          update: {
            args: Prisma.PecivoUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>
          }
          deleteMany: {
            args: Prisma.PecivoDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.PecivoUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.PecivoUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PecivoPayload>
          }
          aggregate: {
            args: Prisma.PecivoAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePecivo>
          }
          groupBy: {
            args: Prisma.PecivoGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PecivoGroupByOutputType>[]
          }
          count: {
            args: Prisma.PecivoCountArgs<ExtArgs>,
            result: $Utils.Optional<PecivoCountAggregateOutputType> | number
          }
        }
      }
      MasoRybyALahodky: {
        payload: Prisma.$MasoRybyALahodkyPayload<ExtArgs>
        fields: Prisma.MasoRybyALahodkyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MasoRybyALahodkyFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MasoRybyALahodkyFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>
          }
          findFirst: {
            args: Prisma.MasoRybyALahodkyFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MasoRybyALahodkyFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>
          }
          findMany: {
            args: Prisma.MasoRybyALahodkyFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>[]
          }
          create: {
            args: Prisma.MasoRybyALahodkyCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>
          }
          createMany: {
            args: Prisma.MasoRybyALahodkyCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MasoRybyALahodkyCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>[]
          }
          delete: {
            args: Prisma.MasoRybyALahodkyDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>
          }
          update: {
            args: Prisma.MasoRybyALahodkyUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>
          }
          deleteMany: {
            args: Prisma.MasoRybyALahodkyDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.MasoRybyALahodkyUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.MasoRybyALahodkyUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MasoRybyALahodkyPayload>
          }
          aggregate: {
            args: Prisma.MasoRybyALahodkyAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMasoRybyALahodky>
          }
          groupBy: {
            args: Prisma.MasoRybyALahodkyGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MasoRybyALahodkyGroupByOutputType>[]
          }
          count: {
            args: Prisma.MasoRybyALahodkyCountArgs<ExtArgs>,
            result: $Utils.Optional<MasoRybyALahodkyCountAggregateOutputType> | number
          }
        }
      }
      MliecneVyrobkyAVajcia: {
        payload: Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>
        fields: Prisma.MliecneVyrobkyAVajciaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MliecneVyrobkyAVajciaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MliecneVyrobkyAVajciaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>
          }
          findFirst: {
            args: Prisma.MliecneVyrobkyAVajciaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MliecneVyrobkyAVajciaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>
          }
          findMany: {
            args: Prisma.MliecneVyrobkyAVajciaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>[]
          }
          create: {
            args: Prisma.MliecneVyrobkyAVajciaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>
          }
          createMany: {
            args: Prisma.MliecneVyrobkyAVajciaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MliecneVyrobkyAVajciaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>[]
          }
          delete: {
            args: Prisma.MliecneVyrobkyAVajciaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>
          }
          update: {
            args: Prisma.MliecneVyrobkyAVajciaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>
          }
          deleteMany: {
            args: Prisma.MliecneVyrobkyAVajciaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.MliecneVyrobkyAVajciaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.MliecneVyrobkyAVajciaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MliecneVyrobkyAVajciaPayload>
          }
          aggregate: {
            args: Prisma.MliecneVyrobkyAVajciaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMliecneVyrobkyAVajcia>
          }
          groupBy: {
            args: Prisma.MliecneVyrobkyAVajciaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MliecneVyrobkyAVajciaGroupByOutputType>[]
          }
          count: {
            args: Prisma.MliecneVyrobkyAVajciaCountArgs<ExtArgs>,
            result: $Utils.Optional<MliecneVyrobkyAVajciaCountAggregateOutputType> | number
          }
        }
      }
      TrvanlivePotraviny: {
        payload: Prisma.$TrvanlivePotravinyPayload<ExtArgs>
        fields: Prisma.TrvanlivePotravinyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.TrvanlivePotravinyFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.TrvanlivePotravinyFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>
          }
          findFirst: {
            args: Prisma.TrvanlivePotravinyFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.TrvanlivePotravinyFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>
          }
          findMany: {
            args: Prisma.TrvanlivePotravinyFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>[]
          }
          create: {
            args: Prisma.TrvanlivePotravinyCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>
          }
          createMany: {
            args: Prisma.TrvanlivePotravinyCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.TrvanlivePotravinyCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>[]
          }
          delete: {
            args: Prisma.TrvanlivePotravinyDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>
          }
          update: {
            args: Prisma.TrvanlivePotravinyUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>
          }
          deleteMany: {
            args: Prisma.TrvanlivePotravinyDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.TrvanlivePotravinyUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.TrvanlivePotravinyUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$TrvanlivePotravinyPayload>
          }
          aggregate: {
            args: Prisma.TrvanlivePotravinyAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateTrvanlivePotraviny>
          }
          groupBy: {
            args: Prisma.TrvanlivePotravinyGroupByArgs<ExtArgs>,
            result: $Utils.Optional<TrvanlivePotravinyGroupByOutputType>[]
          }
          count: {
            args: Prisma.TrvanlivePotravinyCountArgs<ExtArgs>,
            result: $Utils.Optional<TrvanlivePotravinyCountAggregateOutputType> | number
          }
        }
      }
      SpecialnaAZdravaVyziva: {
        payload: Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>
        fields: Prisma.SpecialnaAZdravaVyzivaFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SpecialnaAZdravaVyzivaFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SpecialnaAZdravaVyzivaFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>
          }
          findFirst: {
            args: Prisma.SpecialnaAZdravaVyzivaFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SpecialnaAZdravaVyzivaFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>
          }
          findMany: {
            args: Prisma.SpecialnaAZdravaVyzivaFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>[]
          }
          create: {
            args: Prisma.SpecialnaAZdravaVyzivaCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>
          }
          createMany: {
            args: Prisma.SpecialnaAZdravaVyzivaCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.SpecialnaAZdravaVyzivaCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>[]
          }
          delete: {
            args: Prisma.SpecialnaAZdravaVyzivaDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>
          }
          update: {
            args: Prisma.SpecialnaAZdravaVyzivaUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>
          }
          deleteMany: {
            args: Prisma.SpecialnaAZdravaVyzivaDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.SpecialnaAZdravaVyzivaUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.SpecialnaAZdravaVyzivaUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$SpecialnaAZdravaVyzivaPayload>
          }
          aggregate: {
            args: Prisma.SpecialnaAZdravaVyzivaAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateSpecialnaAZdravaVyziva>
          }
          groupBy: {
            args: Prisma.SpecialnaAZdravaVyzivaGroupByArgs<ExtArgs>,
            result: $Utils.Optional<SpecialnaAZdravaVyzivaGroupByOutputType>[]
          }
          count: {
            args: Prisma.SpecialnaAZdravaVyzivaCountArgs<ExtArgs>,
            result: $Utils.Optional<SpecialnaAZdravaVyzivaCountAggregateOutputType> | number
          }
        }
      }
      MrazenePotraviny: {
        payload: Prisma.$MrazenePotravinyPayload<ExtArgs>
        fields: Prisma.MrazenePotravinyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MrazenePotravinyFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MrazenePotravinyFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>
          }
          findFirst: {
            args: Prisma.MrazenePotravinyFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MrazenePotravinyFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>
          }
          findMany: {
            args: Prisma.MrazenePotravinyFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>[]
          }
          create: {
            args: Prisma.MrazenePotravinyCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>
          }
          createMany: {
            args: Prisma.MrazenePotravinyCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.MrazenePotravinyCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>[]
          }
          delete: {
            args: Prisma.MrazenePotravinyDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>
          }
          update: {
            args: Prisma.MrazenePotravinyUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>
          }
          deleteMany: {
            args: Prisma.MrazenePotravinyDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.MrazenePotravinyUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.MrazenePotravinyUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$MrazenePotravinyPayload>
          }
          aggregate: {
            args: Prisma.MrazenePotravinyAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateMrazenePotraviny>
          }
          groupBy: {
            args: Prisma.MrazenePotravinyGroupByArgs<ExtArgs>,
            result: $Utils.Optional<MrazenePotravinyGroupByOutputType>[]
          }
          count: {
            args: Prisma.MrazenePotravinyCountArgs<ExtArgs>,
            result: $Utils.Optional<MrazenePotravinyCountAggregateOutputType> | number
          }
        }
      }
      Napoje: {
        payload: Prisma.$NapojePayload<ExtArgs>
        fields: Prisma.NapojeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.NapojeFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.NapojeFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>
          }
          findFirst: {
            args: Prisma.NapojeFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.NapojeFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>
          }
          findMany: {
            args: Prisma.NapojeFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>[]
          }
          create: {
            args: Prisma.NapojeCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>
          }
          createMany: {
            args: Prisma.NapojeCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.NapojeCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>[]
          }
          delete: {
            args: Prisma.NapojeDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>
          }
          update: {
            args: Prisma.NapojeUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>
          }
          deleteMany: {
            args: Prisma.NapojeDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.NapojeUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.NapojeUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$NapojePayload>
          }
          aggregate: {
            args: Prisma.NapojeAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateNapoje>
          }
          groupBy: {
            args: Prisma.NapojeGroupByArgs<ExtArgs>,
            result: $Utils.Optional<NapojeGroupByOutputType>[]
          }
          count: {
            args: Prisma.NapojeCountArgs<ExtArgs>,
            result: $Utils.Optional<NapojeCountAggregateOutputType> | number
          }
        }
      }
      Alkohol: {
        payload: Prisma.$AlkoholPayload<ExtArgs>
        fields: Prisma.AlkoholFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AlkoholFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AlkoholFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>
          }
          findFirst: {
            args: Prisma.AlkoholFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AlkoholFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>
          }
          findMany: {
            args: Prisma.AlkoholFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>[]
          }
          create: {
            args: Prisma.AlkoholCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>
          }
          createMany: {
            args: Prisma.AlkoholCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.AlkoholCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>[]
          }
          delete: {
            args: Prisma.AlkoholDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>
          }
          update: {
            args: Prisma.AlkoholUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>
          }
          deleteMany: {
            args: Prisma.AlkoholDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.AlkoholUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.AlkoholUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$AlkoholPayload>
          }
          aggregate: {
            args: Prisma.AlkoholAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateAlkohol>
          }
          groupBy: {
            args: Prisma.AlkoholGroupByArgs<ExtArgs>,
            result: $Utils.Optional<AlkoholGroupByOutputType>[]
          }
          count: {
            args: Prisma.AlkoholCountArgs<ExtArgs>,
            result: $Utils.Optional<AlkoholCountAggregateOutputType> | number
          }
        }
      }
      Promotion: {
        payload: Prisma.$PromotionPayload<ExtArgs>
        fields: Prisma.PromotionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PromotionFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PromotionFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findFirst: {
            args: Prisma.PromotionFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PromotionFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          findMany: {
            args: Prisma.PromotionFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          create: {
            args: Prisma.PromotionCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          createMany: {
            args: Prisma.PromotionCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.PromotionCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>[]
          }
          delete: {
            args: Prisma.PromotionDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          update: {
            args: Prisma.PromotionUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          deleteMany: {
            args: Prisma.PromotionDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.PromotionUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.PromotionUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$PromotionPayload>
          }
          aggregate: {
            args: Prisma.PromotionAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregatePromotion>
          }
          groupBy: {
            args: Prisma.PromotionGroupByArgs<ExtArgs>,
            result: $Utils.Optional<PromotionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PromotionCountArgs<ExtArgs>,
            result: $Utils.Optional<PromotionCountAggregateOutputType> | number
          }
        }
      }
      UpdateSettings: {
        payload: Prisma.$UpdateSettingsPayload<ExtArgs>
        fields: Prisma.UpdateSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UpdateSettingsFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UpdateSettingsFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>
          }
          findFirst: {
            args: Prisma.UpdateSettingsFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UpdateSettingsFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>
          }
          findMany: {
            args: Prisma.UpdateSettingsFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>[]
          }
          create: {
            args: Prisma.UpdateSettingsCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>
          }
          createMany: {
            args: Prisma.UpdateSettingsCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.UpdateSettingsCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>[]
          }
          delete: {
            args: Prisma.UpdateSettingsDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>
          }
          update: {
            args: Prisma.UpdateSettingsUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>
          }
          deleteMany: {
            args: Prisma.UpdateSettingsDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.UpdateSettingsUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.UpdateSettingsUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$UpdateSettingsPayload>
          }
          aggregate: {
            args: Prisma.UpdateSettingsAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateUpdateSettings>
          }
          groupBy: {
            args: Prisma.UpdateSettingsGroupByArgs<ExtArgs>,
            result: $Utils.Optional<UpdateSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UpdateSettingsCountArgs<ExtArgs>,
            result: $Utils.Optional<UpdateSettingsCountAggregateOutputType> | number
          }
        }
      }
      ShoppingList: {
        payload: Prisma.$ShoppingListPayload<ExtArgs>
        fields: Prisma.ShoppingListFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShoppingListFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShoppingListFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>
          }
          findFirst: {
            args: Prisma.ShoppingListFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShoppingListFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>
          }
          findMany: {
            args: Prisma.ShoppingListFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>[]
          }
          create: {
            args: Prisma.ShoppingListCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>
          }
          createMany: {
            args: Prisma.ShoppingListCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShoppingListCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>[]
          }
          delete: {
            args: Prisma.ShoppingListDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>
          }
          update: {
            args: Prisma.ShoppingListUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>
          }
          deleteMany: {
            args: Prisma.ShoppingListDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ShoppingListUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ShoppingListUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListPayload>
          }
          aggregate: {
            args: Prisma.ShoppingListAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateShoppingList>
          }
          groupBy: {
            args: Prisma.ShoppingListGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ShoppingListGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShoppingListCountArgs<ExtArgs>,
            result: $Utils.Optional<ShoppingListCountAggregateOutputType> | number
          }
        }
      }
      ShoppingListItem: {
        payload: Prisma.$ShoppingListItemPayload<ExtArgs>
        fields: Prisma.ShoppingListItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShoppingListItemFindUniqueArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShoppingListItemFindUniqueOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>
          }
          findFirst: {
            args: Prisma.ShoppingListItemFindFirstArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShoppingListItemFindFirstOrThrowArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>
          }
          findMany: {
            args: Prisma.ShoppingListItemFindManyArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>[]
          }
          create: {
            args: Prisma.ShoppingListItemCreateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>
          }
          createMany: {
            args: Prisma.ShoppingListItemCreateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.ShoppingListItemCreateManyAndReturnArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>[]
          }
          delete: {
            args: Prisma.ShoppingListItemDeleteArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>
          }
          update: {
            args: Prisma.ShoppingListItemUpdateArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>
          }
          deleteMany: {
            args: Prisma.ShoppingListItemDeleteManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          updateMany: {
            args: Prisma.ShoppingListItemUpdateManyArgs<ExtArgs>,
            result: Prisma.BatchPayload
          }
          upsert: {
            args: Prisma.ShoppingListItemUpsertArgs<ExtArgs>,
            result: $Utils.PayloadToResult<Prisma.$ShoppingListItemPayload>
          }
          aggregate: {
            args: Prisma.ShoppingListItemAggregateArgs<ExtArgs>,
            result: $Utils.Optional<AggregateShoppingListItem>
          }
          groupBy: {
            args: Prisma.ShoppingListItemGroupByArgs<ExtArgs>,
            result: $Utils.Optional<ShoppingListItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShoppingListItemCountArgs<ExtArgs>,
            result: $Utils.Optional<ShoppingListItemCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<'define', Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ProductAnalyticsCountOutputType
   */

  export type ProductAnalyticsCountOutputType = {
    ovocieAZeleniny: number
    grilovanie: number
    pecivo: number
    masoRybyALahodky: number
    mliecneVyrobkyAVajcia: number
    trvanlivePotraviny: number
    specialnaAZdravaVyziva: number
    mrazenePotraviny: number
    napoje: number
    alkohol: number
    starostlivostODomacnost: number
    zdravieAKrasa: number
  }

  export type ProductAnalyticsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ovocieAZeleniny?: boolean | ProductAnalyticsCountOutputTypeCountOvocieAZeleninyArgs
    grilovanie?: boolean | ProductAnalyticsCountOutputTypeCountGrilovanieArgs
    pecivo?: boolean | ProductAnalyticsCountOutputTypeCountPecivoArgs
    masoRybyALahodky?: boolean | ProductAnalyticsCountOutputTypeCountMasoRybyALahodkyArgs
    mliecneVyrobkyAVajcia?: boolean | ProductAnalyticsCountOutputTypeCountMliecneVyrobkyAVajciaArgs
    trvanlivePotraviny?: boolean | ProductAnalyticsCountOutputTypeCountTrvanlivePotravinyArgs
    specialnaAZdravaVyziva?: boolean | ProductAnalyticsCountOutputTypeCountSpecialnaAZdravaVyzivaArgs
    mrazenePotraviny?: boolean | ProductAnalyticsCountOutputTypeCountMrazenePotravinyArgs
    napoje?: boolean | ProductAnalyticsCountOutputTypeCountNapojeArgs
    alkohol?: boolean | ProductAnalyticsCountOutputTypeCountAlkoholArgs
    starostlivostODomacnost?: boolean | ProductAnalyticsCountOutputTypeCountStarostlivostODomacnostArgs
    zdravieAKrasa?: boolean | ProductAnalyticsCountOutputTypeCountZdravieAKrasaArgs
  }

  // Custom InputTypes
  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalyticsCountOutputType
     */
    select?: ProductAnalyticsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountOvocieAZeleninyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OvocieAZeleninyWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountGrilovanieArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrilovanieWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountPecivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecivoWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountMasoRybyALahodkyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MasoRybyALahodkyWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountMliecneVyrobkyAVajciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountTrvanlivePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrvanlivePotravinyWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountSpecialnaAZdravaVyzivaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountMrazenePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MrazenePotravinyWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountNapojeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NapojeWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountAlkoholArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlkoholWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountStarostlivostODomacnostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StarostlivostODomacnostWhereInput
  }

  /**
   * ProductAnalyticsCountOutputType without action
   */
  export type ProductAnalyticsCountOutputTypeCountZdravieAKrasaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ZdravieAKrasaWhereInput
  }


  /**
   * Count Type ZdravieAKrasaCountOutputType
   */

  export type ZdravieAKrasaCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type ZdravieAKrasaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | ZdravieAKrasaCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | ZdravieAKrasaCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * ZdravieAKrasaCountOutputType without action
   */
  export type ZdravieAKrasaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasaCountOutputType
     */
    select?: ZdravieAKrasaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ZdravieAKrasaCountOutputType without action
   */
  export type ZdravieAKrasaCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * ZdravieAKrasaCountOutputType without action
   */
  export type ZdravieAKrasaCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type OvocieAZeleninyCountOutputType
   */

  export type OvocieAZeleninyCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type OvocieAZeleninyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | OvocieAZeleninyCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | OvocieAZeleninyCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * OvocieAZeleninyCountOutputType without action
   */
  export type OvocieAZeleninyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleninyCountOutputType
     */
    select?: OvocieAZeleninyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OvocieAZeleninyCountOutputType without action
   */
  export type OvocieAZeleninyCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * OvocieAZeleninyCountOutputType without action
   */
  export type OvocieAZeleninyCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type GrilovanieCountOutputType
   */

  export type GrilovanieCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type GrilovanieCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | GrilovanieCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | GrilovanieCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * GrilovanieCountOutputType without action
   */
  export type GrilovanieCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the GrilovanieCountOutputType
     */
    select?: GrilovanieCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * GrilovanieCountOutputType without action
   */
  export type GrilovanieCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * GrilovanieCountOutputType without action
   */
  export type GrilovanieCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type StarostlivostODomacnostCountOutputType
   */

  export type StarostlivostODomacnostCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type StarostlivostODomacnostCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | StarostlivostODomacnostCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | StarostlivostODomacnostCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * StarostlivostODomacnostCountOutputType without action
   */
  export type StarostlivostODomacnostCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnostCountOutputType
     */
    select?: StarostlivostODomacnostCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * StarostlivostODomacnostCountOutputType without action
   */
  export type StarostlivostODomacnostCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * StarostlivostODomacnostCountOutputType without action
   */
  export type StarostlivostODomacnostCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type PecivoCountOutputType
   */

  export type PecivoCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type PecivoCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | PecivoCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | PecivoCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * PecivoCountOutputType without action
   */
  export type PecivoCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PecivoCountOutputType
     */
    select?: PecivoCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PecivoCountOutputType without action
   */
  export type PecivoCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * PecivoCountOutputType without action
   */
  export type PecivoCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type MasoRybyALahodkyCountOutputType
   */

  export type MasoRybyALahodkyCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type MasoRybyALahodkyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | MasoRybyALahodkyCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | MasoRybyALahodkyCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * MasoRybyALahodkyCountOutputType without action
   */
  export type MasoRybyALahodkyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodkyCountOutputType
     */
    select?: MasoRybyALahodkyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MasoRybyALahodkyCountOutputType without action
   */
  export type MasoRybyALahodkyCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * MasoRybyALahodkyCountOutputType without action
   */
  export type MasoRybyALahodkyCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type MliecneVyrobkyAVajciaCountOutputType
   */

  export type MliecneVyrobkyAVajciaCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type MliecneVyrobkyAVajciaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | MliecneVyrobkyAVajciaCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | MliecneVyrobkyAVajciaCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * MliecneVyrobkyAVajciaCountOutputType without action
   */
  export type MliecneVyrobkyAVajciaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajciaCountOutputType
     */
    select?: MliecneVyrobkyAVajciaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MliecneVyrobkyAVajciaCountOutputType without action
   */
  export type MliecneVyrobkyAVajciaCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * MliecneVyrobkyAVajciaCountOutputType without action
   */
  export type MliecneVyrobkyAVajciaCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type TrvanlivePotravinyCountOutputType
   */

  export type TrvanlivePotravinyCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type TrvanlivePotravinyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | TrvanlivePotravinyCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | TrvanlivePotravinyCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * TrvanlivePotravinyCountOutputType without action
   */
  export type TrvanlivePotravinyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotravinyCountOutputType
     */
    select?: TrvanlivePotravinyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TrvanlivePotravinyCountOutputType without action
   */
  export type TrvanlivePotravinyCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * TrvanlivePotravinyCountOutputType without action
   */
  export type TrvanlivePotravinyCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type SpecialnaAZdravaVyzivaCountOutputType
   */

  export type SpecialnaAZdravaVyzivaCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type SpecialnaAZdravaVyzivaCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | SpecialnaAZdravaVyzivaCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | SpecialnaAZdravaVyzivaCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * SpecialnaAZdravaVyzivaCountOutputType without action
   */
  export type SpecialnaAZdravaVyzivaCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyzivaCountOutputType
     */
    select?: SpecialnaAZdravaVyzivaCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SpecialnaAZdravaVyzivaCountOutputType without action
   */
  export type SpecialnaAZdravaVyzivaCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * SpecialnaAZdravaVyzivaCountOutputType without action
   */
  export type SpecialnaAZdravaVyzivaCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type MrazenePotravinyCountOutputType
   */

  export type MrazenePotravinyCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type MrazenePotravinyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | MrazenePotravinyCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | MrazenePotravinyCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * MrazenePotravinyCountOutputType without action
   */
  export type MrazenePotravinyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotravinyCountOutputType
     */
    select?: MrazenePotravinyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * MrazenePotravinyCountOutputType without action
   */
  export type MrazenePotravinyCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * MrazenePotravinyCountOutputType without action
   */
  export type MrazenePotravinyCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type NapojeCountOutputType
   */

  export type NapojeCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type NapojeCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | NapojeCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | NapojeCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * NapojeCountOutputType without action
   */
  export type NapojeCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the NapojeCountOutputType
     */
    select?: NapojeCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * NapojeCountOutputType without action
   */
  export type NapojeCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * NapojeCountOutputType without action
   */
  export type NapojeCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type AlkoholCountOutputType
   */

  export type AlkoholCountOutputType = {
    promotions: number
    ShoppingListItem: number
  }

  export type AlkoholCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | AlkoholCountOutputTypeCountPromotionsArgs
    ShoppingListItem?: boolean | AlkoholCountOutputTypeCountShoppingListItemArgs
  }

  // Custom InputTypes
  /**
   * AlkoholCountOutputType without action
   */
  export type AlkoholCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AlkoholCountOutputType
     */
    select?: AlkoholCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * AlkoholCountOutputType without action
   */
  export type AlkoholCountOutputTypeCountPromotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
  }

  /**
   * AlkoholCountOutputType without action
   */
  export type AlkoholCountOutputTypeCountShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Count Type ShoppingListCountOutputType
   */

  export type ShoppingListCountOutputType = {
    items: number
  }

  export type ShoppingListCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | ShoppingListCountOutputTypeCountItemsArgs
  }

  // Custom InputTypes
  /**
   * ShoppingListCountOutputType without action
   */
  export type ShoppingListCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListCountOutputType
     */
    select?: ShoppingListCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ShoppingListCountOutputType without action
   */
  export type ShoppingListCountOutputTypeCountItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
  }


  /**
   * Models
   */

  /**
   * Model Favorite
   */

  export type AggregateFavorite = {
    _count: FavoriteCountAggregateOutputType | null
    _avg: FavoriteAvgAggregateOutputType | null
    _sum: FavoriteSumAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  export type FavoriteAvgAggregateOutputType = {
    id: number | null
  }

  export type FavoriteSumAggregateOutputType = {
    id: number | null
  }

  export type FavoriteMinAggregateOutputType = {
    id: number | null
    userId: string | null
    productId: string | null
    category: string | null
    createdAt: Date | null
  }

  export type FavoriteMaxAggregateOutputType = {
    id: number | null
    userId: string | null
    productId: string | null
    category: string | null
    createdAt: Date | null
  }

  export type FavoriteCountAggregateOutputType = {
    id: number
    userId: number
    productId: number
    category: number
    createdAt: number
    _all: number
  }


  export type FavoriteAvgAggregateInputType = {
    id?: true
  }

  export type FavoriteSumAggregateInputType = {
    id?: true
  }

  export type FavoriteMinAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    category?: true
    createdAt?: true
  }

  export type FavoriteMaxAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    category?: true
    createdAt?: true
  }

  export type FavoriteCountAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    category?: true
    createdAt?: true
    _all?: true
  }

  export type FavoriteAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorite to aggregate.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Favorites
    **/
    _count?: true | FavoriteCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FavoriteAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FavoriteSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FavoriteMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FavoriteMaxAggregateInputType
  }

  export type GetFavoriteAggregateType<T extends FavoriteAggregateArgs> = {
        [P in keyof T & keyof AggregateFavorite]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFavorite[P]>
      : GetScalarType<T[P], AggregateFavorite[P]>
  }




  export type FavoriteGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FavoriteWhereInput
    orderBy?: FavoriteOrderByWithAggregationInput | FavoriteOrderByWithAggregationInput[]
    by: FavoriteScalarFieldEnum[] | FavoriteScalarFieldEnum
    having?: FavoriteScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FavoriteCountAggregateInputType | true
    _avg?: FavoriteAvgAggregateInputType
    _sum?: FavoriteSumAggregateInputType
    _min?: FavoriteMinAggregateInputType
    _max?: FavoriteMaxAggregateInputType
  }

  export type FavoriteGroupByOutputType = {
    id: number
    userId: string
    productId: string
    category: string
    createdAt: Date
    _count: FavoriteCountAggregateOutputType | null
    _avg: FavoriteAvgAggregateOutputType | null
    _sum: FavoriteSumAggregateOutputType | null
    _min: FavoriteMinAggregateOutputType | null
    _max: FavoriteMaxAggregateOutputType | null
  }

  type GetFavoriteGroupByPayload<T extends FavoriteGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FavoriteGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FavoriteGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
            : GetScalarType<T[P], FavoriteGroupByOutputType[P]>
        }
      >
    >


  export type FavoriteSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    category?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    category?: boolean
    createdAt?: boolean
  }, ExtArgs["result"]["favorite"]>

  export type FavoriteSelectScalar = {
    id?: boolean
    userId?: boolean
    productId?: boolean
    category?: boolean
    createdAt?: boolean
  }


  export type $FavoritePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Favorite"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      userId: string
      productId: string
      category: string
      createdAt: Date
    }, ExtArgs["result"]["favorite"]>
    composites: {}
  }

  type FavoriteGetPayload<S extends boolean | null | undefined | FavoriteDefaultArgs> = $Result.GetResult<Prisma.$FavoritePayload, S>

  type FavoriteCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FavoriteFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FavoriteCountAggregateInputType | true
    }

  export interface FavoriteDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Favorite'], meta: { name: 'Favorite' } }
    /**
     * Find zero or one Favorite that matches the filter.
     * @param {FavoriteFindUniqueArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends FavoriteFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, FavoriteFindUniqueArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Favorite that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FavoriteFindUniqueOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends FavoriteFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Favorite that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends FavoriteFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteFindFirstArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Favorite that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindFirstOrThrowArgs} args - Arguments to find a Favorite
     * @example
     * // Get one Favorite
     * const favorite = await prisma.favorite.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends FavoriteFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Favorites that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Favorites
     * const favorites = await prisma.favorite.findMany()
     * 
     * // Get first 10 Favorites
     * const favorites = await prisma.favorite.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const favoriteWithIdOnly = await prisma.favorite.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends FavoriteFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Favorite.
     * @param {FavoriteCreateArgs} args - Arguments to create a Favorite.
     * @example
     * // Create one Favorite
     * const Favorite = await prisma.favorite.create({
     *   data: {
     *     // ... data to create a Favorite
     *   }
     * })
     * 
    **/
    create<T extends FavoriteCreateArgs<ExtArgs>>(
      args: SelectSubset<T, FavoriteCreateArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Favorites.
     * @param {FavoriteCreateManyArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends FavoriteCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Favorites and returns the data saved in the database.
     * @param {FavoriteCreateManyAndReturnArgs} args - Arguments to create many Favorites.
     * @example
     * // Create many Favorites
     * const favorite = await prisma.favorite.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Favorites and only return the `id`
     * const favoriteWithIdOnly = await prisma.favorite.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends FavoriteCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Favorite.
     * @param {FavoriteDeleteArgs} args - Arguments to delete one Favorite.
     * @example
     * // Delete one Favorite
     * const Favorite = await prisma.favorite.delete({
     *   where: {
     *     // ... filter to delete one Favorite
     *   }
     * })
     * 
    **/
    delete<T extends FavoriteDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, FavoriteDeleteArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Favorite.
     * @param {FavoriteUpdateArgs} args - Arguments to update one Favorite.
     * @example
     * // Update one Favorite
     * const favorite = await prisma.favorite.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends FavoriteUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, FavoriteUpdateArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Favorites.
     * @param {FavoriteDeleteManyArgs} args - Arguments to filter Favorites to delete.
     * @example
     * // Delete a few Favorites
     * const { count } = await prisma.favorite.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends FavoriteDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, FavoriteDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Favorites
     * const favorite = await prisma.favorite.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends FavoriteUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, FavoriteUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Favorite.
     * @param {FavoriteUpsertArgs} args - Arguments to update or create a Favorite.
     * @example
     * // Update or create a Favorite
     * const favorite = await prisma.favorite.upsert({
     *   create: {
     *     // ... data to create a Favorite
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Favorite we want to update
     *   }
     * })
    **/
    upsert<T extends FavoriteUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, FavoriteUpsertArgs<ExtArgs>>
    ): Prisma__FavoriteClient<$Result.GetResult<Prisma.$FavoritePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Favorites.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteCountArgs} args - Arguments to filter Favorites to count.
     * @example
     * // Count the number of Favorites
     * const count = await prisma.favorite.count({
     *   where: {
     *     // ... the filter for the Favorites we want to count
     *   }
     * })
    **/
    count<T extends FavoriteCountArgs>(
      args?: Subset<T, FavoriteCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FavoriteCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FavoriteAggregateArgs>(args: Subset<T, FavoriteAggregateArgs>): Prisma.PrismaPromise<GetFavoriteAggregateType<T>>

    /**
     * Group by Favorite.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FavoriteGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FavoriteGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FavoriteGroupByArgs['orderBy'] }
        : { orderBy?: FavoriteGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FavoriteGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFavoriteGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Favorite model
   */
  readonly fields: FavoriteFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Favorite.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FavoriteClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Favorite model
   */ 
  interface FavoriteFieldRefs {
    readonly id: FieldRef<"Favorite", 'Int'>
    readonly userId: FieldRef<"Favorite", 'String'>
    readonly productId: FieldRef<"Favorite", 'String'>
    readonly category: FieldRef<"Favorite", 'String'>
    readonly createdAt: FieldRef<"Favorite", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Favorite findUnique
   */
  export type FavoriteFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findUniqueOrThrow
   */
  export type FavoriteFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite findFirst
   */
  export type FavoriteFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findFirstOrThrow
   */
  export type FavoriteFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Filter, which Favorite to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Favorites.
     */
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite findMany
   */
  export type FavoriteFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Filter, which Favorites to fetch.
     */
    where?: FavoriteWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Favorites to fetch.
     */
    orderBy?: FavoriteOrderByWithRelationInput | FavoriteOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Favorites.
     */
    cursor?: FavoriteWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Favorites from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Favorites.
     */
    skip?: number
    distinct?: FavoriteScalarFieldEnum | FavoriteScalarFieldEnum[]
  }

  /**
   * Favorite create
   */
  export type FavoriteCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * The data needed to create a Favorite.
     */
    data: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
  }

  /**
   * Favorite createMany
   */
  export type FavoriteCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorite createManyAndReturn
   */
  export type FavoriteCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Favorites.
     */
    data: FavoriteCreateManyInput | FavoriteCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Favorite update
   */
  export type FavoriteUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * The data needed to update a Favorite.
     */
    data: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
    /**
     * Choose, which Favorite to update.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite updateMany
   */
  export type FavoriteUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Favorites.
     */
    data: XOR<FavoriteUpdateManyMutationInput, FavoriteUncheckedUpdateManyInput>
    /**
     * Filter which Favorites to update
     */
    where?: FavoriteWhereInput
  }

  /**
   * Favorite upsert
   */
  export type FavoriteUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * The filter to search for the Favorite to update in case it exists.
     */
    where: FavoriteWhereUniqueInput
    /**
     * In case the Favorite found by the `where` argument doesn't exist, create a new Favorite with this data.
     */
    create: XOR<FavoriteCreateInput, FavoriteUncheckedCreateInput>
    /**
     * In case the Favorite was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FavoriteUpdateInput, FavoriteUncheckedUpdateInput>
  }

  /**
   * Favorite delete
   */
  export type FavoriteDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
    /**
     * Filter which Favorite to delete.
     */
    where: FavoriteWhereUniqueInput
  }

  /**
   * Favorite deleteMany
   */
  export type FavoriteDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Favorites to delete
     */
    where?: FavoriteWhereInput
  }

  /**
   * Favorite without action
   */
  export type FavoriteDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Favorite
     */
    select?: FavoriteSelect<ExtArgs> | null
  }


  /**
   * Model ProductAnalytics
   */

  export type AggregateProductAnalytics = {
    _count: ProductAnalyticsCountAggregateOutputType | null
    _avg: ProductAnalyticsAvgAggregateOutputType | null
    _sum: ProductAnalyticsSumAggregateOutputType | null
    _min: ProductAnalyticsMinAggregateOutputType | null
    _max: ProductAnalyticsMaxAggregateOutputType | null
  }

  export type ProductAnalyticsAvgAggregateOutputType = {
    id: number | null
    priceDrop: number | null
    priceIncrease: number | null
    percentageChange: number | null
    previousPrice: number | null
    averagePrice: number | null
    medianPrice: number | null
    priceStdDev: number | null
    promotionImpact: number | null
  }

  export type ProductAnalyticsSumAggregateOutputType = {
    id: number | null
    priceDrop: number | null
    priceIncrease: number | null
    percentageChange: number | null
    previousPrice: number | null
    averagePrice: number | null
    medianPrice: number | null
    priceStdDev: number | null
    promotionImpact: number | null
  }

  export type ProductAnalyticsMinAggregateOutputType = {
    id: number | null
    productId: string | null
    priceDrop: number | null
    priceIncrease: number | null
    percentageChange: number | null
    isBuyRecommended: string | null
    isOnSale: boolean | null
    previousPrice: number | null
    priceChangeStatus: string | null
    averagePrice: number | null
    medianPrice: number | null
    priceStdDev: number | null
    promotionImpact: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductAnalyticsMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    priceDrop: number | null
    priceIncrease: number | null
    percentageChange: number | null
    isBuyRecommended: string | null
    isOnSale: boolean | null
    previousPrice: number | null
    priceChangeStatus: string | null
    averagePrice: number | null
    medianPrice: number | null
    priceStdDev: number | null
    promotionImpact: number | null
    lastCalculated: Date | null
    createdAt: Date | null
    updatedAt: Date | null
  }

  export type ProductAnalyticsCountAggregateOutputType = {
    id: number
    productId: number
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: number
    isOnSale: number
    previousPrice: number
    priceChangeStatus: number
    averagePrice: number
    medianPrice: number
    priceStdDev: number
    promotionImpact: number
    lastCalculated: number
    createdAt: number
    updatedAt: number
    _all: number
  }


  export type ProductAnalyticsAvgAggregateInputType = {
    id?: true
    priceDrop?: true
    priceIncrease?: true
    percentageChange?: true
    previousPrice?: true
    averagePrice?: true
    medianPrice?: true
    priceStdDev?: true
    promotionImpact?: true
  }

  export type ProductAnalyticsSumAggregateInputType = {
    id?: true
    priceDrop?: true
    priceIncrease?: true
    percentageChange?: true
    previousPrice?: true
    averagePrice?: true
    medianPrice?: true
    priceStdDev?: true
    promotionImpact?: true
  }

  export type ProductAnalyticsMinAggregateInputType = {
    id?: true
    productId?: true
    priceDrop?: true
    priceIncrease?: true
    percentageChange?: true
    isBuyRecommended?: true
    isOnSale?: true
    previousPrice?: true
    priceChangeStatus?: true
    averagePrice?: true
    medianPrice?: true
    priceStdDev?: true
    promotionImpact?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductAnalyticsMaxAggregateInputType = {
    id?: true
    productId?: true
    priceDrop?: true
    priceIncrease?: true
    percentageChange?: true
    isBuyRecommended?: true
    isOnSale?: true
    previousPrice?: true
    priceChangeStatus?: true
    averagePrice?: true
    medianPrice?: true
    priceStdDev?: true
    promotionImpact?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
  }

  export type ProductAnalyticsCountAggregateInputType = {
    id?: true
    productId?: true
    priceDrop?: true
    priceIncrease?: true
    percentageChange?: true
    isBuyRecommended?: true
    isOnSale?: true
    previousPrice?: true
    priceChangeStatus?: true
    averagePrice?: true
    medianPrice?: true
    priceStdDev?: true
    promotionImpact?: true
    lastCalculated?: true
    createdAt?: true
    updatedAt?: true
    _all?: true
  }

  export type ProductAnalyticsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAnalytics to aggregate.
     */
    where?: ProductAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAnalytics to fetch.
     */
    orderBy?: ProductAnalyticsOrderByWithRelationInput | ProductAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductAnalytics
    **/
    _count?: true | ProductAnalyticsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAnalyticsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductAnalyticsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductAnalyticsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductAnalyticsMaxAggregateInputType
  }

  export type GetProductAnalyticsAggregateType<T extends ProductAnalyticsAggregateArgs> = {
        [P in keyof T & keyof AggregateProductAnalytics]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductAnalytics[P]>
      : GetScalarType<T[P], AggregateProductAnalytics[P]>
  }




  export type ProductAnalyticsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAnalyticsWhereInput
    orderBy?: ProductAnalyticsOrderByWithAggregationInput | ProductAnalyticsOrderByWithAggregationInput[]
    by: ProductAnalyticsScalarFieldEnum[] | ProductAnalyticsScalarFieldEnum
    having?: ProductAnalyticsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductAnalyticsCountAggregateInputType | true
    _avg?: ProductAnalyticsAvgAggregateInputType
    _sum?: ProductAnalyticsSumAggregateInputType
    _min?: ProductAnalyticsMinAggregateInputType
    _max?: ProductAnalyticsMaxAggregateInputType
  }

  export type ProductAnalyticsGroupByOutputType = {
    id: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice: number | null
    priceChangeStatus: string
    averagePrice: number | null
    medianPrice: number | null
    priceStdDev: number | null
    promotionImpact: number | null
    lastCalculated: Date
    createdAt: Date
    updatedAt: Date
    _count: ProductAnalyticsCountAggregateOutputType | null
    _avg: ProductAnalyticsAvgAggregateOutputType | null
    _sum: ProductAnalyticsSumAggregateOutputType | null
    _min: ProductAnalyticsMinAggregateOutputType | null
    _max: ProductAnalyticsMaxAggregateOutputType | null
  }

  type GetProductAnalyticsGroupByPayload<T extends ProductAnalyticsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductAnalyticsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductAnalyticsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductAnalyticsGroupByOutputType[P]>
            : GetScalarType<T[P], ProductAnalyticsGroupByOutputType[P]>
        }
      >
    >


  export type ProductAnalyticsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    priceDrop?: boolean
    priceIncrease?: boolean
    percentageChange?: boolean
    isBuyRecommended?: boolean
    isOnSale?: boolean
    previousPrice?: boolean
    priceChangeStatus?: boolean
    averagePrice?: boolean
    medianPrice?: boolean
    priceStdDev?: boolean
    promotionImpact?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    ovocieAZeleniny?: boolean | ProductAnalytics$ovocieAZeleninyArgs<ExtArgs>
    grilovanie?: boolean | ProductAnalytics$grilovanieArgs<ExtArgs>
    pecivo?: boolean | ProductAnalytics$pecivoArgs<ExtArgs>
    masoRybyALahodky?: boolean | ProductAnalytics$masoRybyALahodkyArgs<ExtArgs>
    mliecneVyrobkyAVajcia?: boolean | ProductAnalytics$mliecneVyrobkyAVajciaArgs<ExtArgs>
    trvanlivePotraviny?: boolean | ProductAnalytics$trvanlivePotravinyArgs<ExtArgs>
    specialnaAZdravaVyziva?: boolean | ProductAnalytics$specialnaAZdravaVyzivaArgs<ExtArgs>
    mrazenePotraviny?: boolean | ProductAnalytics$mrazenePotravinyArgs<ExtArgs>
    napoje?: boolean | ProductAnalytics$napojeArgs<ExtArgs>
    alkohol?: boolean | ProductAnalytics$alkoholArgs<ExtArgs>
    starostlivostODomacnost?: boolean | ProductAnalytics$starostlivostODomacnostArgs<ExtArgs>
    zdravieAKrasa?: boolean | ProductAnalytics$zdravieAKrasaArgs<ExtArgs>
    _count?: boolean | ProductAnalyticsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAnalytics"]>

  export type ProductAnalyticsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    priceDrop?: boolean
    priceIncrease?: boolean
    percentageChange?: boolean
    isBuyRecommended?: boolean
    isOnSale?: boolean
    previousPrice?: boolean
    priceChangeStatus?: boolean
    averagePrice?: boolean
    medianPrice?: boolean
    priceStdDev?: boolean
    promotionImpact?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["productAnalytics"]>

  export type ProductAnalyticsSelectScalar = {
    id?: boolean
    productId?: boolean
    priceDrop?: boolean
    priceIncrease?: boolean
    percentageChange?: boolean
    isBuyRecommended?: boolean
    isOnSale?: boolean
    previousPrice?: boolean
    priceChangeStatus?: boolean
    averagePrice?: boolean
    medianPrice?: boolean
    priceStdDev?: boolean
    promotionImpact?: boolean
    lastCalculated?: boolean
    createdAt?: boolean
    updatedAt?: boolean
  }

  export type ProductAnalyticsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ovocieAZeleniny?: boolean | ProductAnalytics$ovocieAZeleninyArgs<ExtArgs>
    grilovanie?: boolean | ProductAnalytics$grilovanieArgs<ExtArgs>
    pecivo?: boolean | ProductAnalytics$pecivoArgs<ExtArgs>
    masoRybyALahodky?: boolean | ProductAnalytics$masoRybyALahodkyArgs<ExtArgs>
    mliecneVyrobkyAVajcia?: boolean | ProductAnalytics$mliecneVyrobkyAVajciaArgs<ExtArgs>
    trvanlivePotraviny?: boolean | ProductAnalytics$trvanlivePotravinyArgs<ExtArgs>
    specialnaAZdravaVyziva?: boolean | ProductAnalytics$specialnaAZdravaVyzivaArgs<ExtArgs>
    mrazenePotraviny?: boolean | ProductAnalytics$mrazenePotravinyArgs<ExtArgs>
    napoje?: boolean | ProductAnalytics$napojeArgs<ExtArgs>
    alkohol?: boolean | ProductAnalytics$alkoholArgs<ExtArgs>
    starostlivostODomacnost?: boolean | ProductAnalytics$starostlivostODomacnostArgs<ExtArgs>
    zdravieAKrasa?: boolean | ProductAnalytics$zdravieAKrasaArgs<ExtArgs>
    _count?: boolean | ProductAnalyticsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ProductAnalyticsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ProductAnalyticsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductAnalytics"
    objects: {
      ovocieAZeleniny: Prisma.$OvocieAZeleninyPayload<ExtArgs>[]
      grilovanie: Prisma.$GrilovaniePayload<ExtArgs>[]
      pecivo: Prisma.$PecivoPayload<ExtArgs>[]
      masoRybyALahodky: Prisma.$MasoRybyALahodkyPayload<ExtArgs>[]
      mliecneVyrobkyAVajcia: Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>[]
      trvanlivePotraviny: Prisma.$TrvanlivePotravinyPayload<ExtArgs>[]
      specialnaAZdravaVyziva: Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>[]
      mrazenePotraviny: Prisma.$MrazenePotravinyPayload<ExtArgs>[]
      napoje: Prisma.$NapojePayload<ExtArgs>[]
      alkohol: Prisma.$AlkoholPayload<ExtArgs>[]
      starostlivostODomacnost: Prisma.$StarostlivostODomacnostPayload<ExtArgs>[]
      zdravieAKrasa: Prisma.$ZdravieAKrasaPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      priceDrop: number
      priceIncrease: number
      percentageChange: number
      isBuyRecommended: string
      isOnSale: boolean
      previousPrice: number | null
      priceChangeStatus: string
      averagePrice: number | null
      medianPrice: number | null
      priceStdDev: number | null
      promotionImpact: number | null
      lastCalculated: Date
      createdAt: Date
      updatedAt: Date
    }, ExtArgs["result"]["productAnalytics"]>
    composites: {}
  }

  type ProductAnalyticsGetPayload<S extends boolean | null | undefined | ProductAnalyticsDefaultArgs> = $Result.GetResult<Prisma.$ProductAnalyticsPayload, S>

  type ProductAnalyticsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductAnalyticsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductAnalyticsCountAggregateInputType | true
    }

  export interface ProductAnalyticsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductAnalytics'], meta: { name: 'ProductAnalytics' } }
    /**
     * Find zero or one ProductAnalytics that matches the filter.
     * @param {ProductAnalyticsFindUniqueArgs} args - Arguments to find a ProductAnalytics
     * @example
     * // Get one ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ProductAnalyticsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ProductAnalyticsFindUniqueArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ProductAnalytics that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductAnalyticsFindUniqueOrThrowArgs} args - Arguments to find a ProductAnalytics
     * @example
     * // Get one ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ProductAnalyticsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ProductAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsFindFirstArgs} args - Arguments to find a ProductAnalytics
     * @example
     * // Get one ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ProductAnalyticsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsFindFirstArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ProductAnalytics that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsFindFirstOrThrowArgs} args - Arguments to find a ProductAnalytics
     * @example
     * // Get one ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ProductAnalyticsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ProductAnalytics that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.findMany()
     * 
     * // Get first 10 ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productAnalyticsWithIdOnly = await prisma.productAnalytics.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ProductAnalyticsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ProductAnalytics.
     * @param {ProductAnalyticsCreateArgs} args - Arguments to create a ProductAnalytics.
     * @example
     * // Create one ProductAnalytics
     * const ProductAnalytics = await prisma.productAnalytics.create({
     *   data: {
     *     // ... data to create a ProductAnalytics
     *   }
     * })
     * 
    **/
    create<T extends ProductAnalyticsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ProductAnalyticsCreateArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ProductAnalytics.
     * @param {ProductAnalyticsCreateManyArgs} args - Arguments to create many ProductAnalytics.
     * @example
     * // Create many ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends ProductAnalyticsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ProductAnalytics and returns the data saved in the database.
     * @param {ProductAnalyticsCreateManyAndReturnArgs} args - Arguments to create many ProductAnalytics.
     * @example
     * // Create many ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ProductAnalytics and only return the `id`
     * const productAnalyticsWithIdOnly = await prisma.productAnalytics.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends ProductAnalyticsCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a ProductAnalytics.
     * @param {ProductAnalyticsDeleteArgs} args - Arguments to delete one ProductAnalytics.
     * @example
     * // Delete one ProductAnalytics
     * const ProductAnalytics = await prisma.productAnalytics.delete({
     *   where: {
     *     // ... filter to delete one ProductAnalytics
     *   }
     * })
     * 
    **/
    delete<T extends ProductAnalyticsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ProductAnalyticsDeleteArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ProductAnalytics.
     * @param {ProductAnalyticsUpdateArgs} args - Arguments to update one ProductAnalytics.
     * @example
     * // Update one ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ProductAnalyticsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ProductAnalyticsUpdateArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ProductAnalytics.
     * @param {ProductAnalyticsDeleteManyArgs} args - Arguments to filter ProductAnalytics to delete.
     * @example
     * // Delete a few ProductAnalytics
     * const { count } = await prisma.productAnalytics.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ProductAnalyticsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ProductAnalyticsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ProductAnalyticsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ProductAnalyticsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductAnalytics.
     * @param {ProductAnalyticsUpsertArgs} args - Arguments to update or create a ProductAnalytics.
     * @example
     * // Update or create a ProductAnalytics
     * const productAnalytics = await prisma.productAnalytics.upsert({
     *   create: {
     *     // ... data to create a ProductAnalytics
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductAnalytics we want to update
     *   }
     * })
    **/
    upsert<T extends ProductAnalyticsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ProductAnalyticsUpsertArgs<ExtArgs>>
    ): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ProductAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsCountArgs} args - Arguments to filter ProductAnalytics to count.
     * @example
     * // Count the number of ProductAnalytics
     * const count = await prisma.productAnalytics.count({
     *   where: {
     *     // ... the filter for the ProductAnalytics we want to count
     *   }
     * })
    **/
    count<T extends ProductAnalyticsCountArgs>(
      args?: Subset<T, ProductAnalyticsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductAnalyticsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAnalyticsAggregateArgs>(args: Subset<T, ProductAnalyticsAggregateArgs>): Prisma.PrismaPromise<GetProductAnalyticsAggregateType<T>>

    /**
     * Group by ProductAnalytics.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAnalyticsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductAnalyticsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductAnalyticsGroupByArgs['orderBy'] }
        : { orderBy?: ProductAnalyticsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductAnalyticsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductAnalyticsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductAnalytics model
   */
  readonly fields: ProductAnalyticsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductAnalytics.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductAnalyticsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    ovocieAZeleniny<T extends ProductAnalytics$ovocieAZeleninyArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$ovocieAZeleninyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findMany'> | Null>;

    grilovanie<T extends ProductAnalytics$grilovanieArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$grilovanieArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findMany'> | Null>;

    pecivo<T extends ProductAnalytics$pecivoArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$pecivoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findMany'> | Null>;

    masoRybyALahodky<T extends ProductAnalytics$masoRybyALahodkyArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$masoRybyALahodkyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findMany'> | Null>;

    mliecneVyrobkyAVajcia<T extends ProductAnalytics$mliecneVyrobkyAVajciaArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$mliecneVyrobkyAVajciaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findMany'> | Null>;

    trvanlivePotraviny<T extends ProductAnalytics$trvanlivePotravinyArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$trvanlivePotravinyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findMany'> | Null>;

    specialnaAZdravaVyziva<T extends ProductAnalytics$specialnaAZdravaVyzivaArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$specialnaAZdravaVyzivaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findMany'> | Null>;

    mrazenePotraviny<T extends ProductAnalytics$mrazenePotravinyArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$mrazenePotravinyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findMany'> | Null>;

    napoje<T extends ProductAnalytics$napojeArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$napojeArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findMany'> | Null>;

    alkohol<T extends ProductAnalytics$alkoholArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$alkoholArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findMany'> | Null>;

    starostlivostODomacnost<T extends ProductAnalytics$starostlivostODomacnostArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$starostlivostODomacnostArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findMany'> | Null>;

    zdravieAKrasa<T extends ProductAnalytics$zdravieAKrasaArgs<ExtArgs> = {}>(args?: Subset<T, ProductAnalytics$zdravieAKrasaArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ProductAnalytics model
   */ 
  interface ProductAnalyticsFieldRefs {
    readonly id: FieldRef<"ProductAnalytics", 'Int'>
    readonly productId: FieldRef<"ProductAnalytics", 'String'>
    readonly priceDrop: FieldRef<"ProductAnalytics", 'Float'>
    readonly priceIncrease: FieldRef<"ProductAnalytics", 'Float'>
    readonly percentageChange: FieldRef<"ProductAnalytics", 'Float'>
    readonly isBuyRecommended: FieldRef<"ProductAnalytics", 'String'>
    readonly isOnSale: FieldRef<"ProductAnalytics", 'Boolean'>
    readonly previousPrice: FieldRef<"ProductAnalytics", 'Float'>
    readonly priceChangeStatus: FieldRef<"ProductAnalytics", 'String'>
    readonly averagePrice: FieldRef<"ProductAnalytics", 'Float'>
    readonly medianPrice: FieldRef<"ProductAnalytics", 'Float'>
    readonly priceStdDev: FieldRef<"ProductAnalytics", 'Float'>
    readonly promotionImpact: FieldRef<"ProductAnalytics", 'Float'>
    readonly lastCalculated: FieldRef<"ProductAnalytics", 'DateTime'>
    readonly createdAt: FieldRef<"ProductAnalytics", 'DateTime'>
    readonly updatedAt: FieldRef<"ProductAnalytics", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ProductAnalytics findUnique
   */
  export type ProductAnalyticsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ProductAnalytics to fetch.
     */
    where: ProductAnalyticsWhereUniqueInput
  }

  /**
   * ProductAnalytics findUniqueOrThrow
   */
  export type ProductAnalyticsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ProductAnalytics to fetch.
     */
    where: ProductAnalyticsWhereUniqueInput
  }

  /**
   * ProductAnalytics findFirst
   */
  export type ProductAnalyticsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ProductAnalytics to fetch.
     */
    where?: ProductAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAnalytics to fetch.
     */
    orderBy?: ProductAnalyticsOrderByWithRelationInput | ProductAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAnalytics.
     */
    cursor?: ProductAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAnalytics.
     */
    distinct?: ProductAnalyticsScalarFieldEnum | ProductAnalyticsScalarFieldEnum[]
  }

  /**
   * ProductAnalytics findFirstOrThrow
   */
  export type ProductAnalyticsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ProductAnalytics to fetch.
     */
    where?: ProductAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAnalytics to fetch.
     */
    orderBy?: ProductAnalyticsOrderByWithRelationInput | ProductAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAnalytics.
     */
    cursor?: ProductAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAnalytics.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAnalytics.
     */
    distinct?: ProductAnalyticsScalarFieldEnum | ProductAnalyticsScalarFieldEnum[]
  }

  /**
   * ProductAnalytics findMany
   */
  export type ProductAnalyticsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * Filter, which ProductAnalytics to fetch.
     */
    where?: ProductAnalyticsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAnalytics to fetch.
     */
    orderBy?: ProductAnalyticsOrderByWithRelationInput | ProductAnalyticsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductAnalytics.
     */
    cursor?: ProductAnalyticsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAnalytics from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAnalytics.
     */
    skip?: number
    distinct?: ProductAnalyticsScalarFieldEnum | ProductAnalyticsScalarFieldEnum[]
  }

  /**
   * ProductAnalytics create
   */
  export type ProductAnalyticsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductAnalytics.
     */
    data: XOR<ProductAnalyticsCreateInput, ProductAnalyticsUncheckedCreateInput>
  }

  /**
   * ProductAnalytics createMany
   */
  export type ProductAnalyticsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductAnalytics.
     */
    data: ProductAnalyticsCreateManyInput | ProductAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductAnalytics createManyAndReturn
   */
  export type ProductAnalyticsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ProductAnalytics.
     */
    data: ProductAnalyticsCreateManyInput | ProductAnalyticsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductAnalytics update
   */
  export type ProductAnalyticsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductAnalytics.
     */
    data: XOR<ProductAnalyticsUpdateInput, ProductAnalyticsUncheckedUpdateInput>
    /**
     * Choose, which ProductAnalytics to update.
     */
    where: ProductAnalyticsWhereUniqueInput
  }

  /**
   * ProductAnalytics updateMany
   */
  export type ProductAnalyticsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductAnalytics.
     */
    data: XOR<ProductAnalyticsUpdateManyMutationInput, ProductAnalyticsUncheckedUpdateManyInput>
    /**
     * Filter which ProductAnalytics to update
     */
    where?: ProductAnalyticsWhereInput
  }

  /**
   * ProductAnalytics upsert
   */
  export type ProductAnalyticsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductAnalytics to update in case it exists.
     */
    where: ProductAnalyticsWhereUniqueInput
    /**
     * In case the ProductAnalytics found by the `where` argument doesn't exist, create a new ProductAnalytics with this data.
     */
    create: XOR<ProductAnalyticsCreateInput, ProductAnalyticsUncheckedCreateInput>
    /**
     * In case the ProductAnalytics was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductAnalyticsUpdateInput, ProductAnalyticsUncheckedUpdateInput>
  }

  /**
   * ProductAnalytics delete
   */
  export type ProductAnalyticsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    /**
     * Filter which ProductAnalytics to delete.
     */
    where: ProductAnalyticsWhereUniqueInput
  }

  /**
   * ProductAnalytics deleteMany
   */
  export type ProductAnalyticsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAnalytics to delete
     */
    where?: ProductAnalyticsWhereInput
  }

  /**
   * ProductAnalytics.ovocieAZeleniny
   */
  export type ProductAnalytics$ovocieAZeleninyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    where?: OvocieAZeleninyWhereInput
    orderBy?: OvocieAZeleninyOrderByWithRelationInput | OvocieAZeleninyOrderByWithRelationInput[]
    cursor?: OvocieAZeleninyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OvocieAZeleninyScalarFieldEnum | OvocieAZeleninyScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.grilovanie
   */
  export type ProductAnalytics$grilovanieArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    where?: GrilovanieWhereInput
    orderBy?: GrilovanieOrderByWithRelationInput | GrilovanieOrderByWithRelationInput[]
    cursor?: GrilovanieWhereUniqueInput
    take?: number
    skip?: number
    distinct?: GrilovanieScalarFieldEnum | GrilovanieScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.pecivo
   */
  export type ProductAnalytics$pecivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    where?: PecivoWhereInput
    orderBy?: PecivoOrderByWithRelationInput | PecivoOrderByWithRelationInput[]
    cursor?: PecivoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PecivoScalarFieldEnum | PecivoScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.masoRybyALahodky
   */
  export type ProductAnalytics$masoRybyALahodkyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    where?: MasoRybyALahodkyWhereInput
    orderBy?: MasoRybyALahodkyOrderByWithRelationInput | MasoRybyALahodkyOrderByWithRelationInput[]
    cursor?: MasoRybyALahodkyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MasoRybyALahodkyScalarFieldEnum | MasoRybyALahodkyScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.mliecneVyrobkyAVajcia
   */
  export type ProductAnalytics$mliecneVyrobkyAVajciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    where?: MliecneVyrobkyAVajciaWhereInput
    orderBy?: MliecneVyrobkyAVajciaOrderByWithRelationInput | MliecneVyrobkyAVajciaOrderByWithRelationInput[]
    cursor?: MliecneVyrobkyAVajciaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MliecneVyrobkyAVajciaScalarFieldEnum | MliecneVyrobkyAVajciaScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.trvanlivePotraviny
   */
  export type ProductAnalytics$trvanlivePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    where?: TrvanlivePotravinyWhereInput
    orderBy?: TrvanlivePotravinyOrderByWithRelationInput | TrvanlivePotravinyOrderByWithRelationInput[]
    cursor?: TrvanlivePotravinyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: TrvanlivePotravinyScalarFieldEnum | TrvanlivePotravinyScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.specialnaAZdravaVyziva
   */
  export type ProductAnalytics$specialnaAZdravaVyzivaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    where?: SpecialnaAZdravaVyzivaWhereInput
    orderBy?: SpecialnaAZdravaVyzivaOrderByWithRelationInput | SpecialnaAZdravaVyzivaOrderByWithRelationInput[]
    cursor?: SpecialnaAZdravaVyzivaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SpecialnaAZdravaVyzivaScalarFieldEnum | SpecialnaAZdravaVyzivaScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.mrazenePotraviny
   */
  export type ProductAnalytics$mrazenePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    where?: MrazenePotravinyWhereInput
    orderBy?: MrazenePotravinyOrderByWithRelationInput | MrazenePotravinyOrderByWithRelationInput[]
    cursor?: MrazenePotravinyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: MrazenePotravinyScalarFieldEnum | MrazenePotravinyScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.napoje
   */
  export type ProductAnalytics$napojeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    where?: NapojeWhereInput
    orderBy?: NapojeOrderByWithRelationInput | NapojeOrderByWithRelationInput[]
    cursor?: NapojeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: NapojeScalarFieldEnum | NapojeScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.alkohol
   */
  export type ProductAnalytics$alkoholArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    where?: AlkoholWhereInput
    orderBy?: AlkoholOrderByWithRelationInput | AlkoholOrderByWithRelationInput[]
    cursor?: AlkoholWhereUniqueInput
    take?: number
    skip?: number
    distinct?: AlkoholScalarFieldEnum | AlkoholScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.starostlivostODomacnost
   */
  export type ProductAnalytics$starostlivostODomacnostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    where?: StarostlivostODomacnostWhereInput
    orderBy?: StarostlivostODomacnostOrderByWithRelationInput | StarostlivostODomacnostOrderByWithRelationInput[]
    cursor?: StarostlivostODomacnostWhereUniqueInput
    take?: number
    skip?: number
    distinct?: StarostlivostODomacnostScalarFieldEnum | StarostlivostODomacnostScalarFieldEnum[]
  }

  /**
   * ProductAnalytics.zdravieAKrasa
   */
  export type ProductAnalytics$zdravieAKrasaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    where?: ZdravieAKrasaWhereInput
    orderBy?: ZdravieAKrasaOrderByWithRelationInput | ZdravieAKrasaOrderByWithRelationInput[]
    cursor?: ZdravieAKrasaWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ZdravieAKrasaScalarFieldEnum | ZdravieAKrasaScalarFieldEnum[]
  }

  /**
   * ProductAnalytics without action
   */
  export type ProductAnalyticsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
  }


  /**
   * Model ZdravieAKrasa
   */

  export type AggregateZdravieAKrasa = {
    _count: ZdravieAKrasaCountAggregateOutputType | null
    _avg: ZdravieAKrasaAvgAggregateOutputType | null
    _sum: ZdravieAKrasaSumAggregateOutputType | null
    _min: ZdravieAKrasaMinAggregateOutputType | null
    _max: ZdravieAKrasaMaxAggregateOutputType | null
  }

  export type ZdravieAKrasaAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type ZdravieAKrasaSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type ZdravieAKrasaMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type ZdravieAKrasaMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type ZdravieAKrasaCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    analyticsId: number
    productAnalyticsId: number
    _all: number
  }


  export type ZdravieAKrasaAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type ZdravieAKrasaSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type ZdravieAKrasaMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type ZdravieAKrasaMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type ZdravieAKrasaCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    analyticsId?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type ZdravieAKrasaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ZdravieAKrasa to aggregate.
     */
    where?: ZdravieAKrasaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZdravieAKrasas to fetch.
     */
    orderBy?: ZdravieAKrasaOrderByWithRelationInput | ZdravieAKrasaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ZdravieAKrasaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZdravieAKrasas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZdravieAKrasas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ZdravieAKrasas
    **/
    _count?: true | ZdravieAKrasaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ZdravieAKrasaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ZdravieAKrasaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ZdravieAKrasaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ZdravieAKrasaMaxAggregateInputType
  }

  export type GetZdravieAKrasaAggregateType<T extends ZdravieAKrasaAggregateArgs> = {
        [P in keyof T & keyof AggregateZdravieAKrasa]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateZdravieAKrasa[P]>
      : GetScalarType<T[P], AggregateZdravieAKrasa[P]>
  }




  export type ZdravieAKrasaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ZdravieAKrasaWhereInput
    orderBy?: ZdravieAKrasaOrderByWithAggregationInput | ZdravieAKrasaOrderByWithAggregationInput[]
    by: ZdravieAKrasaScalarFieldEnum[] | ZdravieAKrasaScalarFieldEnum
    having?: ZdravieAKrasaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ZdravieAKrasaCountAggregateInputType | true
    _avg?: ZdravieAKrasaAvgAggregateInputType
    _sum?: ZdravieAKrasaSumAggregateInputType
    _min?: ZdravieAKrasaMinAggregateInputType
    _max?: ZdravieAKrasaMaxAggregateInputType
  }

  export type ZdravieAKrasaGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId: number | null
    productAnalyticsId: number | null
    _count: ZdravieAKrasaCountAggregateOutputType | null
    _avg: ZdravieAKrasaAvgAggregateOutputType | null
    _sum: ZdravieAKrasaSumAggregateOutputType | null
    _min: ZdravieAKrasaMinAggregateOutputType | null
    _max: ZdravieAKrasaMaxAggregateOutputType | null
  }

  type GetZdravieAKrasaGroupByPayload<T extends ZdravieAKrasaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ZdravieAKrasaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ZdravieAKrasaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ZdravieAKrasaGroupByOutputType[P]>
            : GetScalarType<T[P], ZdravieAKrasaGroupByOutputType[P]>
        }
      >
    >


  export type ZdravieAKrasaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    analyticsId?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | ZdravieAKrasa$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | ZdravieAKrasa$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | ZdravieAKrasaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["zdravieAKrasa"]>

  export type ZdravieAKrasaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    analyticsId?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["zdravieAKrasa"]>

  export type ZdravieAKrasaSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    analyticsId?: boolean
    productAnalyticsId?: boolean
  }

  export type ZdravieAKrasaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | ZdravieAKrasa$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | ZdravieAKrasa$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | ZdravieAKrasaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ZdravieAKrasaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs>
  }

  export type $ZdravieAKrasaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ZdravieAKrasa"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      analyticsId: number | null
      productAnalyticsId: number | null
    }, ExtArgs["result"]["zdravieAKrasa"]>
    composites: {}
  }

  type ZdravieAKrasaGetPayload<S extends boolean | null | undefined | ZdravieAKrasaDefaultArgs> = $Result.GetResult<Prisma.$ZdravieAKrasaPayload, S>

  type ZdravieAKrasaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ZdravieAKrasaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ZdravieAKrasaCountAggregateInputType | true
    }

  export interface ZdravieAKrasaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ZdravieAKrasa'], meta: { name: 'ZdravieAKrasa' } }
    /**
     * Find zero or one ZdravieAKrasa that matches the filter.
     * @param {ZdravieAKrasaFindUniqueArgs} args - Arguments to find a ZdravieAKrasa
     * @example
     * // Get one ZdravieAKrasa
     * const zdravieAKrasa = await prisma.zdravieAKrasa.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ZdravieAKrasaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ZdravieAKrasaFindUniqueArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ZdravieAKrasa that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ZdravieAKrasaFindUniqueOrThrowArgs} args - Arguments to find a ZdravieAKrasa
     * @example
     * // Get one ZdravieAKrasa
     * const zdravieAKrasa = await prisma.zdravieAKrasa.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ZdravieAKrasaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ZdravieAKrasa that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaFindFirstArgs} args - Arguments to find a ZdravieAKrasa
     * @example
     * // Get one ZdravieAKrasa
     * const zdravieAKrasa = await prisma.zdravieAKrasa.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ZdravieAKrasaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaFindFirstArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ZdravieAKrasa that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaFindFirstOrThrowArgs} args - Arguments to find a ZdravieAKrasa
     * @example
     * // Get one ZdravieAKrasa
     * const zdravieAKrasa = await prisma.zdravieAKrasa.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ZdravieAKrasaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ZdravieAKrasas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ZdravieAKrasas
     * const zdravieAKrasas = await prisma.zdravieAKrasa.findMany()
     * 
     * // Get first 10 ZdravieAKrasas
     * const zdravieAKrasas = await prisma.zdravieAKrasa.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const zdravieAKrasaWithIdOnly = await prisma.zdravieAKrasa.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ZdravieAKrasaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ZdravieAKrasa.
     * @param {ZdravieAKrasaCreateArgs} args - Arguments to create a ZdravieAKrasa.
     * @example
     * // Create one ZdravieAKrasa
     * const ZdravieAKrasa = await prisma.zdravieAKrasa.create({
     *   data: {
     *     // ... data to create a ZdravieAKrasa
     *   }
     * })
     * 
    **/
    create<T extends ZdravieAKrasaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ZdravieAKrasaCreateArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ZdravieAKrasas.
     * @param {ZdravieAKrasaCreateManyArgs} args - Arguments to create many ZdravieAKrasas.
     * @example
     * // Create many ZdravieAKrasas
     * const zdravieAKrasa = await prisma.zdravieAKrasa.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends ZdravieAKrasaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ZdravieAKrasas and returns the data saved in the database.
     * @param {ZdravieAKrasaCreateManyAndReturnArgs} args - Arguments to create many ZdravieAKrasas.
     * @example
     * // Create many ZdravieAKrasas
     * const zdravieAKrasa = await prisma.zdravieAKrasa.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ZdravieAKrasas and only return the `id`
     * const zdravieAKrasaWithIdOnly = await prisma.zdravieAKrasa.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends ZdravieAKrasaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a ZdravieAKrasa.
     * @param {ZdravieAKrasaDeleteArgs} args - Arguments to delete one ZdravieAKrasa.
     * @example
     * // Delete one ZdravieAKrasa
     * const ZdravieAKrasa = await prisma.zdravieAKrasa.delete({
     *   where: {
     *     // ... filter to delete one ZdravieAKrasa
     *   }
     * })
     * 
    **/
    delete<T extends ZdravieAKrasaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ZdravieAKrasaDeleteArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ZdravieAKrasa.
     * @param {ZdravieAKrasaUpdateArgs} args - Arguments to update one ZdravieAKrasa.
     * @example
     * // Update one ZdravieAKrasa
     * const zdravieAKrasa = await prisma.zdravieAKrasa.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ZdravieAKrasaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ZdravieAKrasaUpdateArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ZdravieAKrasas.
     * @param {ZdravieAKrasaDeleteManyArgs} args - Arguments to filter ZdravieAKrasas to delete.
     * @example
     * // Delete a few ZdravieAKrasas
     * const { count } = await prisma.zdravieAKrasa.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ZdravieAKrasaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ZdravieAKrasaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ZdravieAKrasas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ZdravieAKrasas
     * const zdravieAKrasa = await prisma.zdravieAKrasa.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ZdravieAKrasaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ZdravieAKrasaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ZdravieAKrasa.
     * @param {ZdravieAKrasaUpsertArgs} args - Arguments to update or create a ZdravieAKrasa.
     * @example
     * // Update or create a ZdravieAKrasa
     * const zdravieAKrasa = await prisma.zdravieAKrasa.upsert({
     *   create: {
     *     // ... data to create a ZdravieAKrasa
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ZdravieAKrasa we want to update
     *   }
     * })
    **/
    upsert<T extends ZdravieAKrasaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ZdravieAKrasaUpsertArgs<ExtArgs>>
    ): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ZdravieAKrasas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaCountArgs} args - Arguments to filter ZdravieAKrasas to count.
     * @example
     * // Count the number of ZdravieAKrasas
     * const count = await prisma.zdravieAKrasa.count({
     *   where: {
     *     // ... the filter for the ZdravieAKrasas we want to count
     *   }
     * })
    **/
    count<T extends ZdravieAKrasaCountArgs>(
      args?: Subset<T, ZdravieAKrasaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ZdravieAKrasaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ZdravieAKrasa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ZdravieAKrasaAggregateArgs>(args: Subset<T, ZdravieAKrasaAggregateArgs>): Prisma.PrismaPromise<GetZdravieAKrasaAggregateType<T>>

    /**
     * Group by ZdravieAKrasa.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ZdravieAKrasaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ZdravieAKrasaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ZdravieAKrasaGroupByArgs['orderBy'] }
        : { orderBy?: ZdravieAKrasaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ZdravieAKrasaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetZdravieAKrasaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ZdravieAKrasa model
   */
  readonly fields: ZdravieAKrasaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ZdravieAKrasa.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ZdravieAKrasaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends ZdravieAKrasa$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, ZdravieAKrasa$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends ZdravieAKrasa$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, ZdravieAKrasa$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ZdravieAKrasa model
   */ 
  interface ZdravieAKrasaFieldRefs {
    readonly id: FieldRef<"ZdravieAKrasa", 'Int'>
    readonly productId: FieldRef<"ZdravieAKrasa", 'String'>
    readonly title: FieldRef<"ZdravieAKrasa", 'String'>
    readonly price: FieldRef<"ZdravieAKrasa", 'Float'>
    readonly unitPrice: FieldRef<"ZdravieAKrasa", 'Float'>
    readonly imageUrl: FieldRef<"ZdravieAKrasa", 'String'>
    readonly unitOfMeasure: FieldRef<"ZdravieAKrasa", 'String'>
    readonly isForSale: FieldRef<"ZdravieAKrasa", 'Boolean'>
    readonly aisleName: FieldRef<"ZdravieAKrasa", 'String'>
    readonly lastUpdated: FieldRef<"ZdravieAKrasa", 'DateTime'>
    readonly category: FieldRef<"ZdravieAKrasa", 'String'>
    readonly superDepartmentName: FieldRef<"ZdravieAKrasa", 'String'>
    readonly hasPromotions: FieldRef<"ZdravieAKrasa", 'Boolean'>
    readonly analyticsId: FieldRef<"ZdravieAKrasa", 'Int'>
    readonly productAnalyticsId: FieldRef<"ZdravieAKrasa", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ZdravieAKrasa findUnique
   */
  export type ZdravieAKrasaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * Filter, which ZdravieAKrasa to fetch.
     */
    where: ZdravieAKrasaWhereUniqueInput
  }

  /**
   * ZdravieAKrasa findUniqueOrThrow
   */
  export type ZdravieAKrasaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * Filter, which ZdravieAKrasa to fetch.
     */
    where: ZdravieAKrasaWhereUniqueInput
  }

  /**
   * ZdravieAKrasa findFirst
   */
  export type ZdravieAKrasaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * Filter, which ZdravieAKrasa to fetch.
     */
    where?: ZdravieAKrasaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZdravieAKrasas to fetch.
     */
    orderBy?: ZdravieAKrasaOrderByWithRelationInput | ZdravieAKrasaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ZdravieAKrasas.
     */
    cursor?: ZdravieAKrasaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZdravieAKrasas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZdravieAKrasas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ZdravieAKrasas.
     */
    distinct?: ZdravieAKrasaScalarFieldEnum | ZdravieAKrasaScalarFieldEnum[]
  }

  /**
   * ZdravieAKrasa findFirstOrThrow
   */
  export type ZdravieAKrasaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * Filter, which ZdravieAKrasa to fetch.
     */
    where?: ZdravieAKrasaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZdravieAKrasas to fetch.
     */
    orderBy?: ZdravieAKrasaOrderByWithRelationInput | ZdravieAKrasaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ZdravieAKrasas.
     */
    cursor?: ZdravieAKrasaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZdravieAKrasas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZdravieAKrasas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ZdravieAKrasas.
     */
    distinct?: ZdravieAKrasaScalarFieldEnum | ZdravieAKrasaScalarFieldEnum[]
  }

  /**
   * ZdravieAKrasa findMany
   */
  export type ZdravieAKrasaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * Filter, which ZdravieAKrasas to fetch.
     */
    where?: ZdravieAKrasaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ZdravieAKrasas to fetch.
     */
    orderBy?: ZdravieAKrasaOrderByWithRelationInput | ZdravieAKrasaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ZdravieAKrasas.
     */
    cursor?: ZdravieAKrasaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ZdravieAKrasas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ZdravieAKrasas.
     */
    skip?: number
    distinct?: ZdravieAKrasaScalarFieldEnum | ZdravieAKrasaScalarFieldEnum[]
  }

  /**
   * ZdravieAKrasa create
   */
  export type ZdravieAKrasaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * The data needed to create a ZdravieAKrasa.
     */
    data: XOR<ZdravieAKrasaCreateInput, ZdravieAKrasaUncheckedCreateInput>
  }

  /**
   * ZdravieAKrasa createMany
   */
  export type ZdravieAKrasaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ZdravieAKrasas.
     */
    data: ZdravieAKrasaCreateManyInput | ZdravieAKrasaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ZdravieAKrasa createManyAndReturn
   */
  export type ZdravieAKrasaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ZdravieAKrasas.
     */
    data: ZdravieAKrasaCreateManyInput | ZdravieAKrasaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ZdravieAKrasa update
   */
  export type ZdravieAKrasaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * The data needed to update a ZdravieAKrasa.
     */
    data: XOR<ZdravieAKrasaUpdateInput, ZdravieAKrasaUncheckedUpdateInput>
    /**
     * Choose, which ZdravieAKrasa to update.
     */
    where: ZdravieAKrasaWhereUniqueInput
  }

  /**
   * ZdravieAKrasa updateMany
   */
  export type ZdravieAKrasaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ZdravieAKrasas.
     */
    data: XOR<ZdravieAKrasaUpdateManyMutationInput, ZdravieAKrasaUncheckedUpdateManyInput>
    /**
     * Filter which ZdravieAKrasas to update
     */
    where?: ZdravieAKrasaWhereInput
  }

  /**
   * ZdravieAKrasa upsert
   */
  export type ZdravieAKrasaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * The filter to search for the ZdravieAKrasa to update in case it exists.
     */
    where: ZdravieAKrasaWhereUniqueInput
    /**
     * In case the ZdravieAKrasa found by the `where` argument doesn't exist, create a new ZdravieAKrasa with this data.
     */
    create: XOR<ZdravieAKrasaCreateInput, ZdravieAKrasaUncheckedCreateInput>
    /**
     * In case the ZdravieAKrasa was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ZdravieAKrasaUpdateInput, ZdravieAKrasaUncheckedUpdateInput>
  }

  /**
   * ZdravieAKrasa delete
   */
  export type ZdravieAKrasaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    /**
     * Filter which ZdravieAKrasa to delete.
     */
    where: ZdravieAKrasaWhereUniqueInput
  }

  /**
   * ZdravieAKrasa deleteMany
   */
  export type ZdravieAKrasaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ZdravieAKrasas to delete
     */
    where?: ZdravieAKrasaWhereInput
  }

  /**
   * ZdravieAKrasa.promotions
   */
  export type ZdravieAKrasa$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * ZdravieAKrasa.ProductAnalytics
   */
  export type ZdravieAKrasa$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * ZdravieAKrasa.ShoppingListItem
   */
  export type ZdravieAKrasa$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * ZdravieAKrasa without action
   */
  export type ZdravieAKrasaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
  }


  /**
   * Model OvocieAZeleniny
   */

  export type AggregateOvocieAZeleniny = {
    _count: OvocieAZeleninyCountAggregateOutputType | null
    _avg: OvocieAZeleninyAvgAggregateOutputType | null
    _sum: OvocieAZeleninySumAggregateOutputType | null
    _min: OvocieAZeleninyMinAggregateOutputType | null
    _max: OvocieAZeleninyMaxAggregateOutputType | null
  }

  export type OvocieAZeleninyAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type OvocieAZeleninySumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type OvocieAZeleninyMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type OvocieAZeleninyMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    analyticsId: number | null
    productAnalyticsId: number | null
  }

  export type OvocieAZeleninyCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    analyticsId: number
    productAnalyticsId: number
    _all: number
  }


  export type OvocieAZeleninyAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type OvocieAZeleninySumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type OvocieAZeleninyMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type OvocieAZeleninyMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    analyticsId?: true
    productAnalyticsId?: true
  }

  export type OvocieAZeleninyCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    analyticsId?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type OvocieAZeleninyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OvocieAZeleniny to aggregate.
     */
    where?: OvocieAZeleninyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OvocieAZeleninies to fetch.
     */
    orderBy?: OvocieAZeleninyOrderByWithRelationInput | OvocieAZeleninyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OvocieAZeleninyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OvocieAZeleninies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OvocieAZeleninies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OvocieAZeleninies
    **/
    _count?: true | OvocieAZeleninyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OvocieAZeleninyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OvocieAZeleninySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OvocieAZeleninyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OvocieAZeleninyMaxAggregateInputType
  }

  export type GetOvocieAZeleninyAggregateType<T extends OvocieAZeleninyAggregateArgs> = {
        [P in keyof T & keyof AggregateOvocieAZeleniny]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOvocieAZeleniny[P]>
      : GetScalarType<T[P], AggregateOvocieAZeleniny[P]>
  }




  export type OvocieAZeleninyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OvocieAZeleninyWhereInput
    orderBy?: OvocieAZeleninyOrderByWithAggregationInput | OvocieAZeleninyOrderByWithAggregationInput[]
    by: OvocieAZeleninyScalarFieldEnum[] | OvocieAZeleninyScalarFieldEnum
    having?: OvocieAZeleninyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OvocieAZeleninyCountAggregateInputType | true
    _avg?: OvocieAZeleninyAvgAggregateInputType
    _sum?: OvocieAZeleninySumAggregateInputType
    _min?: OvocieAZeleninyMinAggregateInputType
    _max?: OvocieAZeleninyMaxAggregateInputType
  }

  export type OvocieAZeleninyGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId: number | null
    productAnalyticsId: number | null
    _count: OvocieAZeleninyCountAggregateOutputType | null
    _avg: OvocieAZeleninyAvgAggregateOutputType | null
    _sum: OvocieAZeleninySumAggregateOutputType | null
    _min: OvocieAZeleninyMinAggregateOutputType | null
    _max: OvocieAZeleninyMaxAggregateOutputType | null
  }

  type GetOvocieAZeleninyGroupByPayload<T extends OvocieAZeleninyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OvocieAZeleninyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OvocieAZeleninyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OvocieAZeleninyGroupByOutputType[P]>
            : GetScalarType<T[P], OvocieAZeleninyGroupByOutputType[P]>
        }
      >
    >


  export type OvocieAZeleninySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    analyticsId?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | OvocieAZeleniny$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | OvocieAZeleniny$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | OvocieAZeleninyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["ovocieAZeleniny"]>

  export type OvocieAZeleninySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    analyticsId?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["ovocieAZeleniny"]>

  export type OvocieAZeleninySelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    analyticsId?: boolean
    productAnalyticsId?: boolean
  }

  export type OvocieAZeleninyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | OvocieAZeleniny$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | OvocieAZeleniny$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | OvocieAZeleninyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type OvocieAZeleninyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs>
  }

  export type $OvocieAZeleninyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OvocieAZeleniny"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      analyticsId: number | null
      productAnalyticsId: number | null
    }, ExtArgs["result"]["ovocieAZeleniny"]>
    composites: {}
  }

  type OvocieAZeleninyGetPayload<S extends boolean | null | undefined | OvocieAZeleninyDefaultArgs> = $Result.GetResult<Prisma.$OvocieAZeleninyPayload, S>

  type OvocieAZeleninyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OvocieAZeleninyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OvocieAZeleninyCountAggregateInputType | true
    }

  export interface OvocieAZeleninyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OvocieAZeleniny'], meta: { name: 'OvocieAZeleniny' } }
    /**
     * Find zero or one OvocieAZeleniny that matches the filter.
     * @param {OvocieAZeleninyFindUniqueArgs} args - Arguments to find a OvocieAZeleniny
     * @example
     * // Get one OvocieAZeleniny
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends OvocieAZeleninyFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, OvocieAZeleninyFindUniqueArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one OvocieAZeleniny that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OvocieAZeleninyFindUniqueOrThrowArgs} args - Arguments to find a OvocieAZeleniny
     * @example
     * // Get one OvocieAZeleniny
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends OvocieAZeleninyFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first OvocieAZeleniny that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyFindFirstArgs} args - Arguments to find a OvocieAZeleniny
     * @example
     * // Get one OvocieAZeleniny
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends OvocieAZeleninyFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyFindFirstArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first OvocieAZeleniny that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyFindFirstOrThrowArgs} args - Arguments to find a OvocieAZeleniny
     * @example
     * // Get one OvocieAZeleniny
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends OvocieAZeleninyFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more OvocieAZeleninies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OvocieAZeleninies
     * const ovocieAZeleninies = await prisma.ovocieAZeleniny.findMany()
     * 
     * // Get first 10 OvocieAZeleninies
     * const ovocieAZeleninies = await prisma.ovocieAZeleniny.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const ovocieAZeleninyWithIdOnly = await prisma.ovocieAZeleniny.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends OvocieAZeleninyFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a OvocieAZeleniny.
     * @param {OvocieAZeleninyCreateArgs} args - Arguments to create a OvocieAZeleniny.
     * @example
     * // Create one OvocieAZeleniny
     * const OvocieAZeleniny = await prisma.ovocieAZeleniny.create({
     *   data: {
     *     // ... data to create a OvocieAZeleniny
     *   }
     * })
     * 
    **/
    create<T extends OvocieAZeleninyCreateArgs<ExtArgs>>(
      args: SelectSubset<T, OvocieAZeleninyCreateArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many OvocieAZeleninies.
     * @param {OvocieAZeleninyCreateManyArgs} args - Arguments to create many OvocieAZeleninies.
     * @example
     * // Create many OvocieAZeleninies
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends OvocieAZeleninyCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many OvocieAZeleninies and returns the data saved in the database.
     * @param {OvocieAZeleninyCreateManyAndReturnArgs} args - Arguments to create many OvocieAZeleninies.
     * @example
     * // Create many OvocieAZeleninies
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many OvocieAZeleninies and only return the `id`
     * const ovocieAZeleninyWithIdOnly = await prisma.ovocieAZeleniny.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends OvocieAZeleninyCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a OvocieAZeleniny.
     * @param {OvocieAZeleninyDeleteArgs} args - Arguments to delete one OvocieAZeleniny.
     * @example
     * // Delete one OvocieAZeleniny
     * const OvocieAZeleniny = await prisma.ovocieAZeleniny.delete({
     *   where: {
     *     // ... filter to delete one OvocieAZeleniny
     *   }
     * })
     * 
    **/
    delete<T extends OvocieAZeleninyDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, OvocieAZeleninyDeleteArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one OvocieAZeleniny.
     * @param {OvocieAZeleninyUpdateArgs} args - Arguments to update one OvocieAZeleniny.
     * @example
     * // Update one OvocieAZeleniny
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends OvocieAZeleninyUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, OvocieAZeleninyUpdateArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more OvocieAZeleninies.
     * @param {OvocieAZeleninyDeleteManyArgs} args - Arguments to filter OvocieAZeleninies to delete.
     * @example
     * // Delete a few OvocieAZeleninies
     * const { count } = await prisma.ovocieAZeleniny.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends OvocieAZeleninyDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, OvocieAZeleninyDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OvocieAZeleninies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OvocieAZeleninies
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends OvocieAZeleninyUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, OvocieAZeleninyUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OvocieAZeleniny.
     * @param {OvocieAZeleninyUpsertArgs} args - Arguments to update or create a OvocieAZeleniny.
     * @example
     * // Update or create a OvocieAZeleniny
     * const ovocieAZeleniny = await prisma.ovocieAZeleniny.upsert({
     *   create: {
     *     // ... data to create a OvocieAZeleniny
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OvocieAZeleniny we want to update
     *   }
     * })
    **/
    upsert<T extends OvocieAZeleninyUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, OvocieAZeleninyUpsertArgs<ExtArgs>>
    ): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of OvocieAZeleninies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyCountArgs} args - Arguments to filter OvocieAZeleninies to count.
     * @example
     * // Count the number of OvocieAZeleninies
     * const count = await prisma.ovocieAZeleniny.count({
     *   where: {
     *     // ... the filter for the OvocieAZeleninies we want to count
     *   }
     * })
    **/
    count<T extends OvocieAZeleninyCountArgs>(
      args?: Subset<T, OvocieAZeleninyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OvocieAZeleninyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OvocieAZeleniny.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OvocieAZeleninyAggregateArgs>(args: Subset<T, OvocieAZeleninyAggregateArgs>): Prisma.PrismaPromise<GetOvocieAZeleninyAggregateType<T>>

    /**
     * Group by OvocieAZeleniny.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OvocieAZeleninyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OvocieAZeleninyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OvocieAZeleninyGroupByArgs['orderBy'] }
        : { orderBy?: OvocieAZeleninyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OvocieAZeleninyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOvocieAZeleninyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OvocieAZeleniny model
   */
  readonly fields: OvocieAZeleninyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OvocieAZeleniny.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OvocieAZeleninyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends OvocieAZeleniny$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, OvocieAZeleniny$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends OvocieAZeleniny$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, OvocieAZeleniny$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the OvocieAZeleniny model
   */ 
  interface OvocieAZeleninyFieldRefs {
    readonly id: FieldRef<"OvocieAZeleniny", 'Int'>
    readonly productId: FieldRef<"OvocieAZeleniny", 'String'>
    readonly title: FieldRef<"OvocieAZeleniny", 'String'>
    readonly price: FieldRef<"OvocieAZeleniny", 'Float'>
    readonly unitPrice: FieldRef<"OvocieAZeleniny", 'Float'>
    readonly imageUrl: FieldRef<"OvocieAZeleniny", 'String'>
    readonly unitOfMeasure: FieldRef<"OvocieAZeleniny", 'String'>
    readonly isForSale: FieldRef<"OvocieAZeleniny", 'Boolean'>
    readonly aisleName: FieldRef<"OvocieAZeleniny", 'String'>
    readonly lastUpdated: FieldRef<"OvocieAZeleniny", 'DateTime'>
    readonly category: FieldRef<"OvocieAZeleniny", 'String'>
    readonly superDepartmentName: FieldRef<"OvocieAZeleniny", 'String'>
    readonly hasPromotions: FieldRef<"OvocieAZeleniny", 'Boolean'>
    readonly analyticsId: FieldRef<"OvocieAZeleniny", 'Int'>
    readonly productAnalyticsId: FieldRef<"OvocieAZeleniny", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * OvocieAZeleniny findUnique
   */
  export type OvocieAZeleninyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * Filter, which OvocieAZeleniny to fetch.
     */
    where: OvocieAZeleninyWhereUniqueInput
  }

  /**
   * OvocieAZeleniny findUniqueOrThrow
   */
  export type OvocieAZeleninyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * Filter, which OvocieAZeleniny to fetch.
     */
    where: OvocieAZeleninyWhereUniqueInput
  }

  /**
   * OvocieAZeleniny findFirst
   */
  export type OvocieAZeleninyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * Filter, which OvocieAZeleniny to fetch.
     */
    where?: OvocieAZeleninyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OvocieAZeleninies to fetch.
     */
    orderBy?: OvocieAZeleninyOrderByWithRelationInput | OvocieAZeleninyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OvocieAZeleninies.
     */
    cursor?: OvocieAZeleninyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OvocieAZeleninies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OvocieAZeleninies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OvocieAZeleninies.
     */
    distinct?: OvocieAZeleninyScalarFieldEnum | OvocieAZeleninyScalarFieldEnum[]
  }

  /**
   * OvocieAZeleniny findFirstOrThrow
   */
  export type OvocieAZeleninyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * Filter, which OvocieAZeleniny to fetch.
     */
    where?: OvocieAZeleninyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OvocieAZeleninies to fetch.
     */
    orderBy?: OvocieAZeleninyOrderByWithRelationInput | OvocieAZeleninyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OvocieAZeleninies.
     */
    cursor?: OvocieAZeleninyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OvocieAZeleninies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OvocieAZeleninies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OvocieAZeleninies.
     */
    distinct?: OvocieAZeleninyScalarFieldEnum | OvocieAZeleninyScalarFieldEnum[]
  }

  /**
   * OvocieAZeleniny findMany
   */
  export type OvocieAZeleninyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * Filter, which OvocieAZeleninies to fetch.
     */
    where?: OvocieAZeleninyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OvocieAZeleninies to fetch.
     */
    orderBy?: OvocieAZeleninyOrderByWithRelationInput | OvocieAZeleninyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OvocieAZeleninies.
     */
    cursor?: OvocieAZeleninyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OvocieAZeleninies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OvocieAZeleninies.
     */
    skip?: number
    distinct?: OvocieAZeleninyScalarFieldEnum | OvocieAZeleninyScalarFieldEnum[]
  }

  /**
   * OvocieAZeleniny create
   */
  export type OvocieAZeleninyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * The data needed to create a OvocieAZeleniny.
     */
    data: XOR<OvocieAZeleninyCreateInput, OvocieAZeleninyUncheckedCreateInput>
  }

  /**
   * OvocieAZeleniny createMany
   */
  export type OvocieAZeleninyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OvocieAZeleninies.
     */
    data: OvocieAZeleninyCreateManyInput | OvocieAZeleninyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OvocieAZeleniny createManyAndReturn
   */
  export type OvocieAZeleninyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many OvocieAZeleninies.
     */
    data: OvocieAZeleninyCreateManyInput | OvocieAZeleninyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * OvocieAZeleniny update
   */
  export type OvocieAZeleninyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * The data needed to update a OvocieAZeleniny.
     */
    data: XOR<OvocieAZeleninyUpdateInput, OvocieAZeleninyUncheckedUpdateInput>
    /**
     * Choose, which OvocieAZeleniny to update.
     */
    where: OvocieAZeleninyWhereUniqueInput
  }

  /**
   * OvocieAZeleniny updateMany
   */
  export type OvocieAZeleninyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OvocieAZeleninies.
     */
    data: XOR<OvocieAZeleninyUpdateManyMutationInput, OvocieAZeleninyUncheckedUpdateManyInput>
    /**
     * Filter which OvocieAZeleninies to update
     */
    where?: OvocieAZeleninyWhereInput
  }

  /**
   * OvocieAZeleniny upsert
   */
  export type OvocieAZeleninyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * The filter to search for the OvocieAZeleniny to update in case it exists.
     */
    where: OvocieAZeleninyWhereUniqueInput
    /**
     * In case the OvocieAZeleniny found by the `where` argument doesn't exist, create a new OvocieAZeleniny with this data.
     */
    create: XOR<OvocieAZeleninyCreateInput, OvocieAZeleninyUncheckedCreateInput>
    /**
     * In case the OvocieAZeleniny was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OvocieAZeleninyUpdateInput, OvocieAZeleninyUncheckedUpdateInput>
  }

  /**
   * OvocieAZeleniny delete
   */
  export type OvocieAZeleninyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    /**
     * Filter which OvocieAZeleniny to delete.
     */
    where: OvocieAZeleninyWhereUniqueInput
  }

  /**
   * OvocieAZeleniny deleteMany
   */
  export type OvocieAZeleninyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OvocieAZeleninies to delete
     */
    where?: OvocieAZeleninyWhereInput
  }

  /**
   * OvocieAZeleniny.promotions
   */
  export type OvocieAZeleniny$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * OvocieAZeleniny.ProductAnalytics
   */
  export type OvocieAZeleniny$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * OvocieAZeleniny.ShoppingListItem
   */
  export type OvocieAZeleniny$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * OvocieAZeleniny without action
   */
  export type OvocieAZeleninyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
  }


  /**
   * Model Grilovanie
   */

  export type AggregateGrilovanie = {
    _count: GrilovanieCountAggregateOutputType | null
    _avg: GrilovanieAvgAggregateOutputType | null
    _sum: GrilovanieSumAggregateOutputType | null
    _min: GrilovanieMinAggregateOutputType | null
    _max: GrilovanieMaxAggregateOutputType | null
  }

  export type GrilovanieAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type GrilovanieSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type GrilovanieMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type GrilovanieMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type GrilovanieCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type GrilovanieAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type GrilovanieSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type GrilovanieMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type GrilovanieMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type GrilovanieCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type GrilovanieAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Grilovanie to aggregate.
     */
    where?: GrilovanieWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grilovanies to fetch.
     */
    orderBy?: GrilovanieOrderByWithRelationInput | GrilovanieOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: GrilovanieWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grilovanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grilovanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Grilovanies
    **/
    _count?: true | GrilovanieCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: GrilovanieAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: GrilovanieSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: GrilovanieMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: GrilovanieMaxAggregateInputType
  }

  export type GetGrilovanieAggregateType<T extends GrilovanieAggregateArgs> = {
        [P in keyof T & keyof AggregateGrilovanie]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGrilovanie[P]>
      : GetScalarType<T[P], AggregateGrilovanie[P]>
  }




  export type GrilovanieGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: GrilovanieWhereInput
    orderBy?: GrilovanieOrderByWithAggregationInput | GrilovanieOrderByWithAggregationInput[]
    by: GrilovanieScalarFieldEnum[] | GrilovanieScalarFieldEnum
    having?: GrilovanieScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: GrilovanieCountAggregateInputType | true
    _avg?: GrilovanieAvgAggregateInputType
    _sum?: GrilovanieSumAggregateInputType
    _min?: GrilovanieMinAggregateInputType
    _max?: GrilovanieMaxAggregateInputType
  }

  export type GrilovanieGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: GrilovanieCountAggregateOutputType | null
    _avg: GrilovanieAvgAggregateOutputType | null
    _sum: GrilovanieSumAggregateOutputType | null
    _min: GrilovanieMinAggregateOutputType | null
    _max: GrilovanieMaxAggregateOutputType | null
  }

  type GetGrilovanieGroupByPayload<T extends GrilovanieGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<GrilovanieGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof GrilovanieGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], GrilovanieGroupByOutputType[P]>
            : GetScalarType<T[P], GrilovanieGroupByOutputType[P]>
        }
      >
    >


  export type GrilovanieSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | Grilovanie$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Grilovanie$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Grilovanie$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | GrilovanieCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["grilovanie"]>

  export type GrilovanieSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | Grilovanie$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["grilovanie"]>

  export type GrilovanieSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type GrilovanieInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | Grilovanie$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Grilovanie$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Grilovanie$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | GrilovanieCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type GrilovanieIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | Grilovanie$ProductAnalyticsArgs<ExtArgs>
  }

  export type $GrilovaniePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Grilovanie"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["grilovanie"]>
    composites: {}
  }

  type GrilovanieGetPayload<S extends boolean | null | undefined | GrilovanieDefaultArgs> = $Result.GetResult<Prisma.$GrilovaniePayload, S>

  type GrilovanieCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<GrilovanieFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: GrilovanieCountAggregateInputType | true
    }

  export interface GrilovanieDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Grilovanie'], meta: { name: 'Grilovanie' } }
    /**
     * Find zero or one Grilovanie that matches the filter.
     * @param {GrilovanieFindUniqueArgs} args - Arguments to find a Grilovanie
     * @example
     * // Get one Grilovanie
     * const grilovanie = await prisma.grilovanie.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends GrilovanieFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, GrilovanieFindUniqueArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Grilovanie that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {GrilovanieFindUniqueOrThrowArgs} args - Arguments to find a Grilovanie
     * @example
     * // Get one Grilovanie
     * const grilovanie = await prisma.grilovanie.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends GrilovanieFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Grilovanie that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieFindFirstArgs} args - Arguments to find a Grilovanie
     * @example
     * // Get one Grilovanie
     * const grilovanie = await prisma.grilovanie.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends GrilovanieFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieFindFirstArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Grilovanie that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieFindFirstOrThrowArgs} args - Arguments to find a Grilovanie
     * @example
     * // Get one Grilovanie
     * const grilovanie = await prisma.grilovanie.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends GrilovanieFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Grilovanies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Grilovanies
     * const grilovanies = await prisma.grilovanie.findMany()
     * 
     * // Get first 10 Grilovanies
     * const grilovanies = await prisma.grilovanie.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const grilovanieWithIdOnly = await prisma.grilovanie.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends GrilovanieFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Grilovanie.
     * @param {GrilovanieCreateArgs} args - Arguments to create a Grilovanie.
     * @example
     * // Create one Grilovanie
     * const Grilovanie = await prisma.grilovanie.create({
     *   data: {
     *     // ... data to create a Grilovanie
     *   }
     * })
     * 
    **/
    create<T extends GrilovanieCreateArgs<ExtArgs>>(
      args: SelectSubset<T, GrilovanieCreateArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Grilovanies.
     * @param {GrilovanieCreateManyArgs} args - Arguments to create many Grilovanies.
     * @example
     * // Create many Grilovanies
     * const grilovanie = await prisma.grilovanie.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends GrilovanieCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Grilovanies and returns the data saved in the database.
     * @param {GrilovanieCreateManyAndReturnArgs} args - Arguments to create many Grilovanies.
     * @example
     * // Create many Grilovanies
     * const grilovanie = await prisma.grilovanie.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Grilovanies and only return the `id`
     * const grilovanieWithIdOnly = await prisma.grilovanie.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends GrilovanieCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Grilovanie.
     * @param {GrilovanieDeleteArgs} args - Arguments to delete one Grilovanie.
     * @example
     * // Delete one Grilovanie
     * const Grilovanie = await prisma.grilovanie.delete({
     *   where: {
     *     // ... filter to delete one Grilovanie
     *   }
     * })
     * 
    **/
    delete<T extends GrilovanieDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, GrilovanieDeleteArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Grilovanie.
     * @param {GrilovanieUpdateArgs} args - Arguments to update one Grilovanie.
     * @example
     * // Update one Grilovanie
     * const grilovanie = await prisma.grilovanie.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends GrilovanieUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, GrilovanieUpdateArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Grilovanies.
     * @param {GrilovanieDeleteManyArgs} args - Arguments to filter Grilovanies to delete.
     * @example
     * // Delete a few Grilovanies
     * const { count } = await prisma.grilovanie.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends GrilovanieDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, GrilovanieDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Grilovanies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Grilovanies
     * const grilovanie = await prisma.grilovanie.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends GrilovanieUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, GrilovanieUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Grilovanie.
     * @param {GrilovanieUpsertArgs} args - Arguments to update or create a Grilovanie.
     * @example
     * // Update or create a Grilovanie
     * const grilovanie = await prisma.grilovanie.upsert({
     *   create: {
     *     // ... data to create a Grilovanie
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Grilovanie we want to update
     *   }
     * })
    **/
    upsert<T extends GrilovanieUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, GrilovanieUpsertArgs<ExtArgs>>
    ): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Grilovanies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieCountArgs} args - Arguments to filter Grilovanies to count.
     * @example
     * // Count the number of Grilovanies
     * const count = await prisma.grilovanie.count({
     *   where: {
     *     // ... the filter for the Grilovanies we want to count
     *   }
     * })
    **/
    count<T extends GrilovanieCountArgs>(
      args?: Subset<T, GrilovanieCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], GrilovanieCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Grilovanie.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends GrilovanieAggregateArgs>(args: Subset<T, GrilovanieAggregateArgs>): Prisma.PrismaPromise<GetGrilovanieAggregateType<T>>

    /**
     * Group by Grilovanie.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {GrilovanieGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends GrilovanieGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: GrilovanieGroupByArgs['orderBy'] }
        : { orderBy?: GrilovanieGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, GrilovanieGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGrilovanieGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Grilovanie model
   */
  readonly fields: GrilovanieFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Grilovanie.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__GrilovanieClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends Grilovanie$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Grilovanie$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends Grilovanie$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, Grilovanie$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends Grilovanie$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, Grilovanie$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Grilovanie model
   */ 
  interface GrilovanieFieldRefs {
    readonly id: FieldRef<"Grilovanie", 'Int'>
    readonly productId: FieldRef<"Grilovanie", 'String'>
    readonly title: FieldRef<"Grilovanie", 'String'>
    readonly price: FieldRef<"Grilovanie", 'Float'>
    readonly unitPrice: FieldRef<"Grilovanie", 'Float'>
    readonly imageUrl: FieldRef<"Grilovanie", 'String'>
    readonly unitOfMeasure: FieldRef<"Grilovanie", 'String'>
    readonly isForSale: FieldRef<"Grilovanie", 'Boolean'>
    readonly aisleName: FieldRef<"Grilovanie", 'String'>
    readonly lastUpdated: FieldRef<"Grilovanie", 'DateTime'>
    readonly category: FieldRef<"Grilovanie", 'String'>
    readonly superDepartmentName: FieldRef<"Grilovanie", 'String'>
    readonly hasPromotions: FieldRef<"Grilovanie", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"Grilovanie", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Grilovanie findUnique
   */
  export type GrilovanieFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * Filter, which Grilovanie to fetch.
     */
    where: GrilovanieWhereUniqueInput
  }

  /**
   * Grilovanie findUniqueOrThrow
   */
  export type GrilovanieFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * Filter, which Grilovanie to fetch.
     */
    where: GrilovanieWhereUniqueInput
  }

  /**
   * Grilovanie findFirst
   */
  export type GrilovanieFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * Filter, which Grilovanie to fetch.
     */
    where?: GrilovanieWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grilovanies to fetch.
     */
    orderBy?: GrilovanieOrderByWithRelationInput | GrilovanieOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Grilovanies.
     */
    cursor?: GrilovanieWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grilovanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grilovanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Grilovanies.
     */
    distinct?: GrilovanieScalarFieldEnum | GrilovanieScalarFieldEnum[]
  }

  /**
   * Grilovanie findFirstOrThrow
   */
  export type GrilovanieFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * Filter, which Grilovanie to fetch.
     */
    where?: GrilovanieWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grilovanies to fetch.
     */
    orderBy?: GrilovanieOrderByWithRelationInput | GrilovanieOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Grilovanies.
     */
    cursor?: GrilovanieWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grilovanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grilovanies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Grilovanies.
     */
    distinct?: GrilovanieScalarFieldEnum | GrilovanieScalarFieldEnum[]
  }

  /**
   * Grilovanie findMany
   */
  export type GrilovanieFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * Filter, which Grilovanies to fetch.
     */
    where?: GrilovanieWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Grilovanies to fetch.
     */
    orderBy?: GrilovanieOrderByWithRelationInput | GrilovanieOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Grilovanies.
     */
    cursor?: GrilovanieWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Grilovanies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Grilovanies.
     */
    skip?: number
    distinct?: GrilovanieScalarFieldEnum | GrilovanieScalarFieldEnum[]
  }

  /**
   * Grilovanie create
   */
  export type GrilovanieCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * The data needed to create a Grilovanie.
     */
    data: XOR<GrilovanieCreateInput, GrilovanieUncheckedCreateInput>
  }

  /**
   * Grilovanie createMany
   */
  export type GrilovanieCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Grilovanies.
     */
    data: GrilovanieCreateManyInput | GrilovanieCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Grilovanie createManyAndReturn
   */
  export type GrilovanieCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Grilovanies.
     */
    data: GrilovanieCreateManyInput | GrilovanieCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Grilovanie update
   */
  export type GrilovanieUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * The data needed to update a Grilovanie.
     */
    data: XOR<GrilovanieUpdateInput, GrilovanieUncheckedUpdateInput>
    /**
     * Choose, which Grilovanie to update.
     */
    where: GrilovanieWhereUniqueInput
  }

  /**
   * Grilovanie updateMany
   */
  export type GrilovanieUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Grilovanies.
     */
    data: XOR<GrilovanieUpdateManyMutationInput, GrilovanieUncheckedUpdateManyInput>
    /**
     * Filter which Grilovanies to update
     */
    where?: GrilovanieWhereInput
  }

  /**
   * Grilovanie upsert
   */
  export type GrilovanieUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * The filter to search for the Grilovanie to update in case it exists.
     */
    where: GrilovanieWhereUniqueInput
    /**
     * In case the Grilovanie found by the `where` argument doesn't exist, create a new Grilovanie with this data.
     */
    create: XOR<GrilovanieCreateInput, GrilovanieUncheckedCreateInput>
    /**
     * In case the Grilovanie was found with the provided `where` argument, update it with this data.
     */
    update: XOR<GrilovanieUpdateInput, GrilovanieUncheckedUpdateInput>
  }

  /**
   * Grilovanie delete
   */
  export type GrilovanieDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    /**
     * Filter which Grilovanie to delete.
     */
    where: GrilovanieWhereUniqueInput
  }

  /**
   * Grilovanie deleteMany
   */
  export type GrilovanieDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Grilovanies to delete
     */
    where?: GrilovanieWhereInput
  }

  /**
   * Grilovanie.promotions
   */
  export type Grilovanie$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Grilovanie.ProductAnalytics
   */
  export type Grilovanie$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * Grilovanie.ShoppingListItem
   */
  export type Grilovanie$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * Grilovanie without action
   */
  export type GrilovanieDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
  }


  /**
   * Model StarostlivostODomacnost
   */

  export type AggregateStarostlivostODomacnost = {
    _count: StarostlivostODomacnostCountAggregateOutputType | null
    _avg: StarostlivostODomacnostAvgAggregateOutputType | null
    _sum: StarostlivostODomacnostSumAggregateOutputType | null
    _min: StarostlivostODomacnostMinAggregateOutputType | null
    _max: StarostlivostODomacnostMaxAggregateOutputType | null
  }

  export type StarostlivostODomacnostAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type StarostlivostODomacnostSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type StarostlivostODomacnostMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type StarostlivostODomacnostMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type StarostlivostODomacnostCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type StarostlivostODomacnostAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type StarostlivostODomacnostSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type StarostlivostODomacnostMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type StarostlivostODomacnostMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type StarostlivostODomacnostCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type StarostlivostODomacnostAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StarostlivostODomacnost to aggregate.
     */
    where?: StarostlivostODomacnostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StarostlivostODomacnosts to fetch.
     */
    orderBy?: StarostlivostODomacnostOrderByWithRelationInput | StarostlivostODomacnostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StarostlivostODomacnostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StarostlivostODomacnosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StarostlivostODomacnosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StarostlivostODomacnosts
    **/
    _count?: true | StarostlivostODomacnostCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StarostlivostODomacnostAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StarostlivostODomacnostSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StarostlivostODomacnostMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StarostlivostODomacnostMaxAggregateInputType
  }

  export type GetStarostlivostODomacnostAggregateType<T extends StarostlivostODomacnostAggregateArgs> = {
        [P in keyof T & keyof AggregateStarostlivostODomacnost]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStarostlivostODomacnost[P]>
      : GetScalarType<T[P], AggregateStarostlivostODomacnost[P]>
  }




  export type StarostlivostODomacnostGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StarostlivostODomacnostWhereInput
    orderBy?: StarostlivostODomacnostOrderByWithAggregationInput | StarostlivostODomacnostOrderByWithAggregationInput[]
    by: StarostlivostODomacnostScalarFieldEnum[] | StarostlivostODomacnostScalarFieldEnum
    having?: StarostlivostODomacnostScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StarostlivostODomacnostCountAggregateInputType | true
    _avg?: StarostlivostODomacnostAvgAggregateInputType
    _sum?: StarostlivostODomacnostSumAggregateInputType
    _min?: StarostlivostODomacnostMinAggregateInputType
    _max?: StarostlivostODomacnostMaxAggregateInputType
  }

  export type StarostlivostODomacnostGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: StarostlivostODomacnostCountAggregateOutputType | null
    _avg: StarostlivostODomacnostAvgAggregateOutputType | null
    _sum: StarostlivostODomacnostSumAggregateOutputType | null
    _min: StarostlivostODomacnostMinAggregateOutputType | null
    _max: StarostlivostODomacnostMaxAggregateOutputType | null
  }

  type GetStarostlivostODomacnostGroupByPayload<T extends StarostlivostODomacnostGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StarostlivostODomacnostGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StarostlivostODomacnostGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StarostlivostODomacnostGroupByOutputType[P]>
            : GetScalarType<T[P], StarostlivostODomacnostGroupByOutputType[P]>
        }
      >
    >


  export type StarostlivostODomacnostSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | StarostlivostODomacnost$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | StarostlivostODomacnost$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | StarostlivostODomacnostCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["starostlivostODomacnost"]>

  export type StarostlivostODomacnostSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["starostlivostODomacnost"]>

  export type StarostlivostODomacnostSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type StarostlivostODomacnostInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | StarostlivostODomacnost$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | StarostlivostODomacnost$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | StarostlivostODomacnostCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type StarostlivostODomacnostIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs>
  }

  export type $StarostlivostODomacnostPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StarostlivostODomacnost"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["starostlivostODomacnost"]>
    composites: {}
  }

  type StarostlivostODomacnostGetPayload<S extends boolean | null | undefined | StarostlivostODomacnostDefaultArgs> = $Result.GetResult<Prisma.$StarostlivostODomacnostPayload, S>

  type StarostlivostODomacnostCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StarostlivostODomacnostFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StarostlivostODomacnostCountAggregateInputType | true
    }

  export interface StarostlivostODomacnostDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StarostlivostODomacnost'], meta: { name: 'StarostlivostODomacnost' } }
    /**
     * Find zero or one StarostlivostODomacnost that matches the filter.
     * @param {StarostlivostODomacnostFindUniqueArgs} args - Arguments to find a StarostlivostODomacnost
     * @example
     * // Get one StarostlivostODomacnost
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends StarostlivostODomacnostFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, StarostlivostODomacnostFindUniqueArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one StarostlivostODomacnost that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StarostlivostODomacnostFindUniqueOrThrowArgs} args - Arguments to find a StarostlivostODomacnost
     * @example
     * // Get one StarostlivostODomacnost
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends StarostlivostODomacnostFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first StarostlivostODomacnost that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostFindFirstArgs} args - Arguments to find a StarostlivostODomacnost
     * @example
     * // Get one StarostlivostODomacnost
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends StarostlivostODomacnostFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostFindFirstArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first StarostlivostODomacnost that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostFindFirstOrThrowArgs} args - Arguments to find a StarostlivostODomacnost
     * @example
     * // Get one StarostlivostODomacnost
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends StarostlivostODomacnostFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more StarostlivostODomacnosts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StarostlivostODomacnosts
     * const starostlivostODomacnosts = await prisma.starostlivostODomacnost.findMany()
     * 
     * // Get first 10 StarostlivostODomacnosts
     * const starostlivostODomacnosts = await prisma.starostlivostODomacnost.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const starostlivostODomacnostWithIdOnly = await prisma.starostlivostODomacnost.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends StarostlivostODomacnostFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a StarostlivostODomacnost.
     * @param {StarostlivostODomacnostCreateArgs} args - Arguments to create a StarostlivostODomacnost.
     * @example
     * // Create one StarostlivostODomacnost
     * const StarostlivostODomacnost = await prisma.starostlivostODomacnost.create({
     *   data: {
     *     // ... data to create a StarostlivostODomacnost
     *   }
     * })
     * 
    **/
    create<T extends StarostlivostODomacnostCreateArgs<ExtArgs>>(
      args: SelectSubset<T, StarostlivostODomacnostCreateArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many StarostlivostODomacnosts.
     * @param {StarostlivostODomacnostCreateManyArgs} args - Arguments to create many StarostlivostODomacnosts.
     * @example
     * // Create many StarostlivostODomacnosts
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends StarostlivostODomacnostCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many StarostlivostODomacnosts and returns the data saved in the database.
     * @param {StarostlivostODomacnostCreateManyAndReturnArgs} args - Arguments to create many StarostlivostODomacnosts.
     * @example
     * // Create many StarostlivostODomacnosts
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many StarostlivostODomacnosts and only return the `id`
     * const starostlivostODomacnostWithIdOnly = await prisma.starostlivostODomacnost.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends StarostlivostODomacnostCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a StarostlivostODomacnost.
     * @param {StarostlivostODomacnostDeleteArgs} args - Arguments to delete one StarostlivostODomacnost.
     * @example
     * // Delete one StarostlivostODomacnost
     * const StarostlivostODomacnost = await prisma.starostlivostODomacnost.delete({
     *   where: {
     *     // ... filter to delete one StarostlivostODomacnost
     *   }
     * })
     * 
    **/
    delete<T extends StarostlivostODomacnostDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, StarostlivostODomacnostDeleteArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one StarostlivostODomacnost.
     * @param {StarostlivostODomacnostUpdateArgs} args - Arguments to update one StarostlivostODomacnost.
     * @example
     * // Update one StarostlivostODomacnost
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends StarostlivostODomacnostUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, StarostlivostODomacnostUpdateArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more StarostlivostODomacnosts.
     * @param {StarostlivostODomacnostDeleteManyArgs} args - Arguments to filter StarostlivostODomacnosts to delete.
     * @example
     * // Delete a few StarostlivostODomacnosts
     * const { count } = await prisma.starostlivostODomacnost.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends StarostlivostODomacnostDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, StarostlivostODomacnostDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StarostlivostODomacnosts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StarostlivostODomacnosts
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends StarostlivostODomacnostUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, StarostlivostODomacnostUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StarostlivostODomacnost.
     * @param {StarostlivostODomacnostUpsertArgs} args - Arguments to update or create a StarostlivostODomacnost.
     * @example
     * // Update or create a StarostlivostODomacnost
     * const starostlivostODomacnost = await prisma.starostlivostODomacnost.upsert({
     *   create: {
     *     // ... data to create a StarostlivostODomacnost
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StarostlivostODomacnost we want to update
     *   }
     * })
    **/
    upsert<T extends StarostlivostODomacnostUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, StarostlivostODomacnostUpsertArgs<ExtArgs>>
    ): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of StarostlivostODomacnosts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostCountArgs} args - Arguments to filter StarostlivostODomacnosts to count.
     * @example
     * // Count the number of StarostlivostODomacnosts
     * const count = await prisma.starostlivostODomacnost.count({
     *   where: {
     *     // ... the filter for the StarostlivostODomacnosts we want to count
     *   }
     * })
    **/
    count<T extends StarostlivostODomacnostCountArgs>(
      args?: Subset<T, StarostlivostODomacnostCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StarostlivostODomacnostCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StarostlivostODomacnost.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StarostlivostODomacnostAggregateArgs>(args: Subset<T, StarostlivostODomacnostAggregateArgs>): Prisma.PrismaPromise<GetStarostlivostODomacnostAggregateType<T>>

    /**
     * Group by StarostlivostODomacnost.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StarostlivostODomacnostGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StarostlivostODomacnostGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StarostlivostODomacnostGroupByArgs['orderBy'] }
        : { orderBy?: StarostlivostODomacnostGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StarostlivostODomacnostGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStarostlivostODomacnostGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StarostlivostODomacnost model
   */
  readonly fields: StarostlivostODomacnostFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StarostlivostODomacnost.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StarostlivostODomacnostClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends StarostlivostODomacnost$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, StarostlivostODomacnost$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends StarostlivostODomacnost$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, StarostlivostODomacnost$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the StarostlivostODomacnost model
   */ 
  interface StarostlivostODomacnostFieldRefs {
    readonly id: FieldRef<"StarostlivostODomacnost", 'Int'>
    readonly productId: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly title: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly price: FieldRef<"StarostlivostODomacnost", 'Float'>
    readonly unitPrice: FieldRef<"StarostlivostODomacnost", 'Float'>
    readonly imageUrl: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly unitOfMeasure: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly isForSale: FieldRef<"StarostlivostODomacnost", 'Boolean'>
    readonly aisleName: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly lastUpdated: FieldRef<"StarostlivostODomacnost", 'DateTime'>
    readonly category: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly superDepartmentName: FieldRef<"StarostlivostODomacnost", 'String'>
    readonly hasPromotions: FieldRef<"StarostlivostODomacnost", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"StarostlivostODomacnost", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * StarostlivostODomacnost findUnique
   */
  export type StarostlivostODomacnostFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * Filter, which StarostlivostODomacnost to fetch.
     */
    where: StarostlivostODomacnostWhereUniqueInput
  }

  /**
   * StarostlivostODomacnost findUniqueOrThrow
   */
  export type StarostlivostODomacnostFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * Filter, which StarostlivostODomacnost to fetch.
     */
    where: StarostlivostODomacnostWhereUniqueInput
  }

  /**
   * StarostlivostODomacnost findFirst
   */
  export type StarostlivostODomacnostFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * Filter, which StarostlivostODomacnost to fetch.
     */
    where?: StarostlivostODomacnostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StarostlivostODomacnosts to fetch.
     */
    orderBy?: StarostlivostODomacnostOrderByWithRelationInput | StarostlivostODomacnostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StarostlivostODomacnosts.
     */
    cursor?: StarostlivostODomacnostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StarostlivostODomacnosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StarostlivostODomacnosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StarostlivostODomacnosts.
     */
    distinct?: StarostlivostODomacnostScalarFieldEnum | StarostlivostODomacnostScalarFieldEnum[]
  }

  /**
   * StarostlivostODomacnost findFirstOrThrow
   */
  export type StarostlivostODomacnostFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * Filter, which StarostlivostODomacnost to fetch.
     */
    where?: StarostlivostODomacnostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StarostlivostODomacnosts to fetch.
     */
    orderBy?: StarostlivostODomacnostOrderByWithRelationInput | StarostlivostODomacnostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StarostlivostODomacnosts.
     */
    cursor?: StarostlivostODomacnostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StarostlivostODomacnosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StarostlivostODomacnosts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StarostlivostODomacnosts.
     */
    distinct?: StarostlivostODomacnostScalarFieldEnum | StarostlivostODomacnostScalarFieldEnum[]
  }

  /**
   * StarostlivostODomacnost findMany
   */
  export type StarostlivostODomacnostFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * Filter, which StarostlivostODomacnosts to fetch.
     */
    where?: StarostlivostODomacnostWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StarostlivostODomacnosts to fetch.
     */
    orderBy?: StarostlivostODomacnostOrderByWithRelationInput | StarostlivostODomacnostOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StarostlivostODomacnosts.
     */
    cursor?: StarostlivostODomacnostWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StarostlivostODomacnosts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StarostlivostODomacnosts.
     */
    skip?: number
    distinct?: StarostlivostODomacnostScalarFieldEnum | StarostlivostODomacnostScalarFieldEnum[]
  }

  /**
   * StarostlivostODomacnost create
   */
  export type StarostlivostODomacnostCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * The data needed to create a StarostlivostODomacnost.
     */
    data: XOR<StarostlivostODomacnostCreateInput, StarostlivostODomacnostUncheckedCreateInput>
  }

  /**
   * StarostlivostODomacnost createMany
   */
  export type StarostlivostODomacnostCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StarostlivostODomacnosts.
     */
    data: StarostlivostODomacnostCreateManyInput | StarostlivostODomacnostCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StarostlivostODomacnost createManyAndReturn
   */
  export type StarostlivostODomacnostCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many StarostlivostODomacnosts.
     */
    data: StarostlivostODomacnostCreateManyInput | StarostlivostODomacnostCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * StarostlivostODomacnost update
   */
  export type StarostlivostODomacnostUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * The data needed to update a StarostlivostODomacnost.
     */
    data: XOR<StarostlivostODomacnostUpdateInput, StarostlivostODomacnostUncheckedUpdateInput>
    /**
     * Choose, which StarostlivostODomacnost to update.
     */
    where: StarostlivostODomacnostWhereUniqueInput
  }

  /**
   * StarostlivostODomacnost updateMany
   */
  export type StarostlivostODomacnostUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StarostlivostODomacnosts.
     */
    data: XOR<StarostlivostODomacnostUpdateManyMutationInput, StarostlivostODomacnostUncheckedUpdateManyInput>
    /**
     * Filter which StarostlivostODomacnosts to update
     */
    where?: StarostlivostODomacnostWhereInput
  }

  /**
   * StarostlivostODomacnost upsert
   */
  export type StarostlivostODomacnostUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * The filter to search for the StarostlivostODomacnost to update in case it exists.
     */
    where: StarostlivostODomacnostWhereUniqueInput
    /**
     * In case the StarostlivostODomacnost found by the `where` argument doesn't exist, create a new StarostlivostODomacnost with this data.
     */
    create: XOR<StarostlivostODomacnostCreateInput, StarostlivostODomacnostUncheckedCreateInput>
    /**
     * In case the StarostlivostODomacnost was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StarostlivostODomacnostUpdateInput, StarostlivostODomacnostUncheckedUpdateInput>
  }

  /**
   * StarostlivostODomacnost delete
   */
  export type StarostlivostODomacnostDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    /**
     * Filter which StarostlivostODomacnost to delete.
     */
    where: StarostlivostODomacnostWhereUniqueInput
  }

  /**
   * StarostlivostODomacnost deleteMany
   */
  export type StarostlivostODomacnostDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StarostlivostODomacnosts to delete
     */
    where?: StarostlivostODomacnostWhereInput
  }

  /**
   * StarostlivostODomacnost.promotions
   */
  export type StarostlivostODomacnost$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * StarostlivostODomacnost.ProductAnalytics
   */
  export type StarostlivostODomacnost$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * StarostlivostODomacnost.ShoppingListItem
   */
  export type StarostlivostODomacnost$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * StarostlivostODomacnost without action
   */
  export type StarostlivostODomacnostDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
  }


  /**
   * Model Pecivo
   */

  export type AggregatePecivo = {
    _count: PecivoCountAggregateOutputType | null
    _avg: PecivoAvgAggregateOutputType | null
    _sum: PecivoSumAggregateOutputType | null
    _min: PecivoMinAggregateOutputType | null
    _max: PecivoMaxAggregateOutputType | null
  }

  export type PecivoAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type PecivoSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type PecivoMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type PecivoMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type PecivoCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type PecivoAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type PecivoSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type PecivoMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type PecivoMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type PecivoCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type PecivoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pecivo to aggregate.
     */
    where?: PecivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecivos to fetch.
     */
    orderBy?: PecivoOrderByWithRelationInput | PecivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PecivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pecivos
    **/
    _count?: true | PecivoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PecivoAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PecivoSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PecivoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PecivoMaxAggregateInputType
  }

  export type GetPecivoAggregateType<T extends PecivoAggregateArgs> = {
        [P in keyof T & keyof AggregatePecivo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePecivo[P]>
      : GetScalarType<T[P], AggregatePecivo[P]>
  }




  export type PecivoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PecivoWhereInput
    orderBy?: PecivoOrderByWithAggregationInput | PecivoOrderByWithAggregationInput[]
    by: PecivoScalarFieldEnum[] | PecivoScalarFieldEnum
    having?: PecivoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PecivoCountAggregateInputType | true
    _avg?: PecivoAvgAggregateInputType
    _sum?: PecivoSumAggregateInputType
    _min?: PecivoMinAggregateInputType
    _max?: PecivoMaxAggregateInputType
  }

  export type PecivoGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: PecivoCountAggregateOutputType | null
    _avg: PecivoAvgAggregateOutputType | null
    _sum: PecivoSumAggregateOutputType | null
    _min: PecivoMinAggregateOutputType | null
    _max: PecivoMaxAggregateOutputType | null
  }

  type GetPecivoGroupByPayload<T extends PecivoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PecivoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PecivoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PecivoGroupByOutputType[P]>
            : GetScalarType<T[P], PecivoGroupByOutputType[P]>
        }
      >
    >


  export type PecivoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | Pecivo$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Pecivo$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Pecivo$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | PecivoCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pecivo"]>

  export type PecivoSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | Pecivo$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["pecivo"]>

  export type PecivoSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type PecivoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | Pecivo$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Pecivo$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Pecivo$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | PecivoCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type PecivoIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | Pecivo$ProductAnalyticsArgs<ExtArgs>
  }

  export type $PecivoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Pecivo"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["pecivo"]>
    composites: {}
  }

  type PecivoGetPayload<S extends boolean | null | undefined | PecivoDefaultArgs> = $Result.GetResult<Prisma.$PecivoPayload, S>

  type PecivoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PecivoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PecivoCountAggregateInputType | true
    }

  export interface PecivoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Pecivo'], meta: { name: 'Pecivo' } }
    /**
     * Find zero or one Pecivo that matches the filter.
     * @param {PecivoFindUniqueArgs} args - Arguments to find a Pecivo
     * @example
     * // Get one Pecivo
     * const pecivo = await prisma.pecivo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PecivoFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, PecivoFindUniqueArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Pecivo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PecivoFindUniqueOrThrowArgs} args - Arguments to find a Pecivo
     * @example
     * // Get one Pecivo
     * const pecivo = await prisma.pecivo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PecivoFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Pecivo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoFindFirstArgs} args - Arguments to find a Pecivo
     * @example
     * // Get one Pecivo
     * const pecivo = await prisma.pecivo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PecivoFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoFindFirstArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Pecivo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoFindFirstOrThrowArgs} args - Arguments to find a Pecivo
     * @example
     * // Get one Pecivo
     * const pecivo = await prisma.pecivo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PecivoFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Pecivos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pecivos
     * const pecivos = await prisma.pecivo.findMany()
     * 
     * // Get first 10 Pecivos
     * const pecivos = await prisma.pecivo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pecivoWithIdOnly = await prisma.pecivo.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends PecivoFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Pecivo.
     * @param {PecivoCreateArgs} args - Arguments to create a Pecivo.
     * @example
     * // Create one Pecivo
     * const Pecivo = await prisma.pecivo.create({
     *   data: {
     *     // ... data to create a Pecivo
     *   }
     * })
     * 
    **/
    create<T extends PecivoCreateArgs<ExtArgs>>(
      args: SelectSubset<T, PecivoCreateArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Pecivos.
     * @param {PecivoCreateManyArgs} args - Arguments to create many Pecivos.
     * @example
     * // Create many Pecivos
     * const pecivo = await prisma.pecivo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends PecivoCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Pecivos and returns the data saved in the database.
     * @param {PecivoCreateManyAndReturnArgs} args - Arguments to create many Pecivos.
     * @example
     * // Create many Pecivos
     * const pecivo = await prisma.pecivo.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Pecivos and only return the `id`
     * const pecivoWithIdOnly = await prisma.pecivo.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends PecivoCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Pecivo.
     * @param {PecivoDeleteArgs} args - Arguments to delete one Pecivo.
     * @example
     * // Delete one Pecivo
     * const Pecivo = await prisma.pecivo.delete({
     *   where: {
     *     // ... filter to delete one Pecivo
     *   }
     * })
     * 
    **/
    delete<T extends PecivoDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, PecivoDeleteArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Pecivo.
     * @param {PecivoUpdateArgs} args - Arguments to update one Pecivo.
     * @example
     * // Update one Pecivo
     * const pecivo = await prisma.pecivo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PecivoUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, PecivoUpdateArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Pecivos.
     * @param {PecivoDeleteManyArgs} args - Arguments to filter Pecivos to delete.
     * @example
     * // Delete a few Pecivos
     * const { count } = await prisma.pecivo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PecivoDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PecivoDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pecivos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pecivos
     * const pecivo = await prisma.pecivo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PecivoUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, PecivoUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Pecivo.
     * @param {PecivoUpsertArgs} args - Arguments to update or create a Pecivo.
     * @example
     * // Update or create a Pecivo
     * const pecivo = await prisma.pecivo.upsert({
     *   create: {
     *     // ... data to create a Pecivo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Pecivo we want to update
     *   }
     * })
    **/
    upsert<T extends PecivoUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, PecivoUpsertArgs<ExtArgs>>
    ): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Pecivos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoCountArgs} args - Arguments to filter Pecivos to count.
     * @example
     * // Count the number of Pecivos
     * const count = await prisma.pecivo.count({
     *   where: {
     *     // ... the filter for the Pecivos we want to count
     *   }
     * })
    **/
    count<T extends PecivoCountArgs>(
      args?: Subset<T, PecivoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PecivoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Pecivo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PecivoAggregateArgs>(args: Subset<T, PecivoAggregateArgs>): Prisma.PrismaPromise<GetPecivoAggregateType<T>>

    /**
     * Group by Pecivo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PecivoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PecivoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PecivoGroupByArgs['orderBy'] }
        : { orderBy?: PecivoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PecivoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPecivoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Pecivo model
   */
  readonly fields: PecivoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Pecivo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PecivoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends Pecivo$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Pecivo$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends Pecivo$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, Pecivo$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends Pecivo$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, Pecivo$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Pecivo model
   */ 
  interface PecivoFieldRefs {
    readonly id: FieldRef<"Pecivo", 'Int'>
    readonly productId: FieldRef<"Pecivo", 'String'>
    readonly title: FieldRef<"Pecivo", 'String'>
    readonly price: FieldRef<"Pecivo", 'Float'>
    readonly unitPrice: FieldRef<"Pecivo", 'Float'>
    readonly imageUrl: FieldRef<"Pecivo", 'String'>
    readonly unitOfMeasure: FieldRef<"Pecivo", 'String'>
    readonly isForSale: FieldRef<"Pecivo", 'Boolean'>
    readonly aisleName: FieldRef<"Pecivo", 'String'>
    readonly lastUpdated: FieldRef<"Pecivo", 'DateTime'>
    readonly category: FieldRef<"Pecivo", 'String'>
    readonly superDepartmentName: FieldRef<"Pecivo", 'String'>
    readonly hasPromotions: FieldRef<"Pecivo", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"Pecivo", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Pecivo findUnique
   */
  export type PecivoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * Filter, which Pecivo to fetch.
     */
    where: PecivoWhereUniqueInput
  }

  /**
   * Pecivo findUniqueOrThrow
   */
  export type PecivoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * Filter, which Pecivo to fetch.
     */
    where: PecivoWhereUniqueInput
  }

  /**
   * Pecivo findFirst
   */
  export type PecivoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * Filter, which Pecivo to fetch.
     */
    where?: PecivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecivos to fetch.
     */
    orderBy?: PecivoOrderByWithRelationInput | PecivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pecivos.
     */
    cursor?: PecivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pecivos.
     */
    distinct?: PecivoScalarFieldEnum | PecivoScalarFieldEnum[]
  }

  /**
   * Pecivo findFirstOrThrow
   */
  export type PecivoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * Filter, which Pecivo to fetch.
     */
    where?: PecivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecivos to fetch.
     */
    orderBy?: PecivoOrderByWithRelationInput | PecivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pecivos.
     */
    cursor?: PecivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecivos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pecivos.
     */
    distinct?: PecivoScalarFieldEnum | PecivoScalarFieldEnum[]
  }

  /**
   * Pecivo findMany
   */
  export type PecivoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * Filter, which Pecivos to fetch.
     */
    where?: PecivoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pecivos to fetch.
     */
    orderBy?: PecivoOrderByWithRelationInput | PecivoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pecivos.
     */
    cursor?: PecivoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pecivos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pecivos.
     */
    skip?: number
    distinct?: PecivoScalarFieldEnum | PecivoScalarFieldEnum[]
  }

  /**
   * Pecivo create
   */
  export type PecivoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * The data needed to create a Pecivo.
     */
    data: XOR<PecivoCreateInput, PecivoUncheckedCreateInput>
  }

  /**
   * Pecivo createMany
   */
  export type PecivoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pecivos.
     */
    data: PecivoCreateManyInput | PecivoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Pecivo createManyAndReturn
   */
  export type PecivoCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Pecivos.
     */
    data: PecivoCreateManyInput | PecivoCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Pecivo update
   */
  export type PecivoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * The data needed to update a Pecivo.
     */
    data: XOR<PecivoUpdateInput, PecivoUncheckedUpdateInput>
    /**
     * Choose, which Pecivo to update.
     */
    where: PecivoWhereUniqueInput
  }

  /**
   * Pecivo updateMany
   */
  export type PecivoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pecivos.
     */
    data: XOR<PecivoUpdateManyMutationInput, PecivoUncheckedUpdateManyInput>
    /**
     * Filter which Pecivos to update
     */
    where?: PecivoWhereInput
  }

  /**
   * Pecivo upsert
   */
  export type PecivoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * The filter to search for the Pecivo to update in case it exists.
     */
    where: PecivoWhereUniqueInput
    /**
     * In case the Pecivo found by the `where` argument doesn't exist, create a new Pecivo with this data.
     */
    create: XOR<PecivoCreateInput, PecivoUncheckedCreateInput>
    /**
     * In case the Pecivo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PecivoUpdateInput, PecivoUncheckedUpdateInput>
  }

  /**
   * Pecivo delete
   */
  export type PecivoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    /**
     * Filter which Pecivo to delete.
     */
    where: PecivoWhereUniqueInput
  }

  /**
   * Pecivo deleteMany
   */
  export type PecivoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pecivos to delete
     */
    where?: PecivoWhereInput
  }

  /**
   * Pecivo.promotions
   */
  export type Pecivo$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Pecivo.ProductAnalytics
   */
  export type Pecivo$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * Pecivo.ShoppingListItem
   */
  export type Pecivo$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * Pecivo without action
   */
  export type PecivoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
  }


  /**
   * Model MasoRybyALahodky
   */

  export type AggregateMasoRybyALahodky = {
    _count: MasoRybyALahodkyCountAggregateOutputType | null
    _avg: MasoRybyALahodkyAvgAggregateOutputType | null
    _sum: MasoRybyALahodkySumAggregateOutputType | null
    _min: MasoRybyALahodkyMinAggregateOutputType | null
    _max: MasoRybyALahodkyMaxAggregateOutputType | null
  }

  export type MasoRybyALahodkyAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type MasoRybyALahodkySumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type MasoRybyALahodkyMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type MasoRybyALahodkyMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type MasoRybyALahodkyCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type MasoRybyALahodkyAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type MasoRybyALahodkySumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type MasoRybyALahodkyMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type MasoRybyALahodkyMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type MasoRybyALahodkyCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type MasoRybyALahodkyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MasoRybyALahodky to aggregate.
     */
    where?: MasoRybyALahodkyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MasoRybyALahodkies to fetch.
     */
    orderBy?: MasoRybyALahodkyOrderByWithRelationInput | MasoRybyALahodkyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MasoRybyALahodkyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MasoRybyALahodkies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MasoRybyALahodkies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MasoRybyALahodkies
    **/
    _count?: true | MasoRybyALahodkyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MasoRybyALahodkyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MasoRybyALahodkySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MasoRybyALahodkyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MasoRybyALahodkyMaxAggregateInputType
  }

  export type GetMasoRybyALahodkyAggregateType<T extends MasoRybyALahodkyAggregateArgs> = {
        [P in keyof T & keyof AggregateMasoRybyALahodky]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMasoRybyALahodky[P]>
      : GetScalarType<T[P], AggregateMasoRybyALahodky[P]>
  }




  export type MasoRybyALahodkyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MasoRybyALahodkyWhereInput
    orderBy?: MasoRybyALahodkyOrderByWithAggregationInput | MasoRybyALahodkyOrderByWithAggregationInput[]
    by: MasoRybyALahodkyScalarFieldEnum[] | MasoRybyALahodkyScalarFieldEnum
    having?: MasoRybyALahodkyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MasoRybyALahodkyCountAggregateInputType | true
    _avg?: MasoRybyALahodkyAvgAggregateInputType
    _sum?: MasoRybyALahodkySumAggregateInputType
    _min?: MasoRybyALahodkyMinAggregateInputType
    _max?: MasoRybyALahodkyMaxAggregateInputType
  }

  export type MasoRybyALahodkyGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: MasoRybyALahodkyCountAggregateOutputType | null
    _avg: MasoRybyALahodkyAvgAggregateOutputType | null
    _sum: MasoRybyALahodkySumAggregateOutputType | null
    _min: MasoRybyALahodkyMinAggregateOutputType | null
    _max: MasoRybyALahodkyMaxAggregateOutputType | null
  }

  type GetMasoRybyALahodkyGroupByPayload<T extends MasoRybyALahodkyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MasoRybyALahodkyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MasoRybyALahodkyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MasoRybyALahodkyGroupByOutputType[P]>
            : GetScalarType<T[P], MasoRybyALahodkyGroupByOutputType[P]>
        }
      >
    >


  export type MasoRybyALahodkySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | MasoRybyALahodky$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | MasoRybyALahodky$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | MasoRybyALahodkyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["masoRybyALahodky"]>

  export type MasoRybyALahodkySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["masoRybyALahodky"]>

  export type MasoRybyALahodkySelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type MasoRybyALahodkyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | MasoRybyALahodky$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | MasoRybyALahodky$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | MasoRybyALahodkyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MasoRybyALahodkyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs>
  }

  export type $MasoRybyALahodkyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MasoRybyALahodky"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["masoRybyALahodky"]>
    composites: {}
  }

  type MasoRybyALahodkyGetPayload<S extends boolean | null | undefined | MasoRybyALahodkyDefaultArgs> = $Result.GetResult<Prisma.$MasoRybyALahodkyPayload, S>

  type MasoRybyALahodkyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MasoRybyALahodkyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MasoRybyALahodkyCountAggregateInputType | true
    }

  export interface MasoRybyALahodkyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MasoRybyALahodky'], meta: { name: 'MasoRybyALahodky' } }
    /**
     * Find zero or one MasoRybyALahodky that matches the filter.
     * @param {MasoRybyALahodkyFindUniqueArgs} args - Arguments to find a MasoRybyALahodky
     * @example
     * // Get one MasoRybyALahodky
     * const masoRybyALahodky = await prisma.masoRybyALahodky.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MasoRybyALahodkyFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, MasoRybyALahodkyFindUniqueArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one MasoRybyALahodky that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MasoRybyALahodkyFindUniqueOrThrowArgs} args - Arguments to find a MasoRybyALahodky
     * @example
     * // Get one MasoRybyALahodky
     * const masoRybyALahodky = await prisma.masoRybyALahodky.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MasoRybyALahodkyFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first MasoRybyALahodky that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyFindFirstArgs} args - Arguments to find a MasoRybyALahodky
     * @example
     * // Get one MasoRybyALahodky
     * const masoRybyALahodky = await prisma.masoRybyALahodky.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MasoRybyALahodkyFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyFindFirstArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first MasoRybyALahodky that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyFindFirstOrThrowArgs} args - Arguments to find a MasoRybyALahodky
     * @example
     * // Get one MasoRybyALahodky
     * const masoRybyALahodky = await prisma.masoRybyALahodky.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MasoRybyALahodkyFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more MasoRybyALahodkies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MasoRybyALahodkies
     * const masoRybyALahodkies = await prisma.masoRybyALahodky.findMany()
     * 
     * // Get first 10 MasoRybyALahodkies
     * const masoRybyALahodkies = await prisma.masoRybyALahodky.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const masoRybyALahodkyWithIdOnly = await prisma.masoRybyALahodky.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MasoRybyALahodkyFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a MasoRybyALahodky.
     * @param {MasoRybyALahodkyCreateArgs} args - Arguments to create a MasoRybyALahodky.
     * @example
     * // Create one MasoRybyALahodky
     * const MasoRybyALahodky = await prisma.masoRybyALahodky.create({
     *   data: {
     *     // ... data to create a MasoRybyALahodky
     *   }
     * })
     * 
    **/
    create<T extends MasoRybyALahodkyCreateArgs<ExtArgs>>(
      args: SelectSubset<T, MasoRybyALahodkyCreateArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many MasoRybyALahodkies.
     * @param {MasoRybyALahodkyCreateManyArgs} args - Arguments to create many MasoRybyALahodkies.
     * @example
     * // Create many MasoRybyALahodkies
     * const masoRybyALahodky = await prisma.masoRybyALahodky.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends MasoRybyALahodkyCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MasoRybyALahodkies and returns the data saved in the database.
     * @param {MasoRybyALahodkyCreateManyAndReturnArgs} args - Arguments to create many MasoRybyALahodkies.
     * @example
     * // Create many MasoRybyALahodkies
     * const masoRybyALahodky = await prisma.masoRybyALahodky.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MasoRybyALahodkies and only return the `id`
     * const masoRybyALahodkyWithIdOnly = await prisma.masoRybyALahodky.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends MasoRybyALahodkyCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a MasoRybyALahodky.
     * @param {MasoRybyALahodkyDeleteArgs} args - Arguments to delete one MasoRybyALahodky.
     * @example
     * // Delete one MasoRybyALahodky
     * const MasoRybyALahodky = await prisma.masoRybyALahodky.delete({
     *   where: {
     *     // ... filter to delete one MasoRybyALahodky
     *   }
     * })
     * 
    **/
    delete<T extends MasoRybyALahodkyDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, MasoRybyALahodkyDeleteArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one MasoRybyALahodky.
     * @param {MasoRybyALahodkyUpdateArgs} args - Arguments to update one MasoRybyALahodky.
     * @example
     * // Update one MasoRybyALahodky
     * const masoRybyALahodky = await prisma.masoRybyALahodky.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MasoRybyALahodkyUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, MasoRybyALahodkyUpdateArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more MasoRybyALahodkies.
     * @param {MasoRybyALahodkyDeleteManyArgs} args - Arguments to filter MasoRybyALahodkies to delete.
     * @example
     * // Delete a few MasoRybyALahodkies
     * const { count } = await prisma.masoRybyALahodky.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MasoRybyALahodkyDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MasoRybyALahodkyDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MasoRybyALahodkies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MasoRybyALahodkies
     * const masoRybyALahodky = await prisma.masoRybyALahodky.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MasoRybyALahodkyUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, MasoRybyALahodkyUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MasoRybyALahodky.
     * @param {MasoRybyALahodkyUpsertArgs} args - Arguments to update or create a MasoRybyALahodky.
     * @example
     * // Update or create a MasoRybyALahodky
     * const masoRybyALahodky = await prisma.masoRybyALahodky.upsert({
     *   create: {
     *     // ... data to create a MasoRybyALahodky
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MasoRybyALahodky we want to update
     *   }
     * })
    **/
    upsert<T extends MasoRybyALahodkyUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, MasoRybyALahodkyUpsertArgs<ExtArgs>>
    ): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of MasoRybyALahodkies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyCountArgs} args - Arguments to filter MasoRybyALahodkies to count.
     * @example
     * // Count the number of MasoRybyALahodkies
     * const count = await prisma.masoRybyALahodky.count({
     *   where: {
     *     // ... the filter for the MasoRybyALahodkies we want to count
     *   }
     * })
    **/
    count<T extends MasoRybyALahodkyCountArgs>(
      args?: Subset<T, MasoRybyALahodkyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MasoRybyALahodkyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MasoRybyALahodky.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MasoRybyALahodkyAggregateArgs>(args: Subset<T, MasoRybyALahodkyAggregateArgs>): Prisma.PrismaPromise<GetMasoRybyALahodkyAggregateType<T>>

    /**
     * Group by MasoRybyALahodky.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MasoRybyALahodkyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MasoRybyALahodkyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MasoRybyALahodkyGroupByArgs['orderBy'] }
        : { orderBy?: MasoRybyALahodkyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MasoRybyALahodkyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMasoRybyALahodkyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MasoRybyALahodky model
   */
  readonly fields: MasoRybyALahodkyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MasoRybyALahodky.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MasoRybyALahodkyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends MasoRybyALahodky$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, MasoRybyALahodky$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends MasoRybyALahodky$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, MasoRybyALahodky$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the MasoRybyALahodky model
   */ 
  interface MasoRybyALahodkyFieldRefs {
    readonly id: FieldRef<"MasoRybyALahodky", 'Int'>
    readonly productId: FieldRef<"MasoRybyALahodky", 'String'>
    readonly title: FieldRef<"MasoRybyALahodky", 'String'>
    readonly price: FieldRef<"MasoRybyALahodky", 'Float'>
    readonly unitPrice: FieldRef<"MasoRybyALahodky", 'Float'>
    readonly imageUrl: FieldRef<"MasoRybyALahodky", 'String'>
    readonly unitOfMeasure: FieldRef<"MasoRybyALahodky", 'String'>
    readonly isForSale: FieldRef<"MasoRybyALahodky", 'Boolean'>
    readonly aisleName: FieldRef<"MasoRybyALahodky", 'String'>
    readonly lastUpdated: FieldRef<"MasoRybyALahodky", 'DateTime'>
    readonly category: FieldRef<"MasoRybyALahodky", 'String'>
    readonly superDepartmentName: FieldRef<"MasoRybyALahodky", 'String'>
    readonly hasPromotions: FieldRef<"MasoRybyALahodky", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"MasoRybyALahodky", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MasoRybyALahodky findUnique
   */
  export type MasoRybyALahodkyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * Filter, which MasoRybyALahodky to fetch.
     */
    where: MasoRybyALahodkyWhereUniqueInput
  }

  /**
   * MasoRybyALahodky findUniqueOrThrow
   */
  export type MasoRybyALahodkyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * Filter, which MasoRybyALahodky to fetch.
     */
    where: MasoRybyALahodkyWhereUniqueInput
  }

  /**
   * MasoRybyALahodky findFirst
   */
  export type MasoRybyALahodkyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * Filter, which MasoRybyALahodky to fetch.
     */
    where?: MasoRybyALahodkyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MasoRybyALahodkies to fetch.
     */
    orderBy?: MasoRybyALahodkyOrderByWithRelationInput | MasoRybyALahodkyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MasoRybyALahodkies.
     */
    cursor?: MasoRybyALahodkyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MasoRybyALahodkies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MasoRybyALahodkies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MasoRybyALahodkies.
     */
    distinct?: MasoRybyALahodkyScalarFieldEnum | MasoRybyALahodkyScalarFieldEnum[]
  }

  /**
   * MasoRybyALahodky findFirstOrThrow
   */
  export type MasoRybyALahodkyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * Filter, which MasoRybyALahodky to fetch.
     */
    where?: MasoRybyALahodkyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MasoRybyALahodkies to fetch.
     */
    orderBy?: MasoRybyALahodkyOrderByWithRelationInput | MasoRybyALahodkyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MasoRybyALahodkies.
     */
    cursor?: MasoRybyALahodkyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MasoRybyALahodkies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MasoRybyALahodkies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MasoRybyALahodkies.
     */
    distinct?: MasoRybyALahodkyScalarFieldEnum | MasoRybyALahodkyScalarFieldEnum[]
  }

  /**
   * MasoRybyALahodky findMany
   */
  export type MasoRybyALahodkyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * Filter, which MasoRybyALahodkies to fetch.
     */
    where?: MasoRybyALahodkyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MasoRybyALahodkies to fetch.
     */
    orderBy?: MasoRybyALahodkyOrderByWithRelationInput | MasoRybyALahodkyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MasoRybyALahodkies.
     */
    cursor?: MasoRybyALahodkyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MasoRybyALahodkies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MasoRybyALahodkies.
     */
    skip?: number
    distinct?: MasoRybyALahodkyScalarFieldEnum | MasoRybyALahodkyScalarFieldEnum[]
  }

  /**
   * MasoRybyALahodky create
   */
  export type MasoRybyALahodkyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * The data needed to create a MasoRybyALahodky.
     */
    data: XOR<MasoRybyALahodkyCreateInput, MasoRybyALahodkyUncheckedCreateInput>
  }

  /**
   * MasoRybyALahodky createMany
   */
  export type MasoRybyALahodkyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MasoRybyALahodkies.
     */
    data: MasoRybyALahodkyCreateManyInput | MasoRybyALahodkyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MasoRybyALahodky createManyAndReturn
   */
  export type MasoRybyALahodkyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MasoRybyALahodkies.
     */
    data: MasoRybyALahodkyCreateManyInput | MasoRybyALahodkyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MasoRybyALahodky update
   */
  export type MasoRybyALahodkyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * The data needed to update a MasoRybyALahodky.
     */
    data: XOR<MasoRybyALahodkyUpdateInput, MasoRybyALahodkyUncheckedUpdateInput>
    /**
     * Choose, which MasoRybyALahodky to update.
     */
    where: MasoRybyALahodkyWhereUniqueInput
  }

  /**
   * MasoRybyALahodky updateMany
   */
  export type MasoRybyALahodkyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MasoRybyALahodkies.
     */
    data: XOR<MasoRybyALahodkyUpdateManyMutationInput, MasoRybyALahodkyUncheckedUpdateManyInput>
    /**
     * Filter which MasoRybyALahodkies to update
     */
    where?: MasoRybyALahodkyWhereInput
  }

  /**
   * MasoRybyALahodky upsert
   */
  export type MasoRybyALahodkyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * The filter to search for the MasoRybyALahodky to update in case it exists.
     */
    where: MasoRybyALahodkyWhereUniqueInput
    /**
     * In case the MasoRybyALahodky found by the `where` argument doesn't exist, create a new MasoRybyALahodky with this data.
     */
    create: XOR<MasoRybyALahodkyCreateInput, MasoRybyALahodkyUncheckedCreateInput>
    /**
     * In case the MasoRybyALahodky was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MasoRybyALahodkyUpdateInput, MasoRybyALahodkyUncheckedUpdateInput>
  }

  /**
   * MasoRybyALahodky delete
   */
  export type MasoRybyALahodkyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    /**
     * Filter which MasoRybyALahodky to delete.
     */
    where: MasoRybyALahodkyWhereUniqueInput
  }

  /**
   * MasoRybyALahodky deleteMany
   */
  export type MasoRybyALahodkyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MasoRybyALahodkies to delete
     */
    where?: MasoRybyALahodkyWhereInput
  }

  /**
   * MasoRybyALahodky.promotions
   */
  export type MasoRybyALahodky$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * MasoRybyALahodky.ProductAnalytics
   */
  export type MasoRybyALahodky$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * MasoRybyALahodky.ShoppingListItem
   */
  export type MasoRybyALahodky$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * MasoRybyALahodky without action
   */
  export type MasoRybyALahodkyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
  }


  /**
   * Model MliecneVyrobkyAVajcia
   */

  export type AggregateMliecneVyrobkyAVajcia = {
    _count: MliecneVyrobkyAVajciaCountAggregateOutputType | null
    _avg: MliecneVyrobkyAVajciaAvgAggregateOutputType | null
    _sum: MliecneVyrobkyAVajciaSumAggregateOutputType | null
    _min: MliecneVyrobkyAVajciaMinAggregateOutputType | null
    _max: MliecneVyrobkyAVajciaMaxAggregateOutputType | null
  }

  export type MliecneVyrobkyAVajciaAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type MliecneVyrobkyAVajciaSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type MliecneVyrobkyAVajciaMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type MliecneVyrobkyAVajciaMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type MliecneVyrobkyAVajciaCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type MliecneVyrobkyAVajciaAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type MliecneVyrobkyAVajciaSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type MliecneVyrobkyAVajciaMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type MliecneVyrobkyAVajciaMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type MliecneVyrobkyAVajciaCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type MliecneVyrobkyAVajciaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MliecneVyrobkyAVajcia to aggregate.
     */
    where?: MliecneVyrobkyAVajciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MliecneVyrobkyAVajcias to fetch.
     */
    orderBy?: MliecneVyrobkyAVajciaOrderByWithRelationInput | MliecneVyrobkyAVajciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MliecneVyrobkyAVajciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MliecneVyrobkyAVajcias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MliecneVyrobkyAVajcias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MliecneVyrobkyAVajcias
    **/
    _count?: true | MliecneVyrobkyAVajciaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MliecneVyrobkyAVajciaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MliecneVyrobkyAVajciaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MliecneVyrobkyAVajciaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MliecneVyrobkyAVajciaMaxAggregateInputType
  }

  export type GetMliecneVyrobkyAVajciaAggregateType<T extends MliecneVyrobkyAVajciaAggregateArgs> = {
        [P in keyof T & keyof AggregateMliecneVyrobkyAVajcia]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMliecneVyrobkyAVajcia[P]>
      : GetScalarType<T[P], AggregateMliecneVyrobkyAVajcia[P]>
  }




  export type MliecneVyrobkyAVajciaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MliecneVyrobkyAVajciaWhereInput
    orderBy?: MliecneVyrobkyAVajciaOrderByWithAggregationInput | MliecneVyrobkyAVajciaOrderByWithAggregationInput[]
    by: MliecneVyrobkyAVajciaScalarFieldEnum[] | MliecneVyrobkyAVajciaScalarFieldEnum
    having?: MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MliecneVyrobkyAVajciaCountAggregateInputType | true
    _avg?: MliecneVyrobkyAVajciaAvgAggregateInputType
    _sum?: MliecneVyrobkyAVajciaSumAggregateInputType
    _min?: MliecneVyrobkyAVajciaMinAggregateInputType
    _max?: MliecneVyrobkyAVajciaMaxAggregateInputType
  }

  export type MliecneVyrobkyAVajciaGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: MliecneVyrobkyAVajciaCountAggregateOutputType | null
    _avg: MliecneVyrobkyAVajciaAvgAggregateOutputType | null
    _sum: MliecneVyrobkyAVajciaSumAggregateOutputType | null
    _min: MliecneVyrobkyAVajciaMinAggregateOutputType | null
    _max: MliecneVyrobkyAVajciaMaxAggregateOutputType | null
  }

  type GetMliecneVyrobkyAVajciaGroupByPayload<T extends MliecneVyrobkyAVajciaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MliecneVyrobkyAVajciaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MliecneVyrobkyAVajciaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MliecneVyrobkyAVajciaGroupByOutputType[P]>
            : GetScalarType<T[P], MliecneVyrobkyAVajciaGroupByOutputType[P]>
        }
      >
    >


  export type MliecneVyrobkyAVajciaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | MliecneVyrobkyAVajcia$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | MliecneVyrobkyAVajcia$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | MliecneVyrobkyAVajciaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mliecneVyrobkyAVajcia"]>

  export type MliecneVyrobkyAVajciaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["mliecneVyrobkyAVajcia"]>

  export type MliecneVyrobkyAVajciaSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type MliecneVyrobkyAVajciaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | MliecneVyrobkyAVajcia$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | MliecneVyrobkyAVajcia$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | MliecneVyrobkyAVajciaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MliecneVyrobkyAVajciaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs>
  }

  export type $MliecneVyrobkyAVajciaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MliecneVyrobkyAVajcia"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["mliecneVyrobkyAVajcia"]>
    composites: {}
  }

  type MliecneVyrobkyAVajciaGetPayload<S extends boolean | null | undefined | MliecneVyrobkyAVajciaDefaultArgs> = $Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload, S>

  type MliecneVyrobkyAVajciaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MliecneVyrobkyAVajciaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MliecneVyrobkyAVajciaCountAggregateInputType | true
    }

  export interface MliecneVyrobkyAVajciaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MliecneVyrobkyAVajcia'], meta: { name: 'MliecneVyrobkyAVajcia' } }
    /**
     * Find zero or one MliecneVyrobkyAVajcia that matches the filter.
     * @param {MliecneVyrobkyAVajciaFindUniqueArgs} args - Arguments to find a MliecneVyrobkyAVajcia
     * @example
     * // Get one MliecneVyrobkyAVajcia
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MliecneVyrobkyAVajciaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, MliecneVyrobkyAVajciaFindUniqueArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one MliecneVyrobkyAVajcia that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MliecneVyrobkyAVajciaFindUniqueOrThrowArgs} args - Arguments to find a MliecneVyrobkyAVajcia
     * @example
     * // Get one MliecneVyrobkyAVajcia
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MliecneVyrobkyAVajciaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first MliecneVyrobkyAVajcia that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaFindFirstArgs} args - Arguments to find a MliecneVyrobkyAVajcia
     * @example
     * // Get one MliecneVyrobkyAVajcia
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MliecneVyrobkyAVajciaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaFindFirstArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first MliecneVyrobkyAVajcia that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaFindFirstOrThrowArgs} args - Arguments to find a MliecneVyrobkyAVajcia
     * @example
     * // Get one MliecneVyrobkyAVajcia
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MliecneVyrobkyAVajciaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more MliecneVyrobkyAVajcias that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MliecneVyrobkyAVajcias
     * const mliecneVyrobkyAVajcias = await prisma.mliecneVyrobkyAVajcia.findMany()
     * 
     * // Get first 10 MliecneVyrobkyAVajcias
     * const mliecneVyrobkyAVajcias = await prisma.mliecneVyrobkyAVajcia.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mliecneVyrobkyAVajciaWithIdOnly = await prisma.mliecneVyrobkyAVajcia.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MliecneVyrobkyAVajciaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a MliecneVyrobkyAVajcia.
     * @param {MliecneVyrobkyAVajciaCreateArgs} args - Arguments to create a MliecneVyrobkyAVajcia.
     * @example
     * // Create one MliecneVyrobkyAVajcia
     * const MliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.create({
     *   data: {
     *     // ... data to create a MliecneVyrobkyAVajcia
     *   }
     * })
     * 
    **/
    create<T extends MliecneVyrobkyAVajciaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, MliecneVyrobkyAVajciaCreateArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many MliecneVyrobkyAVajcias.
     * @param {MliecneVyrobkyAVajciaCreateManyArgs} args - Arguments to create many MliecneVyrobkyAVajcias.
     * @example
     * // Create many MliecneVyrobkyAVajcias
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends MliecneVyrobkyAVajciaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MliecneVyrobkyAVajcias and returns the data saved in the database.
     * @param {MliecneVyrobkyAVajciaCreateManyAndReturnArgs} args - Arguments to create many MliecneVyrobkyAVajcias.
     * @example
     * // Create many MliecneVyrobkyAVajcias
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MliecneVyrobkyAVajcias and only return the `id`
     * const mliecneVyrobkyAVajciaWithIdOnly = await prisma.mliecneVyrobkyAVajcia.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends MliecneVyrobkyAVajciaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a MliecneVyrobkyAVajcia.
     * @param {MliecneVyrobkyAVajciaDeleteArgs} args - Arguments to delete one MliecneVyrobkyAVajcia.
     * @example
     * // Delete one MliecneVyrobkyAVajcia
     * const MliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.delete({
     *   where: {
     *     // ... filter to delete one MliecneVyrobkyAVajcia
     *   }
     * })
     * 
    **/
    delete<T extends MliecneVyrobkyAVajciaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, MliecneVyrobkyAVajciaDeleteArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one MliecneVyrobkyAVajcia.
     * @param {MliecneVyrobkyAVajciaUpdateArgs} args - Arguments to update one MliecneVyrobkyAVajcia.
     * @example
     * // Update one MliecneVyrobkyAVajcia
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MliecneVyrobkyAVajciaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, MliecneVyrobkyAVajciaUpdateArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more MliecneVyrobkyAVajcias.
     * @param {MliecneVyrobkyAVajciaDeleteManyArgs} args - Arguments to filter MliecneVyrobkyAVajcias to delete.
     * @example
     * // Delete a few MliecneVyrobkyAVajcias
     * const { count } = await prisma.mliecneVyrobkyAVajcia.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MliecneVyrobkyAVajciaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MliecneVyrobkyAVajciaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MliecneVyrobkyAVajcias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MliecneVyrobkyAVajcias
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MliecneVyrobkyAVajciaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, MliecneVyrobkyAVajciaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MliecneVyrobkyAVajcia.
     * @param {MliecneVyrobkyAVajciaUpsertArgs} args - Arguments to update or create a MliecneVyrobkyAVajcia.
     * @example
     * // Update or create a MliecneVyrobkyAVajcia
     * const mliecneVyrobkyAVajcia = await prisma.mliecneVyrobkyAVajcia.upsert({
     *   create: {
     *     // ... data to create a MliecneVyrobkyAVajcia
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MliecneVyrobkyAVajcia we want to update
     *   }
     * })
    **/
    upsert<T extends MliecneVyrobkyAVajciaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, MliecneVyrobkyAVajciaUpsertArgs<ExtArgs>>
    ): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of MliecneVyrobkyAVajcias.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaCountArgs} args - Arguments to filter MliecneVyrobkyAVajcias to count.
     * @example
     * // Count the number of MliecneVyrobkyAVajcias
     * const count = await prisma.mliecneVyrobkyAVajcia.count({
     *   where: {
     *     // ... the filter for the MliecneVyrobkyAVajcias we want to count
     *   }
     * })
    **/
    count<T extends MliecneVyrobkyAVajciaCountArgs>(
      args?: Subset<T, MliecneVyrobkyAVajciaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MliecneVyrobkyAVajciaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MliecneVyrobkyAVajcia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MliecneVyrobkyAVajciaAggregateArgs>(args: Subset<T, MliecneVyrobkyAVajciaAggregateArgs>): Prisma.PrismaPromise<GetMliecneVyrobkyAVajciaAggregateType<T>>

    /**
     * Group by MliecneVyrobkyAVajcia.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MliecneVyrobkyAVajciaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MliecneVyrobkyAVajciaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MliecneVyrobkyAVajciaGroupByArgs['orderBy'] }
        : { orderBy?: MliecneVyrobkyAVajciaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MliecneVyrobkyAVajciaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMliecneVyrobkyAVajciaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MliecneVyrobkyAVajcia model
   */
  readonly fields: MliecneVyrobkyAVajciaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MliecneVyrobkyAVajcia.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MliecneVyrobkyAVajciaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends MliecneVyrobkyAVajcia$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, MliecneVyrobkyAVajcia$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends MliecneVyrobkyAVajcia$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, MliecneVyrobkyAVajcia$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the MliecneVyrobkyAVajcia model
   */ 
  interface MliecneVyrobkyAVajciaFieldRefs {
    readonly id: FieldRef<"MliecneVyrobkyAVajcia", 'Int'>
    readonly productId: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly title: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly price: FieldRef<"MliecneVyrobkyAVajcia", 'Float'>
    readonly unitPrice: FieldRef<"MliecneVyrobkyAVajcia", 'Float'>
    readonly imageUrl: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly unitOfMeasure: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly isForSale: FieldRef<"MliecneVyrobkyAVajcia", 'Boolean'>
    readonly aisleName: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly lastUpdated: FieldRef<"MliecneVyrobkyAVajcia", 'DateTime'>
    readonly category: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly superDepartmentName: FieldRef<"MliecneVyrobkyAVajcia", 'String'>
    readonly hasPromotions: FieldRef<"MliecneVyrobkyAVajcia", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"MliecneVyrobkyAVajcia", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MliecneVyrobkyAVajcia findUnique
   */
  export type MliecneVyrobkyAVajciaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * Filter, which MliecneVyrobkyAVajcia to fetch.
     */
    where: MliecneVyrobkyAVajciaWhereUniqueInput
  }

  /**
   * MliecneVyrobkyAVajcia findUniqueOrThrow
   */
  export type MliecneVyrobkyAVajciaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * Filter, which MliecneVyrobkyAVajcia to fetch.
     */
    where: MliecneVyrobkyAVajciaWhereUniqueInput
  }

  /**
   * MliecneVyrobkyAVajcia findFirst
   */
  export type MliecneVyrobkyAVajciaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * Filter, which MliecneVyrobkyAVajcia to fetch.
     */
    where?: MliecneVyrobkyAVajciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MliecneVyrobkyAVajcias to fetch.
     */
    orderBy?: MliecneVyrobkyAVajciaOrderByWithRelationInput | MliecneVyrobkyAVajciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MliecneVyrobkyAVajcias.
     */
    cursor?: MliecneVyrobkyAVajciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MliecneVyrobkyAVajcias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MliecneVyrobkyAVajcias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MliecneVyrobkyAVajcias.
     */
    distinct?: MliecneVyrobkyAVajciaScalarFieldEnum | MliecneVyrobkyAVajciaScalarFieldEnum[]
  }

  /**
   * MliecneVyrobkyAVajcia findFirstOrThrow
   */
  export type MliecneVyrobkyAVajciaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * Filter, which MliecneVyrobkyAVajcia to fetch.
     */
    where?: MliecneVyrobkyAVajciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MliecneVyrobkyAVajcias to fetch.
     */
    orderBy?: MliecneVyrobkyAVajciaOrderByWithRelationInput | MliecneVyrobkyAVajciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MliecneVyrobkyAVajcias.
     */
    cursor?: MliecneVyrobkyAVajciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MliecneVyrobkyAVajcias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MliecneVyrobkyAVajcias.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MliecneVyrobkyAVajcias.
     */
    distinct?: MliecneVyrobkyAVajciaScalarFieldEnum | MliecneVyrobkyAVajciaScalarFieldEnum[]
  }

  /**
   * MliecneVyrobkyAVajcia findMany
   */
  export type MliecneVyrobkyAVajciaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * Filter, which MliecneVyrobkyAVajcias to fetch.
     */
    where?: MliecneVyrobkyAVajciaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MliecneVyrobkyAVajcias to fetch.
     */
    orderBy?: MliecneVyrobkyAVajciaOrderByWithRelationInput | MliecneVyrobkyAVajciaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MliecneVyrobkyAVajcias.
     */
    cursor?: MliecneVyrobkyAVajciaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MliecneVyrobkyAVajcias from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MliecneVyrobkyAVajcias.
     */
    skip?: number
    distinct?: MliecneVyrobkyAVajciaScalarFieldEnum | MliecneVyrobkyAVajciaScalarFieldEnum[]
  }

  /**
   * MliecneVyrobkyAVajcia create
   */
  export type MliecneVyrobkyAVajciaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * The data needed to create a MliecneVyrobkyAVajcia.
     */
    data: XOR<MliecneVyrobkyAVajciaCreateInput, MliecneVyrobkyAVajciaUncheckedCreateInput>
  }

  /**
   * MliecneVyrobkyAVajcia createMany
   */
  export type MliecneVyrobkyAVajciaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MliecneVyrobkyAVajcias.
     */
    data: MliecneVyrobkyAVajciaCreateManyInput | MliecneVyrobkyAVajciaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MliecneVyrobkyAVajcia createManyAndReturn
   */
  export type MliecneVyrobkyAVajciaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MliecneVyrobkyAVajcias.
     */
    data: MliecneVyrobkyAVajciaCreateManyInput | MliecneVyrobkyAVajciaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MliecneVyrobkyAVajcia update
   */
  export type MliecneVyrobkyAVajciaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * The data needed to update a MliecneVyrobkyAVajcia.
     */
    data: XOR<MliecneVyrobkyAVajciaUpdateInput, MliecneVyrobkyAVajciaUncheckedUpdateInput>
    /**
     * Choose, which MliecneVyrobkyAVajcia to update.
     */
    where: MliecneVyrobkyAVajciaWhereUniqueInput
  }

  /**
   * MliecneVyrobkyAVajcia updateMany
   */
  export type MliecneVyrobkyAVajciaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MliecneVyrobkyAVajcias.
     */
    data: XOR<MliecneVyrobkyAVajciaUpdateManyMutationInput, MliecneVyrobkyAVajciaUncheckedUpdateManyInput>
    /**
     * Filter which MliecneVyrobkyAVajcias to update
     */
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  /**
   * MliecneVyrobkyAVajcia upsert
   */
  export type MliecneVyrobkyAVajciaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * The filter to search for the MliecneVyrobkyAVajcia to update in case it exists.
     */
    where: MliecneVyrobkyAVajciaWhereUniqueInput
    /**
     * In case the MliecneVyrobkyAVajcia found by the `where` argument doesn't exist, create a new MliecneVyrobkyAVajcia with this data.
     */
    create: XOR<MliecneVyrobkyAVajciaCreateInput, MliecneVyrobkyAVajciaUncheckedCreateInput>
    /**
     * In case the MliecneVyrobkyAVajcia was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MliecneVyrobkyAVajciaUpdateInput, MliecneVyrobkyAVajciaUncheckedUpdateInput>
  }

  /**
   * MliecneVyrobkyAVajcia delete
   */
  export type MliecneVyrobkyAVajciaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    /**
     * Filter which MliecneVyrobkyAVajcia to delete.
     */
    where: MliecneVyrobkyAVajciaWhereUniqueInput
  }

  /**
   * MliecneVyrobkyAVajcia deleteMany
   */
  export type MliecneVyrobkyAVajciaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MliecneVyrobkyAVajcias to delete
     */
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  /**
   * MliecneVyrobkyAVajcia.promotions
   */
  export type MliecneVyrobkyAVajcia$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * MliecneVyrobkyAVajcia.ProductAnalytics
   */
  export type MliecneVyrobkyAVajcia$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * MliecneVyrobkyAVajcia.ShoppingListItem
   */
  export type MliecneVyrobkyAVajcia$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * MliecneVyrobkyAVajcia without action
   */
  export type MliecneVyrobkyAVajciaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
  }


  /**
   * Model TrvanlivePotraviny
   */

  export type AggregateTrvanlivePotraviny = {
    _count: TrvanlivePotravinyCountAggregateOutputType | null
    _avg: TrvanlivePotravinyAvgAggregateOutputType | null
    _sum: TrvanlivePotravinySumAggregateOutputType | null
    _min: TrvanlivePotravinyMinAggregateOutputType | null
    _max: TrvanlivePotravinyMaxAggregateOutputType | null
  }

  export type TrvanlivePotravinyAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type TrvanlivePotravinySumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type TrvanlivePotravinyMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type TrvanlivePotravinyMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type TrvanlivePotravinyCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type TrvanlivePotravinyAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type TrvanlivePotravinySumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type TrvanlivePotravinyMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type TrvanlivePotravinyMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type TrvanlivePotravinyCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type TrvanlivePotravinyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrvanlivePotraviny to aggregate.
     */
    where?: TrvanlivePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrvanlivePotravinies to fetch.
     */
    orderBy?: TrvanlivePotravinyOrderByWithRelationInput | TrvanlivePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: TrvanlivePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrvanlivePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrvanlivePotravinies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned TrvanlivePotravinies
    **/
    _count?: true | TrvanlivePotravinyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TrvanlivePotravinyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TrvanlivePotravinySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TrvanlivePotravinyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TrvanlivePotravinyMaxAggregateInputType
  }

  export type GetTrvanlivePotravinyAggregateType<T extends TrvanlivePotravinyAggregateArgs> = {
        [P in keyof T & keyof AggregateTrvanlivePotraviny]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTrvanlivePotraviny[P]>
      : GetScalarType<T[P], AggregateTrvanlivePotraviny[P]>
  }




  export type TrvanlivePotravinyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: TrvanlivePotravinyWhereInput
    orderBy?: TrvanlivePotravinyOrderByWithAggregationInput | TrvanlivePotravinyOrderByWithAggregationInput[]
    by: TrvanlivePotravinyScalarFieldEnum[] | TrvanlivePotravinyScalarFieldEnum
    having?: TrvanlivePotravinyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TrvanlivePotravinyCountAggregateInputType | true
    _avg?: TrvanlivePotravinyAvgAggregateInputType
    _sum?: TrvanlivePotravinySumAggregateInputType
    _min?: TrvanlivePotravinyMinAggregateInputType
    _max?: TrvanlivePotravinyMaxAggregateInputType
  }

  export type TrvanlivePotravinyGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: TrvanlivePotravinyCountAggregateOutputType | null
    _avg: TrvanlivePotravinyAvgAggregateOutputType | null
    _sum: TrvanlivePotravinySumAggregateOutputType | null
    _min: TrvanlivePotravinyMinAggregateOutputType | null
    _max: TrvanlivePotravinyMaxAggregateOutputType | null
  }

  type GetTrvanlivePotravinyGroupByPayload<T extends TrvanlivePotravinyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TrvanlivePotravinyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TrvanlivePotravinyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TrvanlivePotravinyGroupByOutputType[P]>
            : GetScalarType<T[P], TrvanlivePotravinyGroupByOutputType[P]>
        }
      >
    >


  export type TrvanlivePotravinySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | TrvanlivePotraviny$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | TrvanlivePotraviny$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | TrvanlivePotravinyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["trvanlivePotraviny"]>

  export type TrvanlivePotravinySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["trvanlivePotraviny"]>

  export type TrvanlivePotravinySelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type TrvanlivePotravinyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | TrvanlivePotraviny$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | TrvanlivePotraviny$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | TrvanlivePotravinyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type TrvanlivePotravinyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs>
  }

  export type $TrvanlivePotravinyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "TrvanlivePotraviny"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["trvanlivePotraviny"]>
    composites: {}
  }

  type TrvanlivePotravinyGetPayload<S extends boolean | null | undefined | TrvanlivePotravinyDefaultArgs> = $Result.GetResult<Prisma.$TrvanlivePotravinyPayload, S>

  type TrvanlivePotravinyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<TrvanlivePotravinyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: TrvanlivePotravinyCountAggregateInputType | true
    }

  export interface TrvanlivePotravinyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['TrvanlivePotraviny'], meta: { name: 'TrvanlivePotraviny' } }
    /**
     * Find zero or one TrvanlivePotraviny that matches the filter.
     * @param {TrvanlivePotravinyFindUniqueArgs} args - Arguments to find a TrvanlivePotraviny
     * @example
     * // Get one TrvanlivePotraviny
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends TrvanlivePotravinyFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, TrvanlivePotravinyFindUniqueArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one TrvanlivePotraviny that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {TrvanlivePotravinyFindUniqueOrThrowArgs} args - Arguments to find a TrvanlivePotraviny
     * @example
     * // Get one TrvanlivePotraviny
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends TrvanlivePotravinyFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first TrvanlivePotraviny that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyFindFirstArgs} args - Arguments to find a TrvanlivePotraviny
     * @example
     * // Get one TrvanlivePotraviny
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends TrvanlivePotravinyFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyFindFirstArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first TrvanlivePotraviny that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyFindFirstOrThrowArgs} args - Arguments to find a TrvanlivePotraviny
     * @example
     * // Get one TrvanlivePotraviny
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends TrvanlivePotravinyFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more TrvanlivePotravinies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all TrvanlivePotravinies
     * const trvanlivePotravinies = await prisma.trvanlivePotraviny.findMany()
     * 
     * // Get first 10 TrvanlivePotravinies
     * const trvanlivePotravinies = await prisma.trvanlivePotraviny.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const trvanlivePotravinyWithIdOnly = await prisma.trvanlivePotraviny.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends TrvanlivePotravinyFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a TrvanlivePotraviny.
     * @param {TrvanlivePotravinyCreateArgs} args - Arguments to create a TrvanlivePotraviny.
     * @example
     * // Create one TrvanlivePotraviny
     * const TrvanlivePotraviny = await prisma.trvanlivePotraviny.create({
     *   data: {
     *     // ... data to create a TrvanlivePotraviny
     *   }
     * })
     * 
    **/
    create<T extends TrvanlivePotravinyCreateArgs<ExtArgs>>(
      args: SelectSubset<T, TrvanlivePotravinyCreateArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many TrvanlivePotravinies.
     * @param {TrvanlivePotravinyCreateManyArgs} args - Arguments to create many TrvanlivePotravinies.
     * @example
     * // Create many TrvanlivePotravinies
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends TrvanlivePotravinyCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many TrvanlivePotravinies and returns the data saved in the database.
     * @param {TrvanlivePotravinyCreateManyAndReturnArgs} args - Arguments to create many TrvanlivePotravinies.
     * @example
     * // Create many TrvanlivePotravinies
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many TrvanlivePotravinies and only return the `id`
     * const trvanlivePotravinyWithIdOnly = await prisma.trvanlivePotraviny.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends TrvanlivePotravinyCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a TrvanlivePotraviny.
     * @param {TrvanlivePotravinyDeleteArgs} args - Arguments to delete one TrvanlivePotraviny.
     * @example
     * // Delete one TrvanlivePotraviny
     * const TrvanlivePotraviny = await prisma.trvanlivePotraviny.delete({
     *   where: {
     *     // ... filter to delete one TrvanlivePotraviny
     *   }
     * })
     * 
    **/
    delete<T extends TrvanlivePotravinyDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, TrvanlivePotravinyDeleteArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one TrvanlivePotraviny.
     * @param {TrvanlivePotravinyUpdateArgs} args - Arguments to update one TrvanlivePotraviny.
     * @example
     * // Update one TrvanlivePotraviny
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends TrvanlivePotravinyUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, TrvanlivePotravinyUpdateArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more TrvanlivePotravinies.
     * @param {TrvanlivePotravinyDeleteManyArgs} args - Arguments to filter TrvanlivePotravinies to delete.
     * @example
     * // Delete a few TrvanlivePotravinies
     * const { count } = await prisma.trvanlivePotraviny.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends TrvanlivePotravinyDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, TrvanlivePotravinyDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more TrvanlivePotravinies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many TrvanlivePotravinies
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends TrvanlivePotravinyUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, TrvanlivePotravinyUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one TrvanlivePotraviny.
     * @param {TrvanlivePotravinyUpsertArgs} args - Arguments to update or create a TrvanlivePotraviny.
     * @example
     * // Update or create a TrvanlivePotraviny
     * const trvanlivePotraviny = await prisma.trvanlivePotraviny.upsert({
     *   create: {
     *     // ... data to create a TrvanlivePotraviny
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the TrvanlivePotraviny we want to update
     *   }
     * })
    **/
    upsert<T extends TrvanlivePotravinyUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, TrvanlivePotravinyUpsertArgs<ExtArgs>>
    ): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of TrvanlivePotravinies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyCountArgs} args - Arguments to filter TrvanlivePotravinies to count.
     * @example
     * // Count the number of TrvanlivePotravinies
     * const count = await prisma.trvanlivePotraviny.count({
     *   where: {
     *     // ... the filter for the TrvanlivePotravinies we want to count
     *   }
     * })
    **/
    count<T extends TrvanlivePotravinyCountArgs>(
      args?: Subset<T, TrvanlivePotravinyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TrvanlivePotravinyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a TrvanlivePotraviny.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TrvanlivePotravinyAggregateArgs>(args: Subset<T, TrvanlivePotravinyAggregateArgs>): Prisma.PrismaPromise<GetTrvanlivePotravinyAggregateType<T>>

    /**
     * Group by TrvanlivePotraviny.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TrvanlivePotravinyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends TrvanlivePotravinyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: TrvanlivePotravinyGroupByArgs['orderBy'] }
        : { orderBy?: TrvanlivePotravinyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, TrvanlivePotravinyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTrvanlivePotravinyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the TrvanlivePotraviny model
   */
  readonly fields: TrvanlivePotravinyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for TrvanlivePotraviny.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__TrvanlivePotravinyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends TrvanlivePotraviny$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, TrvanlivePotraviny$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends TrvanlivePotraviny$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, TrvanlivePotraviny$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the TrvanlivePotraviny model
   */ 
  interface TrvanlivePotravinyFieldRefs {
    readonly id: FieldRef<"TrvanlivePotraviny", 'Int'>
    readonly productId: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly title: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly price: FieldRef<"TrvanlivePotraviny", 'Float'>
    readonly unitPrice: FieldRef<"TrvanlivePotraviny", 'Float'>
    readonly imageUrl: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly unitOfMeasure: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly isForSale: FieldRef<"TrvanlivePotraviny", 'Boolean'>
    readonly aisleName: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly lastUpdated: FieldRef<"TrvanlivePotraviny", 'DateTime'>
    readonly category: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly superDepartmentName: FieldRef<"TrvanlivePotraviny", 'String'>
    readonly hasPromotions: FieldRef<"TrvanlivePotraviny", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"TrvanlivePotraviny", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * TrvanlivePotraviny findUnique
   */
  export type TrvanlivePotravinyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which TrvanlivePotraviny to fetch.
     */
    where: TrvanlivePotravinyWhereUniqueInput
  }

  /**
   * TrvanlivePotraviny findUniqueOrThrow
   */
  export type TrvanlivePotravinyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which TrvanlivePotraviny to fetch.
     */
    where: TrvanlivePotravinyWhereUniqueInput
  }

  /**
   * TrvanlivePotraviny findFirst
   */
  export type TrvanlivePotravinyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which TrvanlivePotraviny to fetch.
     */
    where?: TrvanlivePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrvanlivePotravinies to fetch.
     */
    orderBy?: TrvanlivePotravinyOrderByWithRelationInput | TrvanlivePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrvanlivePotravinies.
     */
    cursor?: TrvanlivePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrvanlivePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrvanlivePotravinies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrvanlivePotravinies.
     */
    distinct?: TrvanlivePotravinyScalarFieldEnum | TrvanlivePotravinyScalarFieldEnum[]
  }

  /**
   * TrvanlivePotraviny findFirstOrThrow
   */
  export type TrvanlivePotravinyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which TrvanlivePotraviny to fetch.
     */
    where?: TrvanlivePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrvanlivePotravinies to fetch.
     */
    orderBy?: TrvanlivePotravinyOrderByWithRelationInput | TrvanlivePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for TrvanlivePotravinies.
     */
    cursor?: TrvanlivePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrvanlivePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrvanlivePotravinies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of TrvanlivePotravinies.
     */
    distinct?: TrvanlivePotravinyScalarFieldEnum | TrvanlivePotravinyScalarFieldEnum[]
  }

  /**
   * TrvanlivePotraviny findMany
   */
  export type TrvanlivePotravinyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which TrvanlivePotravinies to fetch.
     */
    where?: TrvanlivePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of TrvanlivePotravinies to fetch.
     */
    orderBy?: TrvanlivePotravinyOrderByWithRelationInput | TrvanlivePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing TrvanlivePotravinies.
     */
    cursor?: TrvanlivePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` TrvanlivePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` TrvanlivePotravinies.
     */
    skip?: number
    distinct?: TrvanlivePotravinyScalarFieldEnum | TrvanlivePotravinyScalarFieldEnum[]
  }

  /**
   * TrvanlivePotraviny create
   */
  export type TrvanlivePotravinyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * The data needed to create a TrvanlivePotraviny.
     */
    data: XOR<TrvanlivePotravinyCreateInput, TrvanlivePotravinyUncheckedCreateInput>
  }

  /**
   * TrvanlivePotraviny createMany
   */
  export type TrvanlivePotravinyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many TrvanlivePotravinies.
     */
    data: TrvanlivePotravinyCreateManyInput | TrvanlivePotravinyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * TrvanlivePotraviny createManyAndReturn
   */
  export type TrvanlivePotravinyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many TrvanlivePotravinies.
     */
    data: TrvanlivePotravinyCreateManyInput | TrvanlivePotravinyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * TrvanlivePotraviny update
   */
  export type TrvanlivePotravinyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * The data needed to update a TrvanlivePotraviny.
     */
    data: XOR<TrvanlivePotravinyUpdateInput, TrvanlivePotravinyUncheckedUpdateInput>
    /**
     * Choose, which TrvanlivePotraviny to update.
     */
    where: TrvanlivePotravinyWhereUniqueInput
  }

  /**
   * TrvanlivePotraviny updateMany
   */
  export type TrvanlivePotravinyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update TrvanlivePotravinies.
     */
    data: XOR<TrvanlivePotravinyUpdateManyMutationInput, TrvanlivePotravinyUncheckedUpdateManyInput>
    /**
     * Filter which TrvanlivePotravinies to update
     */
    where?: TrvanlivePotravinyWhereInput
  }

  /**
   * TrvanlivePotraviny upsert
   */
  export type TrvanlivePotravinyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * The filter to search for the TrvanlivePotraviny to update in case it exists.
     */
    where: TrvanlivePotravinyWhereUniqueInput
    /**
     * In case the TrvanlivePotraviny found by the `where` argument doesn't exist, create a new TrvanlivePotraviny with this data.
     */
    create: XOR<TrvanlivePotravinyCreateInput, TrvanlivePotravinyUncheckedCreateInput>
    /**
     * In case the TrvanlivePotraviny was found with the provided `where` argument, update it with this data.
     */
    update: XOR<TrvanlivePotravinyUpdateInput, TrvanlivePotravinyUncheckedUpdateInput>
  }

  /**
   * TrvanlivePotraviny delete
   */
  export type TrvanlivePotravinyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    /**
     * Filter which TrvanlivePotraviny to delete.
     */
    where: TrvanlivePotravinyWhereUniqueInput
  }

  /**
   * TrvanlivePotraviny deleteMany
   */
  export type TrvanlivePotravinyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which TrvanlivePotravinies to delete
     */
    where?: TrvanlivePotravinyWhereInput
  }

  /**
   * TrvanlivePotraviny.promotions
   */
  export type TrvanlivePotraviny$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * TrvanlivePotraviny.ProductAnalytics
   */
  export type TrvanlivePotraviny$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * TrvanlivePotraviny.ShoppingListItem
   */
  export type TrvanlivePotraviny$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * TrvanlivePotraviny without action
   */
  export type TrvanlivePotravinyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
  }


  /**
   * Model SpecialnaAZdravaVyziva
   */

  export type AggregateSpecialnaAZdravaVyziva = {
    _count: SpecialnaAZdravaVyzivaCountAggregateOutputType | null
    _avg: SpecialnaAZdravaVyzivaAvgAggregateOutputType | null
    _sum: SpecialnaAZdravaVyzivaSumAggregateOutputType | null
    _min: SpecialnaAZdravaVyzivaMinAggregateOutputType | null
    _max: SpecialnaAZdravaVyzivaMaxAggregateOutputType | null
  }

  export type SpecialnaAZdravaVyzivaAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type SpecialnaAZdravaVyzivaSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type SpecialnaAZdravaVyzivaMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type SpecialnaAZdravaVyzivaMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type SpecialnaAZdravaVyzivaCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type SpecialnaAZdravaVyzivaAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type SpecialnaAZdravaVyzivaSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type SpecialnaAZdravaVyzivaMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type SpecialnaAZdravaVyzivaMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type SpecialnaAZdravaVyzivaCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type SpecialnaAZdravaVyzivaAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SpecialnaAZdravaVyziva to aggregate.
     */
    where?: SpecialnaAZdravaVyzivaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialnaAZdravaVyzivas to fetch.
     */
    orderBy?: SpecialnaAZdravaVyzivaOrderByWithRelationInput | SpecialnaAZdravaVyzivaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SpecialnaAZdravaVyzivaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialnaAZdravaVyzivas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialnaAZdravaVyzivas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SpecialnaAZdravaVyzivas
    **/
    _count?: true | SpecialnaAZdravaVyzivaCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SpecialnaAZdravaVyzivaAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SpecialnaAZdravaVyzivaSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SpecialnaAZdravaVyzivaMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SpecialnaAZdravaVyzivaMaxAggregateInputType
  }

  export type GetSpecialnaAZdravaVyzivaAggregateType<T extends SpecialnaAZdravaVyzivaAggregateArgs> = {
        [P in keyof T & keyof AggregateSpecialnaAZdravaVyziva]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpecialnaAZdravaVyziva[P]>
      : GetScalarType<T[P], AggregateSpecialnaAZdravaVyziva[P]>
  }




  export type SpecialnaAZdravaVyzivaGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SpecialnaAZdravaVyzivaWhereInput
    orderBy?: SpecialnaAZdravaVyzivaOrderByWithAggregationInput | SpecialnaAZdravaVyzivaOrderByWithAggregationInput[]
    by: SpecialnaAZdravaVyzivaScalarFieldEnum[] | SpecialnaAZdravaVyzivaScalarFieldEnum
    having?: SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SpecialnaAZdravaVyzivaCountAggregateInputType | true
    _avg?: SpecialnaAZdravaVyzivaAvgAggregateInputType
    _sum?: SpecialnaAZdravaVyzivaSumAggregateInputType
    _min?: SpecialnaAZdravaVyzivaMinAggregateInputType
    _max?: SpecialnaAZdravaVyzivaMaxAggregateInputType
  }

  export type SpecialnaAZdravaVyzivaGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: SpecialnaAZdravaVyzivaCountAggregateOutputType | null
    _avg: SpecialnaAZdravaVyzivaAvgAggregateOutputType | null
    _sum: SpecialnaAZdravaVyzivaSumAggregateOutputType | null
    _min: SpecialnaAZdravaVyzivaMinAggregateOutputType | null
    _max: SpecialnaAZdravaVyzivaMaxAggregateOutputType | null
  }

  type GetSpecialnaAZdravaVyzivaGroupByPayload<T extends SpecialnaAZdravaVyzivaGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SpecialnaAZdravaVyzivaGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SpecialnaAZdravaVyzivaGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SpecialnaAZdravaVyzivaGroupByOutputType[P]>
            : GetScalarType<T[P], SpecialnaAZdravaVyzivaGroupByOutputType[P]>
        }
      >
    >


  export type SpecialnaAZdravaVyzivaSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | SpecialnaAZdravaVyziva$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | SpecialnaAZdravaVyziva$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | SpecialnaAZdravaVyzivaCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["specialnaAZdravaVyziva"]>

  export type SpecialnaAZdravaVyzivaSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["specialnaAZdravaVyziva"]>

  export type SpecialnaAZdravaVyzivaSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type SpecialnaAZdravaVyzivaInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | SpecialnaAZdravaVyziva$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | SpecialnaAZdravaVyziva$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | SpecialnaAZdravaVyzivaCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type SpecialnaAZdravaVyzivaIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs>
  }

  export type $SpecialnaAZdravaVyzivaPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SpecialnaAZdravaVyziva"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["specialnaAZdravaVyziva"]>
    composites: {}
  }

  type SpecialnaAZdravaVyzivaGetPayload<S extends boolean | null | undefined | SpecialnaAZdravaVyzivaDefaultArgs> = $Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload, S>

  type SpecialnaAZdravaVyzivaCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SpecialnaAZdravaVyzivaFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SpecialnaAZdravaVyzivaCountAggregateInputType | true
    }

  export interface SpecialnaAZdravaVyzivaDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SpecialnaAZdravaVyziva'], meta: { name: 'SpecialnaAZdravaVyziva' } }
    /**
     * Find zero or one SpecialnaAZdravaVyziva that matches the filter.
     * @param {SpecialnaAZdravaVyzivaFindUniqueArgs} args - Arguments to find a SpecialnaAZdravaVyziva
     * @example
     * // Get one SpecialnaAZdravaVyziva
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends SpecialnaAZdravaVyzivaFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, SpecialnaAZdravaVyzivaFindUniqueArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one SpecialnaAZdravaVyziva that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SpecialnaAZdravaVyzivaFindUniqueOrThrowArgs} args - Arguments to find a SpecialnaAZdravaVyziva
     * @example
     * // Get one SpecialnaAZdravaVyziva
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends SpecialnaAZdravaVyzivaFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first SpecialnaAZdravaVyziva that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaFindFirstArgs} args - Arguments to find a SpecialnaAZdravaVyziva
     * @example
     * // Get one SpecialnaAZdravaVyziva
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends SpecialnaAZdravaVyzivaFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaFindFirstArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first SpecialnaAZdravaVyziva that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaFindFirstOrThrowArgs} args - Arguments to find a SpecialnaAZdravaVyziva
     * @example
     * // Get one SpecialnaAZdravaVyziva
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends SpecialnaAZdravaVyzivaFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more SpecialnaAZdravaVyzivas that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SpecialnaAZdravaVyzivas
     * const specialnaAZdravaVyzivas = await prisma.specialnaAZdravaVyziva.findMany()
     * 
     * // Get first 10 SpecialnaAZdravaVyzivas
     * const specialnaAZdravaVyzivas = await prisma.specialnaAZdravaVyziva.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const specialnaAZdravaVyzivaWithIdOnly = await prisma.specialnaAZdravaVyziva.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends SpecialnaAZdravaVyzivaFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a SpecialnaAZdravaVyziva.
     * @param {SpecialnaAZdravaVyzivaCreateArgs} args - Arguments to create a SpecialnaAZdravaVyziva.
     * @example
     * // Create one SpecialnaAZdravaVyziva
     * const SpecialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.create({
     *   data: {
     *     // ... data to create a SpecialnaAZdravaVyziva
     *   }
     * })
     * 
    **/
    create<T extends SpecialnaAZdravaVyzivaCreateArgs<ExtArgs>>(
      args: SelectSubset<T, SpecialnaAZdravaVyzivaCreateArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many SpecialnaAZdravaVyzivas.
     * @param {SpecialnaAZdravaVyzivaCreateManyArgs} args - Arguments to create many SpecialnaAZdravaVyzivas.
     * @example
     * // Create many SpecialnaAZdravaVyzivas
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends SpecialnaAZdravaVyzivaCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many SpecialnaAZdravaVyzivas and returns the data saved in the database.
     * @param {SpecialnaAZdravaVyzivaCreateManyAndReturnArgs} args - Arguments to create many SpecialnaAZdravaVyzivas.
     * @example
     * // Create many SpecialnaAZdravaVyzivas
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many SpecialnaAZdravaVyzivas and only return the `id`
     * const specialnaAZdravaVyzivaWithIdOnly = await prisma.specialnaAZdravaVyziva.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends SpecialnaAZdravaVyzivaCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a SpecialnaAZdravaVyziva.
     * @param {SpecialnaAZdravaVyzivaDeleteArgs} args - Arguments to delete one SpecialnaAZdravaVyziva.
     * @example
     * // Delete one SpecialnaAZdravaVyziva
     * const SpecialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.delete({
     *   where: {
     *     // ... filter to delete one SpecialnaAZdravaVyziva
     *   }
     * })
     * 
    **/
    delete<T extends SpecialnaAZdravaVyzivaDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, SpecialnaAZdravaVyzivaDeleteArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one SpecialnaAZdravaVyziva.
     * @param {SpecialnaAZdravaVyzivaUpdateArgs} args - Arguments to update one SpecialnaAZdravaVyziva.
     * @example
     * // Update one SpecialnaAZdravaVyziva
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends SpecialnaAZdravaVyzivaUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, SpecialnaAZdravaVyzivaUpdateArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more SpecialnaAZdravaVyzivas.
     * @param {SpecialnaAZdravaVyzivaDeleteManyArgs} args - Arguments to filter SpecialnaAZdravaVyzivas to delete.
     * @example
     * // Delete a few SpecialnaAZdravaVyzivas
     * const { count } = await prisma.specialnaAZdravaVyziva.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends SpecialnaAZdravaVyzivaDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, SpecialnaAZdravaVyzivaDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SpecialnaAZdravaVyzivas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SpecialnaAZdravaVyzivas
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends SpecialnaAZdravaVyzivaUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, SpecialnaAZdravaVyzivaUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SpecialnaAZdravaVyziva.
     * @param {SpecialnaAZdravaVyzivaUpsertArgs} args - Arguments to update or create a SpecialnaAZdravaVyziva.
     * @example
     * // Update or create a SpecialnaAZdravaVyziva
     * const specialnaAZdravaVyziva = await prisma.specialnaAZdravaVyziva.upsert({
     *   create: {
     *     // ... data to create a SpecialnaAZdravaVyziva
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SpecialnaAZdravaVyziva we want to update
     *   }
     * })
    **/
    upsert<T extends SpecialnaAZdravaVyzivaUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, SpecialnaAZdravaVyzivaUpsertArgs<ExtArgs>>
    ): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of SpecialnaAZdravaVyzivas.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaCountArgs} args - Arguments to filter SpecialnaAZdravaVyzivas to count.
     * @example
     * // Count the number of SpecialnaAZdravaVyzivas
     * const count = await prisma.specialnaAZdravaVyziva.count({
     *   where: {
     *     // ... the filter for the SpecialnaAZdravaVyzivas we want to count
     *   }
     * })
    **/
    count<T extends SpecialnaAZdravaVyzivaCountArgs>(
      args?: Subset<T, SpecialnaAZdravaVyzivaCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SpecialnaAZdravaVyzivaCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SpecialnaAZdravaVyziva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SpecialnaAZdravaVyzivaAggregateArgs>(args: Subset<T, SpecialnaAZdravaVyzivaAggregateArgs>): Prisma.PrismaPromise<GetSpecialnaAZdravaVyzivaAggregateType<T>>

    /**
     * Group by SpecialnaAZdravaVyziva.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialnaAZdravaVyzivaGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SpecialnaAZdravaVyzivaGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SpecialnaAZdravaVyzivaGroupByArgs['orderBy'] }
        : { orderBy?: SpecialnaAZdravaVyzivaGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SpecialnaAZdravaVyzivaGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpecialnaAZdravaVyzivaGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SpecialnaAZdravaVyziva model
   */
  readonly fields: SpecialnaAZdravaVyzivaFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SpecialnaAZdravaVyziva.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SpecialnaAZdravaVyzivaClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends SpecialnaAZdravaVyziva$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, SpecialnaAZdravaVyziva$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends SpecialnaAZdravaVyziva$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, SpecialnaAZdravaVyziva$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the SpecialnaAZdravaVyziva model
   */ 
  interface SpecialnaAZdravaVyzivaFieldRefs {
    readonly id: FieldRef<"SpecialnaAZdravaVyziva", 'Int'>
    readonly productId: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly title: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly price: FieldRef<"SpecialnaAZdravaVyziva", 'Float'>
    readonly unitPrice: FieldRef<"SpecialnaAZdravaVyziva", 'Float'>
    readonly imageUrl: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly unitOfMeasure: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly isForSale: FieldRef<"SpecialnaAZdravaVyziva", 'Boolean'>
    readonly aisleName: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly lastUpdated: FieldRef<"SpecialnaAZdravaVyziva", 'DateTime'>
    readonly category: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly superDepartmentName: FieldRef<"SpecialnaAZdravaVyziva", 'String'>
    readonly hasPromotions: FieldRef<"SpecialnaAZdravaVyziva", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"SpecialnaAZdravaVyziva", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * SpecialnaAZdravaVyziva findUnique
   */
  export type SpecialnaAZdravaVyzivaFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * Filter, which SpecialnaAZdravaVyziva to fetch.
     */
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
  }

  /**
   * SpecialnaAZdravaVyziva findUniqueOrThrow
   */
  export type SpecialnaAZdravaVyzivaFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * Filter, which SpecialnaAZdravaVyziva to fetch.
     */
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
  }

  /**
   * SpecialnaAZdravaVyziva findFirst
   */
  export type SpecialnaAZdravaVyzivaFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * Filter, which SpecialnaAZdravaVyziva to fetch.
     */
    where?: SpecialnaAZdravaVyzivaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialnaAZdravaVyzivas to fetch.
     */
    orderBy?: SpecialnaAZdravaVyzivaOrderByWithRelationInput | SpecialnaAZdravaVyzivaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SpecialnaAZdravaVyzivas.
     */
    cursor?: SpecialnaAZdravaVyzivaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialnaAZdravaVyzivas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialnaAZdravaVyzivas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SpecialnaAZdravaVyzivas.
     */
    distinct?: SpecialnaAZdravaVyzivaScalarFieldEnum | SpecialnaAZdravaVyzivaScalarFieldEnum[]
  }

  /**
   * SpecialnaAZdravaVyziva findFirstOrThrow
   */
  export type SpecialnaAZdravaVyzivaFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * Filter, which SpecialnaAZdravaVyziva to fetch.
     */
    where?: SpecialnaAZdravaVyzivaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialnaAZdravaVyzivas to fetch.
     */
    orderBy?: SpecialnaAZdravaVyzivaOrderByWithRelationInput | SpecialnaAZdravaVyzivaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SpecialnaAZdravaVyzivas.
     */
    cursor?: SpecialnaAZdravaVyzivaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialnaAZdravaVyzivas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialnaAZdravaVyzivas.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SpecialnaAZdravaVyzivas.
     */
    distinct?: SpecialnaAZdravaVyzivaScalarFieldEnum | SpecialnaAZdravaVyzivaScalarFieldEnum[]
  }

  /**
   * SpecialnaAZdravaVyziva findMany
   */
  export type SpecialnaAZdravaVyzivaFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * Filter, which SpecialnaAZdravaVyzivas to fetch.
     */
    where?: SpecialnaAZdravaVyzivaWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialnaAZdravaVyzivas to fetch.
     */
    orderBy?: SpecialnaAZdravaVyzivaOrderByWithRelationInput | SpecialnaAZdravaVyzivaOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SpecialnaAZdravaVyzivas.
     */
    cursor?: SpecialnaAZdravaVyzivaWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialnaAZdravaVyzivas from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialnaAZdravaVyzivas.
     */
    skip?: number
    distinct?: SpecialnaAZdravaVyzivaScalarFieldEnum | SpecialnaAZdravaVyzivaScalarFieldEnum[]
  }

  /**
   * SpecialnaAZdravaVyziva create
   */
  export type SpecialnaAZdravaVyzivaCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * The data needed to create a SpecialnaAZdravaVyziva.
     */
    data: XOR<SpecialnaAZdravaVyzivaCreateInput, SpecialnaAZdravaVyzivaUncheckedCreateInput>
  }

  /**
   * SpecialnaAZdravaVyziva createMany
   */
  export type SpecialnaAZdravaVyzivaCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SpecialnaAZdravaVyzivas.
     */
    data: SpecialnaAZdravaVyzivaCreateManyInput | SpecialnaAZdravaVyzivaCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SpecialnaAZdravaVyziva createManyAndReturn
   */
  export type SpecialnaAZdravaVyzivaCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many SpecialnaAZdravaVyzivas.
     */
    data: SpecialnaAZdravaVyzivaCreateManyInput | SpecialnaAZdravaVyzivaCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * SpecialnaAZdravaVyziva update
   */
  export type SpecialnaAZdravaVyzivaUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * The data needed to update a SpecialnaAZdravaVyziva.
     */
    data: XOR<SpecialnaAZdravaVyzivaUpdateInput, SpecialnaAZdravaVyzivaUncheckedUpdateInput>
    /**
     * Choose, which SpecialnaAZdravaVyziva to update.
     */
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
  }

  /**
   * SpecialnaAZdravaVyziva updateMany
   */
  export type SpecialnaAZdravaVyzivaUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SpecialnaAZdravaVyzivas.
     */
    data: XOR<SpecialnaAZdravaVyzivaUpdateManyMutationInput, SpecialnaAZdravaVyzivaUncheckedUpdateManyInput>
    /**
     * Filter which SpecialnaAZdravaVyzivas to update
     */
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  /**
   * SpecialnaAZdravaVyziva upsert
   */
  export type SpecialnaAZdravaVyzivaUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * The filter to search for the SpecialnaAZdravaVyziva to update in case it exists.
     */
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
    /**
     * In case the SpecialnaAZdravaVyziva found by the `where` argument doesn't exist, create a new SpecialnaAZdravaVyziva with this data.
     */
    create: XOR<SpecialnaAZdravaVyzivaCreateInput, SpecialnaAZdravaVyzivaUncheckedCreateInput>
    /**
     * In case the SpecialnaAZdravaVyziva was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SpecialnaAZdravaVyzivaUpdateInput, SpecialnaAZdravaVyzivaUncheckedUpdateInput>
  }

  /**
   * SpecialnaAZdravaVyziva delete
   */
  export type SpecialnaAZdravaVyzivaDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    /**
     * Filter which SpecialnaAZdravaVyziva to delete.
     */
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
  }

  /**
   * SpecialnaAZdravaVyziva deleteMany
   */
  export type SpecialnaAZdravaVyzivaDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SpecialnaAZdravaVyzivas to delete
     */
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  /**
   * SpecialnaAZdravaVyziva.promotions
   */
  export type SpecialnaAZdravaVyziva$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * SpecialnaAZdravaVyziva.ProductAnalytics
   */
  export type SpecialnaAZdravaVyziva$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * SpecialnaAZdravaVyziva.ShoppingListItem
   */
  export type SpecialnaAZdravaVyziva$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * SpecialnaAZdravaVyziva without action
   */
  export type SpecialnaAZdravaVyzivaDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
  }


  /**
   * Model MrazenePotraviny
   */

  export type AggregateMrazenePotraviny = {
    _count: MrazenePotravinyCountAggregateOutputType | null
    _avg: MrazenePotravinyAvgAggregateOutputType | null
    _sum: MrazenePotravinySumAggregateOutputType | null
    _min: MrazenePotravinyMinAggregateOutputType | null
    _max: MrazenePotravinyMaxAggregateOutputType | null
  }

  export type MrazenePotravinyAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type MrazenePotravinySumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type MrazenePotravinyMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type MrazenePotravinyMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type MrazenePotravinyCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type MrazenePotravinyAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type MrazenePotravinySumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type MrazenePotravinyMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type MrazenePotravinyMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type MrazenePotravinyCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type MrazenePotravinyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MrazenePotraviny to aggregate.
     */
    where?: MrazenePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MrazenePotravinies to fetch.
     */
    orderBy?: MrazenePotravinyOrderByWithRelationInput | MrazenePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MrazenePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MrazenePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MrazenePotravinies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned MrazenePotravinies
    **/
    _count?: true | MrazenePotravinyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MrazenePotravinyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MrazenePotravinySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MrazenePotravinyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MrazenePotravinyMaxAggregateInputType
  }

  export type GetMrazenePotravinyAggregateType<T extends MrazenePotravinyAggregateArgs> = {
        [P in keyof T & keyof AggregateMrazenePotraviny]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMrazenePotraviny[P]>
      : GetScalarType<T[P], AggregateMrazenePotraviny[P]>
  }




  export type MrazenePotravinyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MrazenePotravinyWhereInput
    orderBy?: MrazenePotravinyOrderByWithAggregationInput | MrazenePotravinyOrderByWithAggregationInput[]
    by: MrazenePotravinyScalarFieldEnum[] | MrazenePotravinyScalarFieldEnum
    having?: MrazenePotravinyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MrazenePotravinyCountAggregateInputType | true
    _avg?: MrazenePotravinyAvgAggregateInputType
    _sum?: MrazenePotravinySumAggregateInputType
    _min?: MrazenePotravinyMinAggregateInputType
    _max?: MrazenePotravinyMaxAggregateInputType
  }

  export type MrazenePotravinyGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: MrazenePotravinyCountAggregateOutputType | null
    _avg: MrazenePotravinyAvgAggregateOutputType | null
    _sum: MrazenePotravinySumAggregateOutputType | null
    _min: MrazenePotravinyMinAggregateOutputType | null
    _max: MrazenePotravinyMaxAggregateOutputType | null
  }

  type GetMrazenePotravinyGroupByPayload<T extends MrazenePotravinyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MrazenePotravinyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MrazenePotravinyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MrazenePotravinyGroupByOutputType[P]>
            : GetScalarType<T[P], MrazenePotravinyGroupByOutputType[P]>
        }
      >
    >


  export type MrazenePotravinySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | MrazenePotraviny$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | MrazenePotraviny$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | MrazenePotraviny$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | MrazenePotravinyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mrazenePotraviny"]>

  export type MrazenePotravinySelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | MrazenePotraviny$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["mrazenePotraviny"]>

  export type MrazenePotravinySelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type MrazenePotravinyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | MrazenePotraviny$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | MrazenePotraviny$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | MrazenePotraviny$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | MrazenePotravinyCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type MrazenePotravinyIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | MrazenePotraviny$ProductAnalyticsArgs<ExtArgs>
  }

  export type $MrazenePotravinyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "MrazenePotraviny"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["mrazenePotraviny"]>
    composites: {}
  }

  type MrazenePotravinyGetPayload<S extends boolean | null | undefined | MrazenePotravinyDefaultArgs> = $Result.GetResult<Prisma.$MrazenePotravinyPayload, S>

  type MrazenePotravinyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MrazenePotravinyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MrazenePotravinyCountAggregateInputType | true
    }

  export interface MrazenePotravinyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['MrazenePotraviny'], meta: { name: 'MrazenePotraviny' } }
    /**
     * Find zero or one MrazenePotraviny that matches the filter.
     * @param {MrazenePotravinyFindUniqueArgs} args - Arguments to find a MrazenePotraviny
     * @example
     * // Get one MrazenePotraviny
     * const mrazenePotraviny = await prisma.mrazenePotraviny.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends MrazenePotravinyFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, MrazenePotravinyFindUniqueArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one MrazenePotraviny that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MrazenePotravinyFindUniqueOrThrowArgs} args - Arguments to find a MrazenePotraviny
     * @example
     * // Get one MrazenePotraviny
     * const mrazenePotraviny = await prisma.mrazenePotraviny.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends MrazenePotravinyFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first MrazenePotraviny that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyFindFirstArgs} args - Arguments to find a MrazenePotraviny
     * @example
     * // Get one MrazenePotraviny
     * const mrazenePotraviny = await prisma.mrazenePotraviny.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends MrazenePotravinyFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyFindFirstArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first MrazenePotraviny that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyFindFirstOrThrowArgs} args - Arguments to find a MrazenePotraviny
     * @example
     * // Get one MrazenePotraviny
     * const mrazenePotraviny = await prisma.mrazenePotraviny.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends MrazenePotravinyFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more MrazenePotravinies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all MrazenePotravinies
     * const mrazenePotravinies = await prisma.mrazenePotraviny.findMany()
     * 
     * // Get first 10 MrazenePotravinies
     * const mrazenePotravinies = await prisma.mrazenePotraviny.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mrazenePotravinyWithIdOnly = await prisma.mrazenePotraviny.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends MrazenePotravinyFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a MrazenePotraviny.
     * @param {MrazenePotravinyCreateArgs} args - Arguments to create a MrazenePotraviny.
     * @example
     * // Create one MrazenePotraviny
     * const MrazenePotraviny = await prisma.mrazenePotraviny.create({
     *   data: {
     *     // ... data to create a MrazenePotraviny
     *   }
     * })
     * 
    **/
    create<T extends MrazenePotravinyCreateArgs<ExtArgs>>(
      args: SelectSubset<T, MrazenePotravinyCreateArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many MrazenePotravinies.
     * @param {MrazenePotravinyCreateManyArgs} args - Arguments to create many MrazenePotravinies.
     * @example
     * // Create many MrazenePotravinies
     * const mrazenePotraviny = await prisma.mrazenePotraviny.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends MrazenePotravinyCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many MrazenePotravinies and returns the data saved in the database.
     * @param {MrazenePotravinyCreateManyAndReturnArgs} args - Arguments to create many MrazenePotravinies.
     * @example
     * // Create many MrazenePotravinies
     * const mrazenePotraviny = await prisma.mrazenePotraviny.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many MrazenePotravinies and only return the `id`
     * const mrazenePotravinyWithIdOnly = await prisma.mrazenePotraviny.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends MrazenePotravinyCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a MrazenePotraviny.
     * @param {MrazenePotravinyDeleteArgs} args - Arguments to delete one MrazenePotraviny.
     * @example
     * // Delete one MrazenePotraviny
     * const MrazenePotraviny = await prisma.mrazenePotraviny.delete({
     *   where: {
     *     // ... filter to delete one MrazenePotraviny
     *   }
     * })
     * 
    **/
    delete<T extends MrazenePotravinyDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, MrazenePotravinyDeleteArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one MrazenePotraviny.
     * @param {MrazenePotravinyUpdateArgs} args - Arguments to update one MrazenePotraviny.
     * @example
     * // Update one MrazenePotraviny
     * const mrazenePotraviny = await prisma.mrazenePotraviny.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends MrazenePotravinyUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, MrazenePotravinyUpdateArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more MrazenePotravinies.
     * @param {MrazenePotravinyDeleteManyArgs} args - Arguments to filter MrazenePotravinies to delete.
     * @example
     * // Delete a few MrazenePotravinies
     * const { count } = await prisma.mrazenePotraviny.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends MrazenePotravinyDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, MrazenePotravinyDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more MrazenePotravinies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many MrazenePotravinies
     * const mrazenePotraviny = await prisma.mrazenePotraviny.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends MrazenePotravinyUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, MrazenePotravinyUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one MrazenePotraviny.
     * @param {MrazenePotravinyUpsertArgs} args - Arguments to update or create a MrazenePotraviny.
     * @example
     * // Update or create a MrazenePotraviny
     * const mrazenePotraviny = await prisma.mrazenePotraviny.upsert({
     *   create: {
     *     // ... data to create a MrazenePotraviny
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the MrazenePotraviny we want to update
     *   }
     * })
    **/
    upsert<T extends MrazenePotravinyUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, MrazenePotravinyUpsertArgs<ExtArgs>>
    ): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of MrazenePotravinies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyCountArgs} args - Arguments to filter MrazenePotravinies to count.
     * @example
     * // Count the number of MrazenePotravinies
     * const count = await prisma.mrazenePotraviny.count({
     *   where: {
     *     // ... the filter for the MrazenePotravinies we want to count
     *   }
     * })
    **/
    count<T extends MrazenePotravinyCountArgs>(
      args?: Subset<T, MrazenePotravinyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MrazenePotravinyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a MrazenePotraviny.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MrazenePotravinyAggregateArgs>(args: Subset<T, MrazenePotravinyAggregateArgs>): Prisma.PrismaPromise<GetMrazenePotravinyAggregateType<T>>

    /**
     * Group by MrazenePotraviny.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MrazenePotravinyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MrazenePotravinyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MrazenePotravinyGroupByArgs['orderBy'] }
        : { orderBy?: MrazenePotravinyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MrazenePotravinyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMrazenePotravinyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the MrazenePotraviny model
   */
  readonly fields: MrazenePotravinyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for MrazenePotraviny.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MrazenePotravinyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends MrazenePotraviny$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, MrazenePotraviny$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends MrazenePotraviny$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, MrazenePotraviny$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends MrazenePotraviny$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, MrazenePotraviny$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the MrazenePotraviny model
   */ 
  interface MrazenePotravinyFieldRefs {
    readonly id: FieldRef<"MrazenePotraviny", 'Int'>
    readonly productId: FieldRef<"MrazenePotraviny", 'String'>
    readonly title: FieldRef<"MrazenePotraviny", 'String'>
    readonly price: FieldRef<"MrazenePotraviny", 'Float'>
    readonly unitPrice: FieldRef<"MrazenePotraviny", 'Float'>
    readonly imageUrl: FieldRef<"MrazenePotraviny", 'String'>
    readonly unitOfMeasure: FieldRef<"MrazenePotraviny", 'String'>
    readonly isForSale: FieldRef<"MrazenePotraviny", 'Boolean'>
    readonly aisleName: FieldRef<"MrazenePotraviny", 'String'>
    readonly lastUpdated: FieldRef<"MrazenePotraviny", 'DateTime'>
    readonly category: FieldRef<"MrazenePotraviny", 'String'>
    readonly superDepartmentName: FieldRef<"MrazenePotraviny", 'String'>
    readonly hasPromotions: FieldRef<"MrazenePotraviny", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"MrazenePotraviny", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * MrazenePotraviny findUnique
   */
  export type MrazenePotravinyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which MrazenePotraviny to fetch.
     */
    where: MrazenePotravinyWhereUniqueInput
  }

  /**
   * MrazenePotraviny findUniqueOrThrow
   */
  export type MrazenePotravinyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which MrazenePotraviny to fetch.
     */
    where: MrazenePotravinyWhereUniqueInput
  }

  /**
   * MrazenePotraviny findFirst
   */
  export type MrazenePotravinyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which MrazenePotraviny to fetch.
     */
    where?: MrazenePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MrazenePotravinies to fetch.
     */
    orderBy?: MrazenePotravinyOrderByWithRelationInput | MrazenePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MrazenePotravinies.
     */
    cursor?: MrazenePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MrazenePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MrazenePotravinies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MrazenePotravinies.
     */
    distinct?: MrazenePotravinyScalarFieldEnum | MrazenePotravinyScalarFieldEnum[]
  }

  /**
   * MrazenePotraviny findFirstOrThrow
   */
  export type MrazenePotravinyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which MrazenePotraviny to fetch.
     */
    where?: MrazenePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MrazenePotravinies to fetch.
     */
    orderBy?: MrazenePotravinyOrderByWithRelationInput | MrazenePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for MrazenePotravinies.
     */
    cursor?: MrazenePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MrazenePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MrazenePotravinies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of MrazenePotravinies.
     */
    distinct?: MrazenePotravinyScalarFieldEnum | MrazenePotravinyScalarFieldEnum[]
  }

  /**
   * MrazenePotraviny findMany
   */
  export type MrazenePotravinyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * Filter, which MrazenePotravinies to fetch.
     */
    where?: MrazenePotravinyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of MrazenePotravinies to fetch.
     */
    orderBy?: MrazenePotravinyOrderByWithRelationInput | MrazenePotravinyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing MrazenePotravinies.
     */
    cursor?: MrazenePotravinyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` MrazenePotravinies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` MrazenePotravinies.
     */
    skip?: number
    distinct?: MrazenePotravinyScalarFieldEnum | MrazenePotravinyScalarFieldEnum[]
  }

  /**
   * MrazenePotraviny create
   */
  export type MrazenePotravinyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * The data needed to create a MrazenePotraviny.
     */
    data: XOR<MrazenePotravinyCreateInput, MrazenePotravinyUncheckedCreateInput>
  }

  /**
   * MrazenePotraviny createMany
   */
  export type MrazenePotravinyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many MrazenePotravinies.
     */
    data: MrazenePotravinyCreateManyInput | MrazenePotravinyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * MrazenePotraviny createManyAndReturn
   */
  export type MrazenePotravinyCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many MrazenePotravinies.
     */
    data: MrazenePotravinyCreateManyInput | MrazenePotravinyCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * MrazenePotraviny update
   */
  export type MrazenePotravinyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * The data needed to update a MrazenePotraviny.
     */
    data: XOR<MrazenePotravinyUpdateInput, MrazenePotravinyUncheckedUpdateInput>
    /**
     * Choose, which MrazenePotraviny to update.
     */
    where: MrazenePotravinyWhereUniqueInput
  }

  /**
   * MrazenePotraviny updateMany
   */
  export type MrazenePotravinyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update MrazenePotravinies.
     */
    data: XOR<MrazenePotravinyUpdateManyMutationInput, MrazenePotravinyUncheckedUpdateManyInput>
    /**
     * Filter which MrazenePotravinies to update
     */
    where?: MrazenePotravinyWhereInput
  }

  /**
   * MrazenePotraviny upsert
   */
  export type MrazenePotravinyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * The filter to search for the MrazenePotraviny to update in case it exists.
     */
    where: MrazenePotravinyWhereUniqueInput
    /**
     * In case the MrazenePotraviny found by the `where` argument doesn't exist, create a new MrazenePotraviny with this data.
     */
    create: XOR<MrazenePotravinyCreateInput, MrazenePotravinyUncheckedCreateInput>
    /**
     * In case the MrazenePotraviny was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MrazenePotravinyUpdateInput, MrazenePotravinyUncheckedUpdateInput>
  }

  /**
   * MrazenePotraviny delete
   */
  export type MrazenePotravinyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    /**
     * Filter which MrazenePotraviny to delete.
     */
    where: MrazenePotravinyWhereUniqueInput
  }

  /**
   * MrazenePotraviny deleteMany
   */
  export type MrazenePotravinyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which MrazenePotravinies to delete
     */
    where?: MrazenePotravinyWhereInput
  }

  /**
   * MrazenePotraviny.promotions
   */
  export type MrazenePotraviny$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * MrazenePotraviny.ProductAnalytics
   */
  export type MrazenePotraviny$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * MrazenePotraviny.ShoppingListItem
   */
  export type MrazenePotraviny$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * MrazenePotraviny without action
   */
  export type MrazenePotravinyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
  }


  /**
   * Model Napoje
   */

  export type AggregateNapoje = {
    _count: NapojeCountAggregateOutputType | null
    _avg: NapojeAvgAggregateOutputType | null
    _sum: NapojeSumAggregateOutputType | null
    _min: NapojeMinAggregateOutputType | null
    _max: NapojeMaxAggregateOutputType | null
  }

  export type NapojeAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type NapojeSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type NapojeMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type NapojeMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type NapojeCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type NapojeAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type NapojeSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type NapojeMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type NapojeMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type NapojeCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type NapojeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Napoje to aggregate.
     */
    where?: NapojeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Napojes to fetch.
     */
    orderBy?: NapojeOrderByWithRelationInput | NapojeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: NapojeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Napojes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Napojes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Napojes
    **/
    _count?: true | NapojeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: NapojeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: NapojeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: NapojeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: NapojeMaxAggregateInputType
  }

  export type GetNapojeAggregateType<T extends NapojeAggregateArgs> = {
        [P in keyof T & keyof AggregateNapoje]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateNapoje[P]>
      : GetScalarType<T[P], AggregateNapoje[P]>
  }




  export type NapojeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: NapojeWhereInput
    orderBy?: NapojeOrderByWithAggregationInput | NapojeOrderByWithAggregationInput[]
    by: NapojeScalarFieldEnum[] | NapojeScalarFieldEnum
    having?: NapojeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: NapojeCountAggregateInputType | true
    _avg?: NapojeAvgAggregateInputType
    _sum?: NapojeSumAggregateInputType
    _min?: NapojeMinAggregateInputType
    _max?: NapojeMaxAggregateInputType
  }

  export type NapojeGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: NapojeCountAggregateOutputType | null
    _avg: NapojeAvgAggregateOutputType | null
    _sum: NapojeSumAggregateOutputType | null
    _min: NapojeMinAggregateOutputType | null
    _max: NapojeMaxAggregateOutputType | null
  }

  type GetNapojeGroupByPayload<T extends NapojeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<NapojeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof NapojeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], NapojeGroupByOutputType[P]>
            : GetScalarType<T[P], NapojeGroupByOutputType[P]>
        }
      >
    >


  export type NapojeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | Napoje$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Napoje$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Napoje$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | NapojeCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["napoje"]>

  export type NapojeSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | Napoje$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["napoje"]>

  export type NapojeSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type NapojeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | Napoje$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Napoje$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Napoje$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | NapojeCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type NapojeIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | Napoje$ProductAnalyticsArgs<ExtArgs>
  }

  export type $NapojePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Napoje"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["napoje"]>
    composites: {}
  }

  type NapojeGetPayload<S extends boolean | null | undefined | NapojeDefaultArgs> = $Result.GetResult<Prisma.$NapojePayload, S>

  type NapojeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<NapojeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: NapojeCountAggregateInputType | true
    }

  export interface NapojeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Napoje'], meta: { name: 'Napoje' } }
    /**
     * Find zero or one Napoje that matches the filter.
     * @param {NapojeFindUniqueArgs} args - Arguments to find a Napoje
     * @example
     * // Get one Napoje
     * const napoje = await prisma.napoje.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends NapojeFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, NapojeFindUniqueArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Napoje that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {NapojeFindUniqueOrThrowArgs} args - Arguments to find a Napoje
     * @example
     * // Get one Napoje
     * const napoje = await prisma.napoje.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends NapojeFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Napoje that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeFindFirstArgs} args - Arguments to find a Napoje
     * @example
     * // Get one Napoje
     * const napoje = await prisma.napoje.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends NapojeFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeFindFirstArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Napoje that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeFindFirstOrThrowArgs} args - Arguments to find a Napoje
     * @example
     * // Get one Napoje
     * const napoje = await prisma.napoje.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends NapojeFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Napojes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Napojes
     * const napojes = await prisma.napoje.findMany()
     * 
     * // Get first 10 Napojes
     * const napojes = await prisma.napoje.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const napojeWithIdOnly = await prisma.napoje.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends NapojeFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Napoje.
     * @param {NapojeCreateArgs} args - Arguments to create a Napoje.
     * @example
     * // Create one Napoje
     * const Napoje = await prisma.napoje.create({
     *   data: {
     *     // ... data to create a Napoje
     *   }
     * })
     * 
    **/
    create<T extends NapojeCreateArgs<ExtArgs>>(
      args: SelectSubset<T, NapojeCreateArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Napojes.
     * @param {NapojeCreateManyArgs} args - Arguments to create many Napojes.
     * @example
     * // Create many Napojes
     * const napoje = await prisma.napoje.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends NapojeCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Napojes and returns the data saved in the database.
     * @param {NapojeCreateManyAndReturnArgs} args - Arguments to create many Napojes.
     * @example
     * // Create many Napojes
     * const napoje = await prisma.napoje.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Napojes and only return the `id`
     * const napojeWithIdOnly = await prisma.napoje.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends NapojeCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Napoje.
     * @param {NapojeDeleteArgs} args - Arguments to delete one Napoje.
     * @example
     * // Delete one Napoje
     * const Napoje = await prisma.napoje.delete({
     *   where: {
     *     // ... filter to delete one Napoje
     *   }
     * })
     * 
    **/
    delete<T extends NapojeDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, NapojeDeleteArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Napoje.
     * @param {NapojeUpdateArgs} args - Arguments to update one Napoje.
     * @example
     * // Update one Napoje
     * const napoje = await prisma.napoje.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends NapojeUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, NapojeUpdateArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Napojes.
     * @param {NapojeDeleteManyArgs} args - Arguments to filter Napojes to delete.
     * @example
     * // Delete a few Napojes
     * const { count } = await prisma.napoje.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends NapojeDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, NapojeDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Napojes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Napojes
     * const napoje = await prisma.napoje.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends NapojeUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, NapojeUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Napoje.
     * @param {NapojeUpsertArgs} args - Arguments to update or create a Napoje.
     * @example
     * // Update or create a Napoje
     * const napoje = await prisma.napoje.upsert({
     *   create: {
     *     // ... data to create a Napoje
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Napoje we want to update
     *   }
     * })
    **/
    upsert<T extends NapojeUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, NapojeUpsertArgs<ExtArgs>>
    ): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Napojes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeCountArgs} args - Arguments to filter Napojes to count.
     * @example
     * // Count the number of Napojes
     * const count = await prisma.napoje.count({
     *   where: {
     *     // ... the filter for the Napojes we want to count
     *   }
     * })
    **/
    count<T extends NapojeCountArgs>(
      args?: Subset<T, NapojeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], NapojeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Napoje.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends NapojeAggregateArgs>(args: Subset<T, NapojeAggregateArgs>): Prisma.PrismaPromise<GetNapojeAggregateType<T>>

    /**
     * Group by Napoje.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {NapojeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends NapojeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: NapojeGroupByArgs['orderBy'] }
        : { orderBy?: NapojeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, NapojeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetNapojeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Napoje model
   */
  readonly fields: NapojeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Napoje.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__NapojeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends Napoje$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Napoje$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends Napoje$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, Napoje$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends Napoje$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, Napoje$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Napoje model
   */ 
  interface NapojeFieldRefs {
    readonly id: FieldRef<"Napoje", 'Int'>
    readonly productId: FieldRef<"Napoje", 'String'>
    readonly title: FieldRef<"Napoje", 'String'>
    readonly price: FieldRef<"Napoje", 'Float'>
    readonly unitPrice: FieldRef<"Napoje", 'Float'>
    readonly imageUrl: FieldRef<"Napoje", 'String'>
    readonly unitOfMeasure: FieldRef<"Napoje", 'String'>
    readonly isForSale: FieldRef<"Napoje", 'Boolean'>
    readonly aisleName: FieldRef<"Napoje", 'String'>
    readonly lastUpdated: FieldRef<"Napoje", 'DateTime'>
    readonly category: FieldRef<"Napoje", 'String'>
    readonly superDepartmentName: FieldRef<"Napoje", 'String'>
    readonly hasPromotions: FieldRef<"Napoje", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"Napoje", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Napoje findUnique
   */
  export type NapojeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * Filter, which Napoje to fetch.
     */
    where: NapojeWhereUniqueInput
  }

  /**
   * Napoje findUniqueOrThrow
   */
  export type NapojeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * Filter, which Napoje to fetch.
     */
    where: NapojeWhereUniqueInput
  }

  /**
   * Napoje findFirst
   */
  export type NapojeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * Filter, which Napoje to fetch.
     */
    where?: NapojeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Napojes to fetch.
     */
    orderBy?: NapojeOrderByWithRelationInput | NapojeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Napojes.
     */
    cursor?: NapojeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Napojes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Napojes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Napojes.
     */
    distinct?: NapojeScalarFieldEnum | NapojeScalarFieldEnum[]
  }

  /**
   * Napoje findFirstOrThrow
   */
  export type NapojeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * Filter, which Napoje to fetch.
     */
    where?: NapojeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Napojes to fetch.
     */
    orderBy?: NapojeOrderByWithRelationInput | NapojeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Napojes.
     */
    cursor?: NapojeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Napojes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Napojes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Napojes.
     */
    distinct?: NapojeScalarFieldEnum | NapojeScalarFieldEnum[]
  }

  /**
   * Napoje findMany
   */
  export type NapojeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * Filter, which Napojes to fetch.
     */
    where?: NapojeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Napojes to fetch.
     */
    orderBy?: NapojeOrderByWithRelationInput | NapojeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Napojes.
     */
    cursor?: NapojeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Napojes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Napojes.
     */
    skip?: number
    distinct?: NapojeScalarFieldEnum | NapojeScalarFieldEnum[]
  }

  /**
   * Napoje create
   */
  export type NapojeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * The data needed to create a Napoje.
     */
    data: XOR<NapojeCreateInput, NapojeUncheckedCreateInput>
  }

  /**
   * Napoje createMany
   */
  export type NapojeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Napojes.
     */
    data: NapojeCreateManyInput | NapojeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Napoje createManyAndReturn
   */
  export type NapojeCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Napojes.
     */
    data: NapojeCreateManyInput | NapojeCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Napoje update
   */
  export type NapojeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * The data needed to update a Napoje.
     */
    data: XOR<NapojeUpdateInput, NapojeUncheckedUpdateInput>
    /**
     * Choose, which Napoje to update.
     */
    where: NapojeWhereUniqueInput
  }

  /**
   * Napoje updateMany
   */
  export type NapojeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Napojes.
     */
    data: XOR<NapojeUpdateManyMutationInput, NapojeUncheckedUpdateManyInput>
    /**
     * Filter which Napojes to update
     */
    where?: NapojeWhereInput
  }

  /**
   * Napoje upsert
   */
  export type NapojeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * The filter to search for the Napoje to update in case it exists.
     */
    where: NapojeWhereUniqueInput
    /**
     * In case the Napoje found by the `where` argument doesn't exist, create a new Napoje with this data.
     */
    create: XOR<NapojeCreateInput, NapojeUncheckedCreateInput>
    /**
     * In case the Napoje was found with the provided `where` argument, update it with this data.
     */
    update: XOR<NapojeUpdateInput, NapojeUncheckedUpdateInput>
  }

  /**
   * Napoje delete
   */
  export type NapojeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    /**
     * Filter which Napoje to delete.
     */
    where: NapojeWhereUniqueInput
  }

  /**
   * Napoje deleteMany
   */
  export type NapojeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Napojes to delete
     */
    where?: NapojeWhereInput
  }

  /**
   * Napoje.promotions
   */
  export type Napoje$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Napoje.ProductAnalytics
   */
  export type Napoje$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * Napoje.ShoppingListItem
   */
  export type Napoje$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * Napoje without action
   */
  export type NapojeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
  }


  /**
   * Model Alkohol
   */

  export type AggregateAlkohol = {
    _count: AlkoholCountAggregateOutputType | null
    _avg: AlkoholAvgAggregateOutputType | null
    _sum: AlkoholSumAggregateOutputType | null
    _min: AlkoholMinAggregateOutputType | null
    _max: AlkoholMaxAggregateOutputType | null
  }

  export type AlkoholAvgAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type AlkoholSumAggregateOutputType = {
    id: number | null
    price: number | null
    unitPrice: number | null
    productAnalyticsId: number | null
  }

  export type AlkoholMinAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type AlkoholMaxAggregateOutputType = {
    id: number | null
    productId: string | null
    title: string | null
    price: number | null
    unitPrice: number | null
    imageUrl: string | null
    unitOfMeasure: string | null
    isForSale: boolean | null
    aisleName: string | null
    lastUpdated: Date | null
    category: string | null
    superDepartmentName: string | null
    hasPromotions: boolean | null
    productAnalyticsId: number | null
  }

  export type AlkoholCountAggregateOutputType = {
    id: number
    productId: number
    title: number
    price: number
    unitPrice: number
    imageUrl: number
    unitOfMeasure: number
    isForSale: number
    aisleName: number
    lastUpdated: number
    category: number
    superDepartmentName: number
    hasPromotions: number
    productAnalyticsId: number
    _all: number
  }


  export type AlkoholAvgAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type AlkoholSumAggregateInputType = {
    id?: true
    price?: true
    unitPrice?: true
    productAnalyticsId?: true
  }

  export type AlkoholMinAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type AlkoholMaxAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
  }

  export type AlkoholCountAggregateInputType = {
    id?: true
    productId?: true
    title?: true
    price?: true
    unitPrice?: true
    imageUrl?: true
    unitOfMeasure?: true
    isForSale?: true
    aisleName?: true
    lastUpdated?: true
    category?: true
    superDepartmentName?: true
    hasPromotions?: true
    productAnalyticsId?: true
    _all?: true
  }

  export type AlkoholAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alkohol to aggregate.
     */
    where?: AlkoholWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alkohols to fetch.
     */
    orderBy?: AlkoholOrderByWithRelationInput | AlkoholOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AlkoholWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alkohols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alkohols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Alkohols
    **/
    _count?: true | AlkoholCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: AlkoholAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: AlkoholSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AlkoholMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AlkoholMaxAggregateInputType
  }

  export type GetAlkoholAggregateType<T extends AlkoholAggregateArgs> = {
        [P in keyof T & keyof AggregateAlkohol]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAlkohol[P]>
      : GetScalarType<T[P], AggregateAlkohol[P]>
  }




  export type AlkoholGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AlkoholWhereInput
    orderBy?: AlkoholOrderByWithAggregationInput | AlkoholOrderByWithAggregationInput[]
    by: AlkoholScalarFieldEnum[] | AlkoholScalarFieldEnum
    having?: AlkoholScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AlkoholCountAggregateInputType | true
    _avg?: AlkoholAvgAggregateInputType
    _sum?: AlkoholSumAggregateInputType
    _min?: AlkoholMinAggregateInputType
    _max?: AlkoholMaxAggregateInputType
  }

  export type AlkoholGroupByOutputType = {
    id: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId: number | null
    _count: AlkoholCountAggregateOutputType | null
    _avg: AlkoholAvgAggregateOutputType | null
    _sum: AlkoholSumAggregateOutputType | null
    _min: AlkoholMinAggregateOutputType | null
    _max: AlkoholMaxAggregateOutputType | null
  }

  type GetAlkoholGroupByPayload<T extends AlkoholGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AlkoholGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AlkoholGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AlkoholGroupByOutputType[P]>
            : GetScalarType<T[P], AlkoholGroupByOutputType[P]>
        }
      >
    >


  export type AlkoholSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    promotions?: boolean | Alkohol$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Alkohol$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Alkohol$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | AlkoholCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["alkohol"]>

  export type AlkoholSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
    ProductAnalytics?: boolean | Alkohol$ProductAnalyticsArgs<ExtArgs>
  }, ExtArgs["result"]["alkohol"]>

  export type AlkoholSelectScalar = {
    id?: boolean
    productId?: boolean
    title?: boolean
    price?: boolean
    unitPrice?: boolean
    imageUrl?: boolean
    unitOfMeasure?: boolean
    isForSale?: boolean
    aisleName?: boolean
    lastUpdated?: boolean
    category?: boolean
    superDepartmentName?: boolean
    hasPromotions?: boolean
    productAnalyticsId?: boolean
  }

  export type AlkoholInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    promotions?: boolean | Alkohol$promotionsArgs<ExtArgs>
    ProductAnalytics?: boolean | Alkohol$ProductAnalyticsArgs<ExtArgs>
    ShoppingListItem?: boolean | Alkohol$ShoppingListItemArgs<ExtArgs>
    _count?: boolean | AlkoholCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type AlkoholIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ProductAnalytics?: boolean | Alkohol$ProductAnalyticsArgs<ExtArgs>
  }

  export type $AlkoholPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Alkohol"
    objects: {
      promotions: Prisma.$PromotionPayload<ExtArgs>[]
      ProductAnalytics: Prisma.$ProductAnalyticsPayload<ExtArgs> | null
      ShoppingListItem: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      productId: string
      title: string
      price: number
      unitPrice: number
      imageUrl: string
      unitOfMeasure: string
      isForSale: boolean
      aisleName: string
      lastUpdated: Date
      category: string
      superDepartmentName: string
      hasPromotions: boolean
      productAnalyticsId: number | null
    }, ExtArgs["result"]["alkohol"]>
    composites: {}
  }

  type AlkoholGetPayload<S extends boolean | null | undefined | AlkoholDefaultArgs> = $Result.GetResult<Prisma.$AlkoholPayload, S>

  type AlkoholCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AlkoholFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AlkoholCountAggregateInputType | true
    }

  export interface AlkoholDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Alkohol'], meta: { name: 'Alkohol' } }
    /**
     * Find zero or one Alkohol that matches the filter.
     * @param {AlkoholFindUniqueArgs} args - Arguments to find a Alkohol
     * @example
     * // Get one Alkohol
     * const alkohol = await prisma.alkohol.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends AlkoholFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, AlkoholFindUniqueArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Alkohol that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AlkoholFindUniqueOrThrowArgs} args - Arguments to find a Alkohol
     * @example
     * // Get one Alkohol
     * const alkohol = await prisma.alkohol.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends AlkoholFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Alkohol that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholFindFirstArgs} args - Arguments to find a Alkohol
     * @example
     * // Get one Alkohol
     * const alkohol = await prisma.alkohol.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends AlkoholFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholFindFirstArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Alkohol that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholFindFirstOrThrowArgs} args - Arguments to find a Alkohol
     * @example
     * // Get one Alkohol
     * const alkohol = await prisma.alkohol.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends AlkoholFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Alkohols that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Alkohols
     * const alkohols = await prisma.alkohol.findMany()
     * 
     * // Get first 10 Alkohols
     * const alkohols = await prisma.alkohol.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const alkoholWithIdOnly = await prisma.alkohol.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends AlkoholFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Alkohol.
     * @param {AlkoholCreateArgs} args - Arguments to create a Alkohol.
     * @example
     * // Create one Alkohol
     * const Alkohol = await prisma.alkohol.create({
     *   data: {
     *     // ... data to create a Alkohol
     *   }
     * })
     * 
    **/
    create<T extends AlkoholCreateArgs<ExtArgs>>(
      args: SelectSubset<T, AlkoholCreateArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Alkohols.
     * @param {AlkoholCreateManyArgs} args - Arguments to create many Alkohols.
     * @example
     * // Create many Alkohols
     * const alkohol = await prisma.alkohol.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends AlkoholCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Alkohols and returns the data saved in the database.
     * @param {AlkoholCreateManyAndReturnArgs} args - Arguments to create many Alkohols.
     * @example
     * // Create many Alkohols
     * const alkohol = await prisma.alkohol.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Alkohols and only return the `id`
     * const alkoholWithIdOnly = await prisma.alkohol.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends AlkoholCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Alkohol.
     * @param {AlkoholDeleteArgs} args - Arguments to delete one Alkohol.
     * @example
     * // Delete one Alkohol
     * const Alkohol = await prisma.alkohol.delete({
     *   where: {
     *     // ... filter to delete one Alkohol
     *   }
     * })
     * 
    **/
    delete<T extends AlkoholDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, AlkoholDeleteArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Alkohol.
     * @param {AlkoholUpdateArgs} args - Arguments to update one Alkohol.
     * @example
     * // Update one Alkohol
     * const alkohol = await prisma.alkohol.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends AlkoholUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, AlkoholUpdateArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Alkohols.
     * @param {AlkoholDeleteManyArgs} args - Arguments to filter Alkohols to delete.
     * @example
     * // Delete a few Alkohols
     * const { count } = await prisma.alkohol.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends AlkoholDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, AlkoholDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Alkohols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Alkohols
     * const alkohol = await prisma.alkohol.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends AlkoholUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, AlkoholUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Alkohol.
     * @param {AlkoholUpsertArgs} args - Arguments to update or create a Alkohol.
     * @example
     * // Update or create a Alkohol
     * const alkohol = await prisma.alkohol.upsert({
     *   create: {
     *     // ... data to create a Alkohol
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Alkohol we want to update
     *   }
     * })
    **/
    upsert<T extends AlkoholUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, AlkoholUpsertArgs<ExtArgs>>
    ): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Alkohols.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholCountArgs} args - Arguments to filter Alkohols to count.
     * @example
     * // Count the number of Alkohols
     * const count = await prisma.alkohol.count({
     *   where: {
     *     // ... the filter for the Alkohols we want to count
     *   }
     * })
    **/
    count<T extends AlkoholCountArgs>(
      args?: Subset<T, AlkoholCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AlkoholCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Alkohol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AlkoholAggregateArgs>(args: Subset<T, AlkoholAggregateArgs>): Prisma.PrismaPromise<GetAlkoholAggregateType<T>>

    /**
     * Group by Alkohol.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AlkoholGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AlkoholGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AlkoholGroupByArgs['orderBy'] }
        : { orderBy?: AlkoholGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AlkoholGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAlkoholGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Alkohol model
   */
  readonly fields: AlkoholFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Alkohol.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AlkoholClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    promotions<T extends Alkohol$promotionsArgs<ExtArgs> = {}>(args?: Subset<T, Alkohol$promotionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'> | Null>;

    ProductAnalytics<T extends Alkohol$ProductAnalyticsArgs<ExtArgs> = {}>(args?: Subset<T, Alkohol$ProductAnalyticsArgs<ExtArgs>>): Prisma__ProductAnalyticsClient<$Result.GetResult<Prisma.$ProductAnalyticsPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    ShoppingListItem<T extends Alkohol$ShoppingListItemArgs<ExtArgs> = {}>(args?: Subset<T, Alkohol$ShoppingListItemArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Alkohol model
   */ 
  interface AlkoholFieldRefs {
    readonly id: FieldRef<"Alkohol", 'Int'>
    readonly productId: FieldRef<"Alkohol", 'String'>
    readonly title: FieldRef<"Alkohol", 'String'>
    readonly price: FieldRef<"Alkohol", 'Float'>
    readonly unitPrice: FieldRef<"Alkohol", 'Float'>
    readonly imageUrl: FieldRef<"Alkohol", 'String'>
    readonly unitOfMeasure: FieldRef<"Alkohol", 'String'>
    readonly isForSale: FieldRef<"Alkohol", 'Boolean'>
    readonly aisleName: FieldRef<"Alkohol", 'String'>
    readonly lastUpdated: FieldRef<"Alkohol", 'DateTime'>
    readonly category: FieldRef<"Alkohol", 'String'>
    readonly superDepartmentName: FieldRef<"Alkohol", 'String'>
    readonly hasPromotions: FieldRef<"Alkohol", 'Boolean'>
    readonly productAnalyticsId: FieldRef<"Alkohol", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Alkohol findUnique
   */
  export type AlkoholFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * Filter, which Alkohol to fetch.
     */
    where: AlkoholWhereUniqueInput
  }

  /**
   * Alkohol findUniqueOrThrow
   */
  export type AlkoholFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * Filter, which Alkohol to fetch.
     */
    where: AlkoholWhereUniqueInput
  }

  /**
   * Alkohol findFirst
   */
  export type AlkoholFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * Filter, which Alkohol to fetch.
     */
    where?: AlkoholWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alkohols to fetch.
     */
    orderBy?: AlkoholOrderByWithRelationInput | AlkoholOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alkohols.
     */
    cursor?: AlkoholWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alkohols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alkohols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alkohols.
     */
    distinct?: AlkoholScalarFieldEnum | AlkoholScalarFieldEnum[]
  }

  /**
   * Alkohol findFirstOrThrow
   */
  export type AlkoholFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * Filter, which Alkohol to fetch.
     */
    where?: AlkoholWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alkohols to fetch.
     */
    orderBy?: AlkoholOrderByWithRelationInput | AlkoholOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Alkohols.
     */
    cursor?: AlkoholWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alkohols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alkohols.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Alkohols.
     */
    distinct?: AlkoholScalarFieldEnum | AlkoholScalarFieldEnum[]
  }

  /**
   * Alkohol findMany
   */
  export type AlkoholFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * Filter, which Alkohols to fetch.
     */
    where?: AlkoholWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Alkohols to fetch.
     */
    orderBy?: AlkoholOrderByWithRelationInput | AlkoholOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Alkohols.
     */
    cursor?: AlkoholWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Alkohols from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Alkohols.
     */
    skip?: number
    distinct?: AlkoholScalarFieldEnum | AlkoholScalarFieldEnum[]
  }

  /**
   * Alkohol create
   */
  export type AlkoholCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * The data needed to create a Alkohol.
     */
    data: XOR<AlkoholCreateInput, AlkoholUncheckedCreateInput>
  }

  /**
   * Alkohol createMany
   */
  export type AlkoholCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Alkohols.
     */
    data: AlkoholCreateManyInput | AlkoholCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Alkohol createManyAndReturn
   */
  export type AlkoholCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Alkohols.
     */
    data: AlkoholCreateManyInput | AlkoholCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Alkohol update
   */
  export type AlkoholUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * The data needed to update a Alkohol.
     */
    data: XOR<AlkoholUpdateInput, AlkoholUncheckedUpdateInput>
    /**
     * Choose, which Alkohol to update.
     */
    where: AlkoholWhereUniqueInput
  }

  /**
   * Alkohol updateMany
   */
  export type AlkoholUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Alkohols.
     */
    data: XOR<AlkoholUpdateManyMutationInput, AlkoholUncheckedUpdateManyInput>
    /**
     * Filter which Alkohols to update
     */
    where?: AlkoholWhereInput
  }

  /**
   * Alkohol upsert
   */
  export type AlkoholUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * The filter to search for the Alkohol to update in case it exists.
     */
    where: AlkoholWhereUniqueInput
    /**
     * In case the Alkohol found by the `where` argument doesn't exist, create a new Alkohol with this data.
     */
    create: XOR<AlkoholCreateInput, AlkoholUncheckedCreateInput>
    /**
     * In case the Alkohol was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AlkoholUpdateInput, AlkoholUncheckedUpdateInput>
  }

  /**
   * Alkohol delete
   */
  export type AlkoholDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    /**
     * Filter which Alkohol to delete.
     */
    where: AlkoholWhereUniqueInput
  }

  /**
   * Alkohol deleteMany
   */
  export type AlkoholDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Alkohols to delete
     */
    where?: AlkoholWhereInput
  }

  /**
   * Alkohol.promotions
   */
  export type Alkohol$promotionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    cursor?: PromotionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Alkohol.ProductAnalytics
   */
  export type Alkohol$ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAnalytics
     */
    select?: ProductAnalyticsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAnalyticsInclude<ExtArgs> | null
    where?: ProductAnalyticsWhereInput
  }

  /**
   * Alkohol.ShoppingListItem
   */
  export type Alkohol$ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * Alkohol without action
   */
  export type AlkoholDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
  }


  /**
   * Model Promotion
   */

  export type AggregatePromotion = {
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  export type PromotionAvgAggregateOutputType = {
    id: number | null
    promotionPrice: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    mliecneVyrobkyAVajciaId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
    starostlivostODomacnostId: number | null
    zdravieAKrasaId: number | null
  }

  export type PromotionSumAggregateOutputType = {
    id: number | null
    promotionPrice: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    mliecneVyrobkyAVajciaId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
    starostlivostODomacnostId: number | null
    zdravieAKrasaId: number | null
  }

  export type PromotionMinAggregateOutputType = {
    id: number | null
    promotionId: string | null
    promotionType: string | null
    startDate: Date | null
    endDate: Date | null
    offerText: string | null
    promotionPrice: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    mliecneVyrobkyAVajciaId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
    starostlivostODomacnostId: number | null
    zdravieAKrasaId: number | null
  }

  export type PromotionMaxAggregateOutputType = {
    id: number | null
    promotionId: string | null
    promotionType: string | null
    startDate: Date | null
    endDate: Date | null
    offerText: string | null
    promotionPrice: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    mliecneVyrobkyAVajciaId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
    starostlivostODomacnostId: number | null
    zdravieAKrasaId: number | null
  }

  export type PromotionCountAggregateOutputType = {
    id: number
    promotionId: number
    promotionType: number
    startDate: number
    endDate: number
    offerText: number
    promotionPrice: number
    attributes: number
    ovocieAZeleninyId: number
    grilovanieId: number
    mliecneVyrobkyAVajciaId: number
    pecivoId: number
    masoRybyALahodkyId: number
    trvanlivePotravinyId: number
    specialnaAZdravaVyzivaId: number
    mrazenePotravinyId: number
    napojeId: number
    alkoholId: number
    starostlivostODomacnostId: number
    zdravieAKrasaId: number
    _all: number
  }


  export type PromotionAvgAggregateInputType = {
    id?: true
    promotionPrice?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    mliecneVyrobkyAVajciaId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
    starostlivostODomacnostId?: true
    zdravieAKrasaId?: true
  }

  export type PromotionSumAggregateInputType = {
    id?: true
    promotionPrice?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    mliecneVyrobkyAVajciaId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
    starostlivostODomacnostId?: true
    zdravieAKrasaId?: true
  }

  export type PromotionMinAggregateInputType = {
    id?: true
    promotionId?: true
    promotionType?: true
    startDate?: true
    endDate?: true
    offerText?: true
    promotionPrice?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    mliecneVyrobkyAVajciaId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
    starostlivostODomacnostId?: true
    zdravieAKrasaId?: true
  }

  export type PromotionMaxAggregateInputType = {
    id?: true
    promotionId?: true
    promotionType?: true
    startDate?: true
    endDate?: true
    offerText?: true
    promotionPrice?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    mliecneVyrobkyAVajciaId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
    starostlivostODomacnostId?: true
    zdravieAKrasaId?: true
  }

  export type PromotionCountAggregateInputType = {
    id?: true
    promotionId?: true
    promotionType?: true
    startDate?: true
    endDate?: true
    offerText?: true
    promotionPrice?: true
    attributes?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    mliecneVyrobkyAVajciaId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
    starostlivostODomacnostId?: true
    zdravieAKrasaId?: true
    _all?: true
  }

  export type PromotionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotion to aggregate.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Promotions
    **/
    _count?: true | PromotionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PromotionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PromotionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PromotionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PromotionMaxAggregateInputType
  }

  export type GetPromotionAggregateType<T extends PromotionAggregateArgs> = {
        [P in keyof T & keyof AggregatePromotion]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePromotion[P]>
      : GetScalarType<T[P], AggregatePromotion[P]>
  }




  export type PromotionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PromotionWhereInput
    orderBy?: PromotionOrderByWithAggregationInput | PromotionOrderByWithAggregationInput[]
    by: PromotionScalarFieldEnum[] | PromotionScalarFieldEnum
    having?: PromotionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PromotionCountAggregateInputType | true
    _avg?: PromotionAvgAggregateInputType
    _sum?: PromotionSumAggregateInputType
    _min?: PromotionMinAggregateInputType
    _max?: PromotionMaxAggregateInputType
  }

  export type PromotionGroupByOutputType = {
    id: number
    promotionId: string
    promotionType: string
    startDate: Date
    endDate: Date
    offerText: string
    promotionPrice: number | null
    attributes: string[]
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    mliecneVyrobkyAVajciaId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
    starostlivostODomacnostId: number | null
    zdravieAKrasaId: number | null
    _count: PromotionCountAggregateOutputType | null
    _avg: PromotionAvgAggregateOutputType | null
    _sum: PromotionSumAggregateOutputType | null
    _min: PromotionMinAggregateOutputType | null
    _max: PromotionMaxAggregateOutputType | null
  }

  type GetPromotionGroupByPayload<T extends PromotionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PromotionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PromotionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PromotionGroupByOutputType[P]>
            : GetScalarType<T[P], PromotionGroupByOutputType[P]>
        }
      >
    >


  export type PromotionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    promotionType?: boolean
    startDate?: boolean
    endDate?: boolean
    offerText?: boolean
    promotionPrice?: boolean
    attributes?: boolean
    ovocieAZeleninyId?: boolean
    grilovanieId?: boolean
    mliecneVyrobkyAVajciaId?: boolean
    pecivoId?: boolean
    masoRybyALahodkyId?: boolean
    trvanlivePotravinyId?: boolean
    specialnaAZdravaVyzivaId?: boolean
    mrazenePotravinyId?: boolean
    napojeId?: boolean
    alkoholId?: boolean
    starostlivostODomacnostId?: boolean
    zdravieAKrasaId?: boolean
    ovocieAZeleniny?: boolean | Promotion$ovocieAZeleninyArgs<ExtArgs>
    grilovanie?: boolean | Promotion$grilovanieArgs<ExtArgs>
    mliecneVyrobkyAVajcia?: boolean | Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs>
    pecivo?: boolean | Promotion$pecivoArgs<ExtArgs>
    masoRybyALahodky?: boolean | Promotion$masoRybyALahodkyArgs<ExtArgs>
    trvanlivePotraviny?: boolean | Promotion$trvanlivePotravinyArgs<ExtArgs>
    specialnaAZdravaVyziva?: boolean | Promotion$specialnaAZdravaVyzivaArgs<ExtArgs>
    mrazenePotraviny?: boolean | Promotion$mrazenePotravinyArgs<ExtArgs>
    napoje?: boolean | Promotion$napojeArgs<ExtArgs>
    alkohol?: boolean | Promotion$alkoholArgs<ExtArgs>
    starostlivostODomacnost?: boolean | Promotion$starostlivostODomacnostArgs<ExtArgs>
    zdravieAKrasa?: boolean | Promotion$zdravieAKrasaArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    promotionId?: boolean
    promotionType?: boolean
    startDate?: boolean
    endDate?: boolean
    offerText?: boolean
    promotionPrice?: boolean
    attributes?: boolean
    ovocieAZeleninyId?: boolean
    grilovanieId?: boolean
    mliecneVyrobkyAVajciaId?: boolean
    pecivoId?: boolean
    masoRybyALahodkyId?: boolean
    trvanlivePotravinyId?: boolean
    specialnaAZdravaVyzivaId?: boolean
    mrazenePotravinyId?: boolean
    napojeId?: boolean
    alkoholId?: boolean
    starostlivostODomacnostId?: boolean
    zdravieAKrasaId?: boolean
    ovocieAZeleniny?: boolean | Promotion$ovocieAZeleninyArgs<ExtArgs>
    grilovanie?: boolean | Promotion$grilovanieArgs<ExtArgs>
    mliecneVyrobkyAVajcia?: boolean | Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs>
    pecivo?: boolean | Promotion$pecivoArgs<ExtArgs>
    masoRybyALahodky?: boolean | Promotion$masoRybyALahodkyArgs<ExtArgs>
    trvanlivePotraviny?: boolean | Promotion$trvanlivePotravinyArgs<ExtArgs>
    specialnaAZdravaVyziva?: boolean | Promotion$specialnaAZdravaVyzivaArgs<ExtArgs>
    mrazenePotraviny?: boolean | Promotion$mrazenePotravinyArgs<ExtArgs>
    napoje?: boolean | Promotion$napojeArgs<ExtArgs>
    alkohol?: boolean | Promotion$alkoholArgs<ExtArgs>
    starostlivostODomacnost?: boolean | Promotion$starostlivostODomacnostArgs<ExtArgs>
    zdravieAKrasa?: boolean | Promotion$zdravieAKrasaArgs<ExtArgs>
  }, ExtArgs["result"]["promotion"]>

  export type PromotionSelectScalar = {
    id?: boolean
    promotionId?: boolean
    promotionType?: boolean
    startDate?: boolean
    endDate?: boolean
    offerText?: boolean
    promotionPrice?: boolean
    attributes?: boolean
    ovocieAZeleninyId?: boolean
    grilovanieId?: boolean
    mliecneVyrobkyAVajciaId?: boolean
    pecivoId?: boolean
    masoRybyALahodkyId?: boolean
    trvanlivePotravinyId?: boolean
    specialnaAZdravaVyzivaId?: boolean
    mrazenePotravinyId?: boolean
    napojeId?: boolean
    alkoholId?: boolean
    starostlivostODomacnostId?: boolean
    zdravieAKrasaId?: boolean
  }

  export type PromotionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ovocieAZeleniny?: boolean | Promotion$ovocieAZeleninyArgs<ExtArgs>
    grilovanie?: boolean | Promotion$grilovanieArgs<ExtArgs>
    mliecneVyrobkyAVajcia?: boolean | Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs>
    pecivo?: boolean | Promotion$pecivoArgs<ExtArgs>
    masoRybyALahodky?: boolean | Promotion$masoRybyALahodkyArgs<ExtArgs>
    trvanlivePotraviny?: boolean | Promotion$trvanlivePotravinyArgs<ExtArgs>
    specialnaAZdravaVyziva?: boolean | Promotion$specialnaAZdravaVyzivaArgs<ExtArgs>
    mrazenePotraviny?: boolean | Promotion$mrazenePotravinyArgs<ExtArgs>
    napoje?: boolean | Promotion$napojeArgs<ExtArgs>
    alkohol?: boolean | Promotion$alkoholArgs<ExtArgs>
    starostlivostODomacnost?: boolean | Promotion$starostlivostODomacnostArgs<ExtArgs>
    zdravieAKrasa?: boolean | Promotion$zdravieAKrasaArgs<ExtArgs>
  }
  export type PromotionIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    ovocieAZeleniny?: boolean | Promotion$ovocieAZeleninyArgs<ExtArgs>
    grilovanie?: boolean | Promotion$grilovanieArgs<ExtArgs>
    mliecneVyrobkyAVajcia?: boolean | Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs>
    pecivo?: boolean | Promotion$pecivoArgs<ExtArgs>
    masoRybyALahodky?: boolean | Promotion$masoRybyALahodkyArgs<ExtArgs>
    trvanlivePotraviny?: boolean | Promotion$trvanlivePotravinyArgs<ExtArgs>
    specialnaAZdravaVyziva?: boolean | Promotion$specialnaAZdravaVyzivaArgs<ExtArgs>
    mrazenePotraviny?: boolean | Promotion$mrazenePotravinyArgs<ExtArgs>
    napoje?: boolean | Promotion$napojeArgs<ExtArgs>
    alkohol?: boolean | Promotion$alkoholArgs<ExtArgs>
    starostlivostODomacnost?: boolean | Promotion$starostlivostODomacnostArgs<ExtArgs>
    zdravieAKrasa?: boolean | Promotion$zdravieAKrasaArgs<ExtArgs>
  }

  export type $PromotionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Promotion"
    objects: {
      ovocieAZeleniny: Prisma.$OvocieAZeleninyPayload<ExtArgs> | null
      grilovanie: Prisma.$GrilovaniePayload<ExtArgs> | null
      mliecneVyrobkyAVajcia: Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs> | null
      pecivo: Prisma.$PecivoPayload<ExtArgs> | null
      masoRybyALahodky: Prisma.$MasoRybyALahodkyPayload<ExtArgs> | null
      trvanlivePotraviny: Prisma.$TrvanlivePotravinyPayload<ExtArgs> | null
      specialnaAZdravaVyziva: Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs> | null
      mrazenePotraviny: Prisma.$MrazenePotravinyPayload<ExtArgs> | null
      napoje: Prisma.$NapojePayload<ExtArgs> | null
      alkohol: Prisma.$AlkoholPayload<ExtArgs> | null
      starostlivostODomacnost: Prisma.$StarostlivostODomacnostPayload<ExtArgs> | null
      zdravieAKrasa: Prisma.$ZdravieAKrasaPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      promotionId: string
      promotionType: string
      startDate: Date
      endDate: Date
      offerText: string
      promotionPrice: number | null
      attributes: string[]
      ovocieAZeleninyId: number | null
      grilovanieId: number | null
      mliecneVyrobkyAVajciaId: number | null
      pecivoId: number | null
      masoRybyALahodkyId: number | null
      trvanlivePotravinyId: number | null
      specialnaAZdravaVyzivaId: number | null
      mrazenePotravinyId: number | null
      napojeId: number | null
      alkoholId: number | null
      starostlivostODomacnostId: number | null
      zdravieAKrasaId: number | null
    }, ExtArgs["result"]["promotion"]>
    composites: {}
  }

  type PromotionGetPayload<S extends boolean | null | undefined | PromotionDefaultArgs> = $Result.GetResult<Prisma.$PromotionPayload, S>

  type PromotionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PromotionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PromotionCountAggregateInputType | true
    }

  export interface PromotionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Promotion'], meta: { name: 'Promotion' } }
    /**
     * Find zero or one Promotion that matches the filter.
     * @param {PromotionFindUniqueArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends PromotionFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, PromotionFindUniqueArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one Promotion that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PromotionFindUniqueOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends PromotionFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first Promotion that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends PromotionFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionFindFirstArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first Promotion that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindFirstOrThrowArgs} args - Arguments to find a Promotion
     * @example
     * // Get one Promotion
     * const promotion = await prisma.promotion.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends PromotionFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more Promotions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Promotions
     * const promotions = await prisma.promotion.findMany()
     * 
     * // Get first 10 Promotions
     * const promotions = await prisma.promotion.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const promotionWithIdOnly = await prisma.promotion.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends PromotionFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a Promotion.
     * @param {PromotionCreateArgs} args - Arguments to create a Promotion.
     * @example
     * // Create one Promotion
     * const Promotion = await prisma.promotion.create({
     *   data: {
     *     // ... data to create a Promotion
     *   }
     * })
     * 
    **/
    create<T extends PromotionCreateArgs<ExtArgs>>(
      args: SelectSubset<T, PromotionCreateArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many Promotions.
     * @param {PromotionCreateManyArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends PromotionCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Promotions and returns the data saved in the database.
     * @param {PromotionCreateManyAndReturnArgs} args - Arguments to create many Promotions.
     * @example
     * // Create many Promotions
     * const promotion = await prisma.promotion.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Promotions and only return the `id`
     * const promotionWithIdOnly = await prisma.promotion.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends PromotionCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a Promotion.
     * @param {PromotionDeleteArgs} args - Arguments to delete one Promotion.
     * @example
     * // Delete one Promotion
     * const Promotion = await prisma.promotion.delete({
     *   where: {
     *     // ... filter to delete one Promotion
     *   }
     * })
     * 
    **/
    delete<T extends PromotionDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, PromotionDeleteArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one Promotion.
     * @param {PromotionUpdateArgs} args - Arguments to update one Promotion.
     * @example
     * // Update one Promotion
     * const promotion = await prisma.promotion.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends PromotionUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, PromotionUpdateArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more Promotions.
     * @param {PromotionDeleteManyArgs} args - Arguments to filter Promotions to delete.
     * @example
     * // Delete a few Promotions
     * const { count } = await prisma.promotion.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends PromotionDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, PromotionDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Promotions
     * const promotion = await prisma.promotion.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends PromotionUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, PromotionUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Promotion.
     * @param {PromotionUpsertArgs} args - Arguments to update or create a Promotion.
     * @example
     * // Update or create a Promotion
     * const promotion = await prisma.promotion.upsert({
     *   create: {
     *     // ... data to create a Promotion
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Promotion we want to update
     *   }
     * })
    **/
    upsert<T extends PromotionUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, PromotionUpsertArgs<ExtArgs>>
    ): Prisma__PromotionClient<$Result.GetResult<Prisma.$PromotionPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of Promotions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionCountArgs} args - Arguments to filter Promotions to count.
     * @example
     * // Count the number of Promotions
     * const count = await prisma.promotion.count({
     *   where: {
     *     // ... the filter for the Promotions we want to count
     *   }
     * })
    **/
    count<T extends PromotionCountArgs>(
      args?: Subset<T, PromotionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PromotionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PromotionAggregateArgs>(args: Subset<T, PromotionAggregateArgs>): Prisma.PrismaPromise<GetPromotionAggregateType<T>>

    /**
     * Group by Promotion.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PromotionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PromotionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PromotionGroupByArgs['orderBy'] }
        : { orderBy?: PromotionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PromotionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPromotionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Promotion model
   */
  readonly fields: PromotionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Promotion.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PromotionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    ovocieAZeleniny<T extends Promotion$ovocieAZeleninyArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$ovocieAZeleninyArgs<ExtArgs>>): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    grilovanie<T extends Promotion$grilovanieArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$grilovanieArgs<ExtArgs>>): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    mliecneVyrobkyAVajcia<T extends Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs>>): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    pecivo<T extends Promotion$pecivoArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$pecivoArgs<ExtArgs>>): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    masoRybyALahodky<T extends Promotion$masoRybyALahodkyArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$masoRybyALahodkyArgs<ExtArgs>>): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    trvanlivePotraviny<T extends Promotion$trvanlivePotravinyArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$trvanlivePotravinyArgs<ExtArgs>>): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    specialnaAZdravaVyziva<T extends Promotion$specialnaAZdravaVyzivaArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$specialnaAZdravaVyzivaArgs<ExtArgs>>): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    mrazenePotraviny<T extends Promotion$mrazenePotravinyArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$mrazenePotravinyArgs<ExtArgs>>): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    napoje<T extends Promotion$napojeArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$napojeArgs<ExtArgs>>): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    alkohol<T extends Promotion$alkoholArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$alkoholArgs<ExtArgs>>): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    starostlivostODomacnost<T extends Promotion$starostlivostODomacnostArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$starostlivostODomacnostArgs<ExtArgs>>): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    zdravieAKrasa<T extends Promotion$zdravieAKrasaArgs<ExtArgs> = {}>(args?: Subset<T, Promotion$zdravieAKrasaArgs<ExtArgs>>): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the Promotion model
   */ 
  interface PromotionFieldRefs {
    readonly id: FieldRef<"Promotion", 'Int'>
    readonly promotionId: FieldRef<"Promotion", 'String'>
    readonly promotionType: FieldRef<"Promotion", 'String'>
    readonly startDate: FieldRef<"Promotion", 'DateTime'>
    readonly endDate: FieldRef<"Promotion", 'DateTime'>
    readonly offerText: FieldRef<"Promotion", 'String'>
    readonly promotionPrice: FieldRef<"Promotion", 'Float'>
    readonly attributes: FieldRef<"Promotion", 'String[]'>
    readonly ovocieAZeleninyId: FieldRef<"Promotion", 'Int'>
    readonly grilovanieId: FieldRef<"Promotion", 'Int'>
    readonly mliecneVyrobkyAVajciaId: FieldRef<"Promotion", 'Int'>
    readonly pecivoId: FieldRef<"Promotion", 'Int'>
    readonly masoRybyALahodkyId: FieldRef<"Promotion", 'Int'>
    readonly trvanlivePotravinyId: FieldRef<"Promotion", 'Int'>
    readonly specialnaAZdravaVyzivaId: FieldRef<"Promotion", 'Int'>
    readonly mrazenePotravinyId: FieldRef<"Promotion", 'Int'>
    readonly napojeId: FieldRef<"Promotion", 'Int'>
    readonly alkoholId: FieldRef<"Promotion", 'Int'>
    readonly starostlivostODomacnostId: FieldRef<"Promotion", 'Int'>
    readonly zdravieAKrasaId: FieldRef<"Promotion", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * Promotion findUnique
   */
  export type PromotionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findUniqueOrThrow
   */
  export type PromotionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion findFirst
   */
  export type PromotionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findFirstOrThrow
   */
  export type PromotionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotion to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Promotions.
     */
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion findMany
   */
  export type PromotionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter, which Promotions to fetch.
     */
    where?: PromotionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Promotions to fetch.
     */
    orderBy?: PromotionOrderByWithRelationInput | PromotionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Promotions.
     */
    cursor?: PromotionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Promotions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Promotions.
     */
    skip?: number
    distinct?: PromotionScalarFieldEnum | PromotionScalarFieldEnum[]
  }

  /**
   * Promotion create
   */
  export type PromotionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to create a Promotion.
     */
    data: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
  }

  /**
   * Promotion createMany
   */
  export type PromotionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Promotion createManyAndReturn
   */
  export type PromotionCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many Promotions.
     */
    data: PromotionCreateManyInput | PromotionCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * Promotion update
   */
  export type PromotionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The data needed to update a Promotion.
     */
    data: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
    /**
     * Choose, which Promotion to update.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion updateMany
   */
  export type PromotionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Promotions.
     */
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyInput>
    /**
     * Filter which Promotions to update
     */
    where?: PromotionWhereInput
  }

  /**
   * Promotion upsert
   */
  export type PromotionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * The filter to search for the Promotion to update in case it exists.
     */
    where: PromotionWhereUniqueInput
    /**
     * In case the Promotion found by the `where` argument doesn't exist, create a new Promotion with this data.
     */
    create: XOR<PromotionCreateInput, PromotionUncheckedCreateInput>
    /**
     * In case the Promotion was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PromotionUpdateInput, PromotionUncheckedUpdateInput>
  }

  /**
   * Promotion delete
   */
  export type PromotionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
    /**
     * Filter which Promotion to delete.
     */
    where: PromotionWhereUniqueInput
  }

  /**
   * Promotion deleteMany
   */
  export type PromotionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Promotions to delete
     */
    where?: PromotionWhereInput
  }

  /**
   * Promotion.ovocieAZeleniny
   */
  export type Promotion$ovocieAZeleninyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    where?: OvocieAZeleninyWhereInput
  }

  /**
   * Promotion.grilovanie
   */
  export type Promotion$grilovanieArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    where?: GrilovanieWhereInput
  }

  /**
   * Promotion.mliecneVyrobkyAVajcia
   */
  export type Promotion$mliecneVyrobkyAVajciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  /**
   * Promotion.pecivo
   */
  export type Promotion$pecivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    where?: PecivoWhereInput
  }

  /**
   * Promotion.masoRybyALahodky
   */
  export type Promotion$masoRybyALahodkyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    where?: MasoRybyALahodkyWhereInput
  }

  /**
   * Promotion.trvanlivePotraviny
   */
  export type Promotion$trvanlivePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    where?: TrvanlivePotravinyWhereInput
  }

  /**
   * Promotion.specialnaAZdravaVyziva
   */
  export type Promotion$specialnaAZdravaVyzivaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  /**
   * Promotion.mrazenePotraviny
   */
  export type Promotion$mrazenePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    where?: MrazenePotravinyWhereInput
  }

  /**
   * Promotion.napoje
   */
  export type Promotion$napojeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    where?: NapojeWhereInput
  }

  /**
   * Promotion.alkohol
   */
  export type Promotion$alkoholArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    where?: AlkoholWhereInput
  }

  /**
   * Promotion.starostlivostODomacnost
   */
  export type Promotion$starostlivostODomacnostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    where?: StarostlivostODomacnostWhereInput
  }

  /**
   * Promotion.zdravieAKrasa
   */
  export type Promotion$zdravieAKrasaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    where?: ZdravieAKrasaWhereInput
  }

  /**
   * Promotion without action
   */
  export type PromotionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Promotion
     */
    select?: PromotionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PromotionInclude<ExtArgs> | null
  }


  /**
   * Model UpdateSettings
   */

  export type AggregateUpdateSettings = {
    _count: UpdateSettingsCountAggregateOutputType | null
    _avg: UpdateSettingsAvgAggregateOutputType | null
    _sum: UpdateSettingsSumAggregateOutputType | null
    _min: UpdateSettingsMinAggregateOutputType | null
    _max: UpdateSettingsMaxAggregateOutputType | null
  }

  export type UpdateSettingsAvgAggregateOutputType = {
    id: number | null
  }

  export type UpdateSettingsSumAggregateOutputType = {
    id: number | null
  }

  export type UpdateSettingsMinAggregateOutputType = {
    id: number | null
    xCsrfToken: string | null
    cookie: string | null
    updatedAt: Date | null
  }

  export type UpdateSettingsMaxAggregateOutputType = {
    id: number | null
    xCsrfToken: string | null
    cookie: string | null
    updatedAt: Date | null
  }

  export type UpdateSettingsCountAggregateOutputType = {
    id: number
    xCsrfToken: number
    cookie: number
    updatedAt: number
    _all: number
  }


  export type UpdateSettingsAvgAggregateInputType = {
    id?: true
  }

  export type UpdateSettingsSumAggregateInputType = {
    id?: true
  }

  export type UpdateSettingsMinAggregateInputType = {
    id?: true
    xCsrfToken?: true
    cookie?: true
    updatedAt?: true
  }

  export type UpdateSettingsMaxAggregateInputType = {
    id?: true
    xCsrfToken?: true
    cookie?: true
    updatedAt?: true
  }

  export type UpdateSettingsCountAggregateInputType = {
    id?: true
    xCsrfToken?: true
    cookie?: true
    updatedAt?: true
    _all?: true
  }

  export type UpdateSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UpdateSettings to aggregate.
     */
    where?: UpdateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UpdateSettings to fetch.
     */
    orderBy?: UpdateSettingsOrderByWithRelationInput | UpdateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UpdateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UpdateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UpdateSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UpdateSettings
    **/
    _count?: true | UpdateSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UpdateSettingsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UpdateSettingsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UpdateSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UpdateSettingsMaxAggregateInputType
  }

  export type GetUpdateSettingsAggregateType<T extends UpdateSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateUpdateSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUpdateSettings[P]>
      : GetScalarType<T[P], AggregateUpdateSettings[P]>
  }




  export type UpdateSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UpdateSettingsWhereInput
    orderBy?: UpdateSettingsOrderByWithAggregationInput | UpdateSettingsOrderByWithAggregationInput[]
    by: UpdateSettingsScalarFieldEnum[] | UpdateSettingsScalarFieldEnum
    having?: UpdateSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UpdateSettingsCountAggregateInputType | true
    _avg?: UpdateSettingsAvgAggregateInputType
    _sum?: UpdateSettingsSumAggregateInputType
    _min?: UpdateSettingsMinAggregateInputType
    _max?: UpdateSettingsMaxAggregateInputType
  }

  export type UpdateSettingsGroupByOutputType = {
    id: number
    xCsrfToken: string
    cookie: string
    updatedAt: Date
    _count: UpdateSettingsCountAggregateOutputType | null
    _avg: UpdateSettingsAvgAggregateOutputType | null
    _sum: UpdateSettingsSumAggregateOutputType | null
    _min: UpdateSettingsMinAggregateOutputType | null
    _max: UpdateSettingsMaxAggregateOutputType | null
  }

  type GetUpdateSettingsGroupByPayload<T extends UpdateSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UpdateSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UpdateSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UpdateSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], UpdateSettingsGroupByOutputType[P]>
        }
      >
    >


  export type UpdateSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    xCsrfToken?: boolean
    cookie?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["updateSettings"]>

  export type UpdateSettingsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    xCsrfToken?: boolean
    cookie?: boolean
    updatedAt?: boolean
  }, ExtArgs["result"]["updateSettings"]>

  export type UpdateSettingsSelectScalar = {
    id?: boolean
    xCsrfToken?: boolean
    cookie?: boolean
    updatedAt?: boolean
  }


  export type $UpdateSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UpdateSettings"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      xCsrfToken: string
      cookie: string
      updatedAt: Date
    }, ExtArgs["result"]["updateSettings"]>
    composites: {}
  }

  type UpdateSettingsGetPayload<S extends boolean | null | undefined | UpdateSettingsDefaultArgs> = $Result.GetResult<Prisma.$UpdateSettingsPayload, S>

  type UpdateSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UpdateSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UpdateSettingsCountAggregateInputType | true
    }

  export interface UpdateSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UpdateSettings'], meta: { name: 'UpdateSettings' } }
    /**
     * Find zero or one UpdateSettings that matches the filter.
     * @param {UpdateSettingsFindUniqueArgs} args - Arguments to find a UpdateSettings
     * @example
     * // Get one UpdateSettings
     * const updateSettings = await prisma.updateSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends UpdateSettingsFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, UpdateSettingsFindUniqueArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one UpdateSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UpdateSettingsFindUniqueOrThrowArgs} args - Arguments to find a UpdateSettings
     * @example
     * // Get one UpdateSettings
     * const updateSettings = await prisma.updateSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends UpdateSettingsFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first UpdateSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsFindFirstArgs} args - Arguments to find a UpdateSettings
     * @example
     * // Get one UpdateSettings
     * const updateSettings = await prisma.updateSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends UpdateSettingsFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsFindFirstArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first UpdateSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsFindFirstOrThrowArgs} args - Arguments to find a UpdateSettings
     * @example
     * // Get one UpdateSettings
     * const updateSettings = await prisma.updateSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends UpdateSettingsFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more UpdateSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UpdateSettings
     * const updateSettings = await prisma.updateSettings.findMany()
     * 
     * // Get first 10 UpdateSettings
     * const updateSettings = await prisma.updateSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const updateSettingsWithIdOnly = await prisma.updateSettings.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends UpdateSettingsFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a UpdateSettings.
     * @param {UpdateSettingsCreateArgs} args - Arguments to create a UpdateSettings.
     * @example
     * // Create one UpdateSettings
     * const UpdateSettings = await prisma.updateSettings.create({
     *   data: {
     *     // ... data to create a UpdateSettings
     *   }
     * })
     * 
    **/
    create<T extends UpdateSettingsCreateArgs<ExtArgs>>(
      args: SelectSubset<T, UpdateSettingsCreateArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many UpdateSettings.
     * @param {UpdateSettingsCreateManyArgs} args - Arguments to create many UpdateSettings.
     * @example
     * // Create many UpdateSettings
     * const updateSettings = await prisma.updateSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends UpdateSettingsCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many UpdateSettings and returns the data saved in the database.
     * @param {UpdateSettingsCreateManyAndReturnArgs} args - Arguments to create many UpdateSettings.
     * @example
     * // Create many UpdateSettings
     * const updateSettings = await prisma.updateSettings.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many UpdateSettings and only return the `id`
     * const updateSettingsWithIdOnly = await prisma.updateSettings.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends UpdateSettingsCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a UpdateSettings.
     * @param {UpdateSettingsDeleteArgs} args - Arguments to delete one UpdateSettings.
     * @example
     * // Delete one UpdateSettings
     * const UpdateSettings = await prisma.updateSettings.delete({
     *   where: {
     *     // ... filter to delete one UpdateSettings
     *   }
     * })
     * 
    **/
    delete<T extends UpdateSettingsDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, UpdateSettingsDeleteArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one UpdateSettings.
     * @param {UpdateSettingsUpdateArgs} args - Arguments to update one UpdateSettings.
     * @example
     * // Update one UpdateSettings
     * const updateSettings = await prisma.updateSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends UpdateSettingsUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, UpdateSettingsUpdateArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more UpdateSettings.
     * @param {UpdateSettingsDeleteManyArgs} args - Arguments to filter UpdateSettings to delete.
     * @example
     * // Delete a few UpdateSettings
     * const { count } = await prisma.updateSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends UpdateSettingsDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, UpdateSettingsDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UpdateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UpdateSettings
     * const updateSettings = await prisma.updateSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends UpdateSettingsUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, UpdateSettingsUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UpdateSettings.
     * @param {UpdateSettingsUpsertArgs} args - Arguments to update or create a UpdateSettings.
     * @example
     * // Update or create a UpdateSettings
     * const updateSettings = await prisma.updateSettings.upsert({
     *   create: {
     *     // ... data to create a UpdateSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UpdateSettings we want to update
     *   }
     * })
    **/
    upsert<T extends UpdateSettingsUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, UpdateSettingsUpsertArgs<ExtArgs>>
    ): Prisma__UpdateSettingsClient<$Result.GetResult<Prisma.$UpdateSettingsPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of UpdateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsCountArgs} args - Arguments to filter UpdateSettings to count.
     * @example
     * // Count the number of UpdateSettings
     * const count = await prisma.updateSettings.count({
     *   where: {
     *     // ... the filter for the UpdateSettings we want to count
     *   }
     * })
    **/
    count<T extends UpdateSettingsCountArgs>(
      args?: Subset<T, UpdateSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UpdateSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UpdateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UpdateSettingsAggregateArgs>(args: Subset<T, UpdateSettingsAggregateArgs>): Prisma.PrismaPromise<GetUpdateSettingsAggregateType<T>>

    /**
     * Group by UpdateSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UpdateSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UpdateSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UpdateSettingsGroupByArgs['orderBy'] }
        : { orderBy?: UpdateSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UpdateSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUpdateSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UpdateSettings model
   */
  readonly fields: UpdateSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UpdateSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UpdateSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';


    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the UpdateSettings model
   */ 
  interface UpdateSettingsFieldRefs {
    readonly id: FieldRef<"UpdateSettings", 'Int'>
    readonly xCsrfToken: FieldRef<"UpdateSettings", 'String'>
    readonly cookie: FieldRef<"UpdateSettings", 'String'>
    readonly updatedAt: FieldRef<"UpdateSettings", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * UpdateSettings findUnique
   */
  export type UpdateSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * Filter, which UpdateSettings to fetch.
     */
    where: UpdateSettingsWhereUniqueInput
  }

  /**
   * UpdateSettings findUniqueOrThrow
   */
  export type UpdateSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * Filter, which UpdateSettings to fetch.
     */
    where: UpdateSettingsWhereUniqueInput
  }

  /**
   * UpdateSettings findFirst
   */
  export type UpdateSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * Filter, which UpdateSettings to fetch.
     */
    where?: UpdateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UpdateSettings to fetch.
     */
    orderBy?: UpdateSettingsOrderByWithRelationInput | UpdateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UpdateSettings.
     */
    cursor?: UpdateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UpdateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UpdateSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UpdateSettings.
     */
    distinct?: UpdateSettingsScalarFieldEnum | UpdateSettingsScalarFieldEnum[]
  }

  /**
   * UpdateSettings findFirstOrThrow
   */
  export type UpdateSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * Filter, which UpdateSettings to fetch.
     */
    where?: UpdateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UpdateSettings to fetch.
     */
    orderBy?: UpdateSettingsOrderByWithRelationInput | UpdateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UpdateSettings.
     */
    cursor?: UpdateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UpdateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UpdateSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UpdateSettings.
     */
    distinct?: UpdateSettingsScalarFieldEnum | UpdateSettingsScalarFieldEnum[]
  }

  /**
   * UpdateSettings findMany
   */
  export type UpdateSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * Filter, which UpdateSettings to fetch.
     */
    where?: UpdateSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UpdateSettings to fetch.
     */
    orderBy?: UpdateSettingsOrderByWithRelationInput | UpdateSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UpdateSettings.
     */
    cursor?: UpdateSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UpdateSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UpdateSettings.
     */
    skip?: number
    distinct?: UpdateSettingsScalarFieldEnum | UpdateSettingsScalarFieldEnum[]
  }

  /**
   * UpdateSettings create
   */
  export type UpdateSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * The data needed to create a UpdateSettings.
     */
    data: XOR<UpdateSettingsCreateInput, UpdateSettingsUncheckedCreateInput>
  }

  /**
   * UpdateSettings createMany
   */
  export type UpdateSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UpdateSettings.
     */
    data: UpdateSettingsCreateManyInput | UpdateSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UpdateSettings createManyAndReturn
   */
  export type UpdateSettingsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many UpdateSettings.
     */
    data: UpdateSettingsCreateManyInput | UpdateSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UpdateSettings update
   */
  export type UpdateSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * The data needed to update a UpdateSettings.
     */
    data: XOR<UpdateSettingsUpdateInput, UpdateSettingsUncheckedUpdateInput>
    /**
     * Choose, which UpdateSettings to update.
     */
    where: UpdateSettingsWhereUniqueInput
  }

  /**
   * UpdateSettings updateMany
   */
  export type UpdateSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UpdateSettings.
     */
    data: XOR<UpdateSettingsUpdateManyMutationInput, UpdateSettingsUncheckedUpdateManyInput>
    /**
     * Filter which UpdateSettings to update
     */
    where?: UpdateSettingsWhereInput
  }

  /**
   * UpdateSettings upsert
   */
  export type UpdateSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * The filter to search for the UpdateSettings to update in case it exists.
     */
    where: UpdateSettingsWhereUniqueInput
    /**
     * In case the UpdateSettings found by the `where` argument doesn't exist, create a new UpdateSettings with this data.
     */
    create: XOR<UpdateSettingsCreateInput, UpdateSettingsUncheckedCreateInput>
    /**
     * In case the UpdateSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UpdateSettingsUpdateInput, UpdateSettingsUncheckedUpdateInput>
  }

  /**
   * UpdateSettings delete
   */
  export type UpdateSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
    /**
     * Filter which UpdateSettings to delete.
     */
    where: UpdateSettingsWhereUniqueInput
  }

  /**
   * UpdateSettings deleteMany
   */
  export type UpdateSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UpdateSettings to delete
     */
    where?: UpdateSettingsWhereInput
  }

  /**
   * UpdateSettings without action
   */
  export type UpdateSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UpdateSettings
     */
    select?: UpdateSettingsSelect<ExtArgs> | null
  }


  /**
   * Model ShoppingList
   */

  export type AggregateShoppingList = {
    _count: ShoppingListCountAggregateOutputType | null
    _avg: ShoppingListAvgAggregateOutputType | null
    _sum: ShoppingListSumAggregateOutputType | null
    _min: ShoppingListMinAggregateOutputType | null
    _max: ShoppingListMaxAggregateOutputType | null
  }

  export type ShoppingListAvgAggregateOutputType = {
    id: number | null
  }

  export type ShoppingListSumAggregateOutputType = {
    id: number | null
  }

  export type ShoppingListMinAggregateOutputType = {
    id: number | null
    name: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    shared: boolean | null
    sharedUrlId: string | null
  }

  export type ShoppingListMaxAggregateOutputType = {
    id: number | null
    name: string | null
    userId: string | null
    createdAt: Date | null
    updatedAt: Date | null
    shared: boolean | null
    sharedUrlId: string | null
  }

  export type ShoppingListCountAggregateOutputType = {
    id: number
    name: number
    userId: number
    createdAt: number
    updatedAt: number
    shared: number
    sharedUrlId: number
    _all: number
  }


  export type ShoppingListAvgAggregateInputType = {
    id?: true
  }

  export type ShoppingListSumAggregateInputType = {
    id?: true
  }

  export type ShoppingListMinAggregateInputType = {
    id?: true
    name?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    shared?: true
    sharedUrlId?: true
  }

  export type ShoppingListMaxAggregateInputType = {
    id?: true
    name?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    shared?: true
    sharedUrlId?: true
  }

  export type ShoppingListCountAggregateInputType = {
    id?: true
    name?: true
    userId?: true
    createdAt?: true
    updatedAt?: true
    shared?: true
    sharedUrlId?: true
    _all?: true
  }

  export type ShoppingListAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShoppingList to aggregate.
     */
    where?: ShoppingListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingLists to fetch.
     */
    orderBy?: ShoppingListOrderByWithRelationInput | ShoppingListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShoppingListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingLists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShoppingLists
    **/
    _count?: true | ShoppingListCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShoppingListAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShoppingListSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShoppingListMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShoppingListMaxAggregateInputType
  }

  export type GetShoppingListAggregateType<T extends ShoppingListAggregateArgs> = {
        [P in keyof T & keyof AggregateShoppingList]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShoppingList[P]>
      : GetScalarType<T[P], AggregateShoppingList[P]>
  }




  export type ShoppingListGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListWhereInput
    orderBy?: ShoppingListOrderByWithAggregationInput | ShoppingListOrderByWithAggregationInput[]
    by: ShoppingListScalarFieldEnum[] | ShoppingListScalarFieldEnum
    having?: ShoppingListScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShoppingListCountAggregateInputType | true
    _avg?: ShoppingListAvgAggregateInputType
    _sum?: ShoppingListSumAggregateInputType
    _min?: ShoppingListMinAggregateInputType
    _max?: ShoppingListMaxAggregateInputType
  }

  export type ShoppingListGroupByOutputType = {
    id: number
    name: string
    userId: string
    createdAt: Date
    updatedAt: Date
    shared: boolean
    sharedUrlId: string | null
    _count: ShoppingListCountAggregateOutputType | null
    _avg: ShoppingListAvgAggregateOutputType | null
    _sum: ShoppingListSumAggregateOutputType | null
    _min: ShoppingListMinAggregateOutputType | null
    _max: ShoppingListMaxAggregateOutputType | null
  }

  type GetShoppingListGroupByPayload<T extends ShoppingListGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShoppingListGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShoppingListGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShoppingListGroupByOutputType[P]>
            : GetScalarType<T[P], ShoppingListGroupByOutputType[P]>
        }
      >
    >


  export type ShoppingListSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shared?: boolean
    sharedUrlId?: boolean
    items?: boolean | ShoppingList$itemsArgs<ExtArgs>
    _count?: boolean | ShoppingListCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["shoppingList"]>

  export type ShoppingListSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shared?: boolean
    sharedUrlId?: boolean
  }, ExtArgs["result"]["shoppingList"]>

  export type ShoppingListSelectScalar = {
    id?: boolean
    name?: boolean
    userId?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    shared?: boolean
    sharedUrlId?: boolean
  }

  export type ShoppingListInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    items?: boolean | ShoppingList$itemsArgs<ExtArgs>
    _count?: boolean | ShoppingListCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type ShoppingListIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $ShoppingListPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShoppingList"
    objects: {
      items: Prisma.$ShoppingListItemPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      name: string
      userId: string
      createdAt: Date
      updatedAt: Date
      shared: boolean
      sharedUrlId: string | null
    }, ExtArgs["result"]["shoppingList"]>
    composites: {}
  }

  type ShoppingListGetPayload<S extends boolean | null | undefined | ShoppingListDefaultArgs> = $Result.GetResult<Prisma.$ShoppingListPayload, S>

  type ShoppingListCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShoppingListFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShoppingListCountAggregateInputType | true
    }

  export interface ShoppingListDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShoppingList'], meta: { name: 'ShoppingList' } }
    /**
     * Find zero or one ShoppingList that matches the filter.
     * @param {ShoppingListFindUniqueArgs} args - Arguments to find a ShoppingList
     * @example
     * // Get one ShoppingList
     * const shoppingList = await prisma.shoppingList.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShoppingListFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListFindUniqueArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ShoppingList that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShoppingListFindUniqueOrThrowArgs} args - Arguments to find a ShoppingList
     * @example
     * // Get one ShoppingList
     * const shoppingList = await prisma.shoppingList.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShoppingListFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ShoppingList that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListFindFirstArgs} args - Arguments to find a ShoppingList
     * @example
     * // Get one ShoppingList
     * const shoppingList = await prisma.shoppingList.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShoppingListFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListFindFirstArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ShoppingList that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListFindFirstOrThrowArgs} args - Arguments to find a ShoppingList
     * @example
     * // Get one ShoppingList
     * const shoppingList = await prisma.shoppingList.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShoppingListFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ShoppingLists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShoppingLists
     * const shoppingLists = await prisma.shoppingList.findMany()
     * 
     * // Get first 10 ShoppingLists
     * const shoppingLists = await prisma.shoppingList.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shoppingListWithIdOnly = await prisma.shoppingList.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShoppingListFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ShoppingList.
     * @param {ShoppingListCreateArgs} args - Arguments to create a ShoppingList.
     * @example
     * // Create one ShoppingList
     * const ShoppingList = await prisma.shoppingList.create({
     *   data: {
     *     // ... data to create a ShoppingList
     *   }
     * })
     * 
    **/
    create<T extends ShoppingListCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListCreateArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ShoppingLists.
     * @param {ShoppingListCreateManyArgs} args - Arguments to create many ShoppingLists.
     * @example
     * // Create many ShoppingLists
     * const shoppingList = await prisma.shoppingList.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends ShoppingListCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShoppingLists and returns the data saved in the database.
     * @param {ShoppingListCreateManyAndReturnArgs} args - Arguments to create many ShoppingLists.
     * @example
     * // Create many ShoppingLists
     * const shoppingList = await prisma.shoppingList.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShoppingLists and only return the `id`
     * const shoppingListWithIdOnly = await prisma.shoppingList.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends ShoppingListCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a ShoppingList.
     * @param {ShoppingListDeleteArgs} args - Arguments to delete one ShoppingList.
     * @example
     * // Delete one ShoppingList
     * const ShoppingList = await prisma.shoppingList.delete({
     *   where: {
     *     // ... filter to delete one ShoppingList
     *   }
     * })
     * 
    **/
    delete<T extends ShoppingListDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListDeleteArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ShoppingList.
     * @param {ShoppingListUpdateArgs} args - Arguments to update one ShoppingList.
     * @example
     * // Update one ShoppingList
     * const shoppingList = await prisma.shoppingList.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShoppingListUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListUpdateArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ShoppingLists.
     * @param {ShoppingListDeleteManyArgs} args - Arguments to filter ShoppingLists to delete.
     * @example
     * // Delete a few ShoppingLists
     * const { count } = await prisma.shoppingList.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShoppingListDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShoppingLists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShoppingLists
     * const shoppingList = await prisma.shoppingList.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShoppingListUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ShoppingList.
     * @param {ShoppingListUpsertArgs} args - Arguments to update or create a ShoppingList.
     * @example
     * // Update or create a ShoppingList
     * const shoppingList = await prisma.shoppingList.upsert({
     *   create: {
     *     // ... data to create a ShoppingList
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShoppingList we want to update
     *   }
     * })
    **/
    upsert<T extends ShoppingListUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListUpsertArgs<ExtArgs>>
    ): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ShoppingLists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListCountArgs} args - Arguments to filter ShoppingLists to count.
     * @example
     * // Count the number of ShoppingLists
     * const count = await prisma.shoppingList.count({
     *   where: {
     *     // ... the filter for the ShoppingLists we want to count
     *   }
     * })
    **/
    count<T extends ShoppingListCountArgs>(
      args?: Subset<T, ShoppingListCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShoppingListCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShoppingList.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShoppingListAggregateArgs>(args: Subset<T, ShoppingListAggregateArgs>): Prisma.PrismaPromise<GetShoppingListAggregateType<T>>

    /**
     * Group by ShoppingList.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShoppingListGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShoppingListGroupByArgs['orderBy'] }
        : { orderBy?: ShoppingListGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShoppingListGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShoppingListGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShoppingList model
   */
  readonly fields: ShoppingListFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShoppingList.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShoppingListClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    items<T extends ShoppingList$itemsArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingList$itemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'> | Null>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ShoppingList model
   */ 
  interface ShoppingListFieldRefs {
    readonly id: FieldRef<"ShoppingList", 'Int'>
    readonly name: FieldRef<"ShoppingList", 'String'>
    readonly userId: FieldRef<"ShoppingList", 'String'>
    readonly createdAt: FieldRef<"ShoppingList", 'DateTime'>
    readonly updatedAt: FieldRef<"ShoppingList", 'DateTime'>
    readonly shared: FieldRef<"ShoppingList", 'Boolean'>
    readonly sharedUrlId: FieldRef<"ShoppingList", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ShoppingList findUnique
   */
  export type ShoppingListFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingList to fetch.
     */
    where: ShoppingListWhereUniqueInput
  }

  /**
   * ShoppingList findUniqueOrThrow
   */
  export type ShoppingListFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingList to fetch.
     */
    where: ShoppingListWhereUniqueInput
  }

  /**
   * ShoppingList findFirst
   */
  export type ShoppingListFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingList to fetch.
     */
    where?: ShoppingListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingLists to fetch.
     */
    orderBy?: ShoppingListOrderByWithRelationInput | ShoppingListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShoppingLists.
     */
    cursor?: ShoppingListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingLists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShoppingLists.
     */
    distinct?: ShoppingListScalarFieldEnum | ShoppingListScalarFieldEnum[]
  }

  /**
   * ShoppingList findFirstOrThrow
   */
  export type ShoppingListFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingList to fetch.
     */
    where?: ShoppingListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingLists to fetch.
     */
    orderBy?: ShoppingListOrderByWithRelationInput | ShoppingListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShoppingLists.
     */
    cursor?: ShoppingListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingLists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShoppingLists.
     */
    distinct?: ShoppingListScalarFieldEnum | ShoppingListScalarFieldEnum[]
  }

  /**
   * ShoppingList findMany
   */
  export type ShoppingListFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingLists to fetch.
     */
    where?: ShoppingListWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingLists to fetch.
     */
    orderBy?: ShoppingListOrderByWithRelationInput | ShoppingListOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShoppingLists.
     */
    cursor?: ShoppingListWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingLists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingLists.
     */
    skip?: number
    distinct?: ShoppingListScalarFieldEnum | ShoppingListScalarFieldEnum[]
  }

  /**
   * ShoppingList create
   */
  export type ShoppingListCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * The data needed to create a ShoppingList.
     */
    data: XOR<ShoppingListCreateInput, ShoppingListUncheckedCreateInput>
  }

  /**
   * ShoppingList createMany
   */
  export type ShoppingListCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShoppingLists.
     */
    data: ShoppingListCreateManyInput | ShoppingListCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShoppingList createManyAndReturn
   */
  export type ShoppingListCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ShoppingLists.
     */
    data: ShoppingListCreateManyInput | ShoppingListCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShoppingList update
   */
  export type ShoppingListUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * The data needed to update a ShoppingList.
     */
    data: XOR<ShoppingListUpdateInput, ShoppingListUncheckedUpdateInput>
    /**
     * Choose, which ShoppingList to update.
     */
    where: ShoppingListWhereUniqueInput
  }

  /**
   * ShoppingList updateMany
   */
  export type ShoppingListUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShoppingLists.
     */
    data: XOR<ShoppingListUpdateManyMutationInput, ShoppingListUncheckedUpdateManyInput>
    /**
     * Filter which ShoppingLists to update
     */
    where?: ShoppingListWhereInput
  }

  /**
   * ShoppingList upsert
   */
  export type ShoppingListUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * The filter to search for the ShoppingList to update in case it exists.
     */
    where: ShoppingListWhereUniqueInput
    /**
     * In case the ShoppingList found by the `where` argument doesn't exist, create a new ShoppingList with this data.
     */
    create: XOR<ShoppingListCreateInput, ShoppingListUncheckedCreateInput>
    /**
     * In case the ShoppingList was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShoppingListUpdateInput, ShoppingListUncheckedUpdateInput>
  }

  /**
   * ShoppingList delete
   */
  export type ShoppingListDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
    /**
     * Filter which ShoppingList to delete.
     */
    where: ShoppingListWhereUniqueInput
  }

  /**
   * ShoppingList deleteMany
   */
  export type ShoppingListDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShoppingLists to delete
     */
    where?: ShoppingListWhereInput
  }

  /**
   * ShoppingList.items
   */
  export type ShoppingList$itemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    cursor?: ShoppingListItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * ShoppingList without action
   */
  export type ShoppingListDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingList
     */
    select?: ShoppingListSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListInclude<ExtArgs> | null
  }


  /**
   * Model ShoppingListItem
   */

  export type AggregateShoppingListItem = {
    _count: ShoppingListItemCountAggregateOutputType | null
    _avg: ShoppingListItemAvgAggregateOutputType | null
    _sum: ShoppingListItemSumAggregateOutputType | null
    _min: ShoppingListItemMinAggregateOutputType | null
    _max: ShoppingListItemMaxAggregateOutputType | null
  }

  export type ShoppingListItemAvgAggregateOutputType = {
    id: number | null
    shoppingListId: number | null
    quantity: number | null
    zdravieAKrasaId: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    starostlivostODomacnostId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    mliecneVyrobkyAVajciaId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
  }

  export type ShoppingListItemSumAggregateOutputType = {
    id: number | null
    shoppingListId: number | null
    quantity: number | null
    zdravieAKrasaId: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    starostlivostODomacnostId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    mliecneVyrobkyAVajciaId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
  }

  export type ShoppingListItemMinAggregateOutputType = {
    id: number | null
    shoppingListId: number | null
    productId: string | null
    quantity: number | null
    category: string | null
    createdAt: Date | null
    updatedAt: Date | null
    zdravieAKrasaId: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    starostlivostODomacnostId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    mliecneVyrobkyAVajciaId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
  }

  export type ShoppingListItemMaxAggregateOutputType = {
    id: number | null
    shoppingListId: number | null
    productId: string | null
    quantity: number | null
    category: string | null
    createdAt: Date | null
    updatedAt: Date | null
    zdravieAKrasaId: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    starostlivostODomacnostId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    mliecneVyrobkyAVajciaId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
  }

  export type ShoppingListItemCountAggregateOutputType = {
    id: number
    shoppingListId: number
    productId: number
    quantity: number
    category: number
    createdAt: number
    updatedAt: number
    zdravieAKrasaId: number
    ovocieAZeleninyId: number
    grilovanieId: number
    starostlivostODomacnostId: number
    pecivoId: number
    masoRybyALahodkyId: number
    mliecneVyrobkyAVajciaId: number
    trvanlivePotravinyId: number
    specialnaAZdravaVyzivaId: number
    mrazenePotravinyId: number
    napojeId: number
    alkoholId: number
    _all: number
  }


  export type ShoppingListItemAvgAggregateInputType = {
    id?: true
    shoppingListId?: true
    quantity?: true
    zdravieAKrasaId?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    starostlivostODomacnostId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    mliecneVyrobkyAVajciaId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
  }

  export type ShoppingListItemSumAggregateInputType = {
    id?: true
    shoppingListId?: true
    quantity?: true
    zdravieAKrasaId?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    starostlivostODomacnostId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    mliecneVyrobkyAVajciaId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
  }

  export type ShoppingListItemMinAggregateInputType = {
    id?: true
    shoppingListId?: true
    productId?: true
    quantity?: true
    category?: true
    createdAt?: true
    updatedAt?: true
    zdravieAKrasaId?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    starostlivostODomacnostId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    mliecneVyrobkyAVajciaId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
  }

  export type ShoppingListItemMaxAggregateInputType = {
    id?: true
    shoppingListId?: true
    productId?: true
    quantity?: true
    category?: true
    createdAt?: true
    updatedAt?: true
    zdravieAKrasaId?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    starostlivostODomacnostId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    mliecneVyrobkyAVajciaId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
  }

  export type ShoppingListItemCountAggregateInputType = {
    id?: true
    shoppingListId?: true
    productId?: true
    quantity?: true
    category?: true
    createdAt?: true
    updatedAt?: true
    zdravieAKrasaId?: true
    ovocieAZeleninyId?: true
    grilovanieId?: true
    starostlivostODomacnostId?: true
    pecivoId?: true
    masoRybyALahodkyId?: true
    mliecneVyrobkyAVajciaId?: true
    trvanlivePotravinyId?: true
    specialnaAZdravaVyzivaId?: true
    mrazenePotravinyId?: true
    napojeId?: true
    alkoholId?: true
    _all?: true
  }

  export type ShoppingListItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShoppingListItem to aggregate.
     */
    where?: ShoppingListItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingListItems to fetch.
     */
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShoppingListItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingListItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingListItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShoppingListItems
    **/
    _count?: true | ShoppingListItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShoppingListItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShoppingListItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShoppingListItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShoppingListItemMaxAggregateInputType
  }

  export type GetShoppingListItemAggregateType<T extends ShoppingListItemAggregateArgs> = {
        [P in keyof T & keyof AggregateShoppingListItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShoppingListItem[P]>
      : GetScalarType<T[P], AggregateShoppingListItem[P]>
  }




  export type ShoppingListItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShoppingListItemWhereInput
    orderBy?: ShoppingListItemOrderByWithAggregationInput | ShoppingListItemOrderByWithAggregationInput[]
    by: ShoppingListItemScalarFieldEnum[] | ShoppingListItemScalarFieldEnum
    having?: ShoppingListItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShoppingListItemCountAggregateInputType | true
    _avg?: ShoppingListItemAvgAggregateInputType
    _sum?: ShoppingListItemSumAggregateInputType
    _min?: ShoppingListItemMinAggregateInputType
    _max?: ShoppingListItemMaxAggregateInputType
  }

  export type ShoppingListItemGroupByOutputType = {
    id: number
    shoppingListId: number
    productId: string
    quantity: number
    category: string
    createdAt: Date
    updatedAt: Date
    zdravieAKrasaId: number | null
    ovocieAZeleninyId: number | null
    grilovanieId: number | null
    starostlivostODomacnostId: number | null
    pecivoId: number | null
    masoRybyALahodkyId: number | null
    mliecneVyrobkyAVajciaId: number | null
    trvanlivePotravinyId: number | null
    specialnaAZdravaVyzivaId: number | null
    mrazenePotravinyId: number | null
    napojeId: number | null
    alkoholId: number | null
    _count: ShoppingListItemCountAggregateOutputType | null
    _avg: ShoppingListItemAvgAggregateOutputType | null
    _sum: ShoppingListItemSumAggregateOutputType | null
    _min: ShoppingListItemMinAggregateOutputType | null
    _max: ShoppingListItemMaxAggregateOutputType | null
  }

  type GetShoppingListItemGroupByPayload<T extends ShoppingListItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShoppingListItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShoppingListItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShoppingListItemGroupByOutputType[P]>
            : GetScalarType<T[P], ShoppingListItemGroupByOutputType[P]>
        }
      >
    >


  export type ShoppingListItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shoppingListId?: boolean
    productId?: boolean
    quantity?: boolean
    category?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    zdravieAKrasaId?: boolean
    ovocieAZeleninyId?: boolean
    grilovanieId?: boolean
    starostlivostODomacnostId?: boolean
    pecivoId?: boolean
    masoRybyALahodkyId?: boolean
    mliecneVyrobkyAVajciaId?: boolean
    trvanlivePotravinyId?: boolean
    specialnaAZdravaVyzivaId?: boolean
    mrazenePotravinyId?: boolean
    napojeId?: boolean
    alkoholId?: boolean
    shoppingList?: boolean | ShoppingListDefaultArgs<ExtArgs>
    ZdravieAKrasa?: boolean | ShoppingListItem$ZdravieAKrasaArgs<ExtArgs>
    OvocieAZeleniny?: boolean | ShoppingListItem$OvocieAZeleninyArgs<ExtArgs>
    Grilovanie?: boolean | ShoppingListItem$GrilovanieArgs<ExtArgs>
    StarostlivostODomacnost?: boolean | ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs>
    Pecivo?: boolean | ShoppingListItem$PecivoArgs<ExtArgs>
    MasoRybyALahodky?: boolean | ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs>
    MliecneVyrobkyAVajcia?: boolean | ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs>
    TrvanlivePotraviny?: boolean | ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs>
    SpecialnaAZdravaVyziva?: boolean | ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs>
    MrazenePotraviny?: boolean | ShoppingListItem$MrazenePotravinyArgs<ExtArgs>
    Napoje?: boolean | ShoppingListItem$NapojeArgs<ExtArgs>
    Alkohol?: boolean | ShoppingListItem$AlkoholArgs<ExtArgs>
  }, ExtArgs["result"]["shoppingListItem"]>

  export type ShoppingListItemSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    shoppingListId?: boolean
    productId?: boolean
    quantity?: boolean
    category?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    zdravieAKrasaId?: boolean
    ovocieAZeleninyId?: boolean
    grilovanieId?: boolean
    starostlivostODomacnostId?: boolean
    pecivoId?: boolean
    masoRybyALahodkyId?: boolean
    mliecneVyrobkyAVajciaId?: boolean
    trvanlivePotravinyId?: boolean
    specialnaAZdravaVyzivaId?: boolean
    mrazenePotravinyId?: boolean
    napojeId?: boolean
    alkoholId?: boolean
    shoppingList?: boolean | ShoppingListDefaultArgs<ExtArgs>
    ZdravieAKrasa?: boolean | ShoppingListItem$ZdravieAKrasaArgs<ExtArgs>
    OvocieAZeleniny?: boolean | ShoppingListItem$OvocieAZeleninyArgs<ExtArgs>
    Grilovanie?: boolean | ShoppingListItem$GrilovanieArgs<ExtArgs>
    StarostlivostODomacnost?: boolean | ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs>
    Pecivo?: boolean | ShoppingListItem$PecivoArgs<ExtArgs>
    MasoRybyALahodky?: boolean | ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs>
    MliecneVyrobkyAVajcia?: boolean | ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs>
    TrvanlivePotraviny?: boolean | ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs>
    SpecialnaAZdravaVyziva?: boolean | ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs>
    MrazenePotraviny?: boolean | ShoppingListItem$MrazenePotravinyArgs<ExtArgs>
    Napoje?: boolean | ShoppingListItem$NapojeArgs<ExtArgs>
    Alkohol?: boolean | ShoppingListItem$AlkoholArgs<ExtArgs>
  }, ExtArgs["result"]["shoppingListItem"]>

  export type ShoppingListItemSelectScalar = {
    id?: boolean
    shoppingListId?: boolean
    productId?: boolean
    quantity?: boolean
    category?: boolean
    createdAt?: boolean
    updatedAt?: boolean
    zdravieAKrasaId?: boolean
    ovocieAZeleninyId?: boolean
    grilovanieId?: boolean
    starostlivostODomacnostId?: boolean
    pecivoId?: boolean
    masoRybyALahodkyId?: boolean
    mliecneVyrobkyAVajciaId?: boolean
    trvanlivePotravinyId?: boolean
    specialnaAZdravaVyzivaId?: boolean
    mrazenePotravinyId?: boolean
    napojeId?: boolean
    alkoholId?: boolean
  }

  export type ShoppingListItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shoppingList?: boolean | ShoppingListDefaultArgs<ExtArgs>
    ZdravieAKrasa?: boolean | ShoppingListItem$ZdravieAKrasaArgs<ExtArgs>
    OvocieAZeleniny?: boolean | ShoppingListItem$OvocieAZeleninyArgs<ExtArgs>
    Grilovanie?: boolean | ShoppingListItem$GrilovanieArgs<ExtArgs>
    StarostlivostODomacnost?: boolean | ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs>
    Pecivo?: boolean | ShoppingListItem$PecivoArgs<ExtArgs>
    MasoRybyALahodky?: boolean | ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs>
    MliecneVyrobkyAVajcia?: boolean | ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs>
    TrvanlivePotraviny?: boolean | ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs>
    SpecialnaAZdravaVyziva?: boolean | ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs>
    MrazenePotraviny?: boolean | ShoppingListItem$MrazenePotravinyArgs<ExtArgs>
    Napoje?: boolean | ShoppingListItem$NapojeArgs<ExtArgs>
    Alkohol?: boolean | ShoppingListItem$AlkoholArgs<ExtArgs>
  }
  export type ShoppingListItemIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    shoppingList?: boolean | ShoppingListDefaultArgs<ExtArgs>
    ZdravieAKrasa?: boolean | ShoppingListItem$ZdravieAKrasaArgs<ExtArgs>
    OvocieAZeleniny?: boolean | ShoppingListItem$OvocieAZeleninyArgs<ExtArgs>
    Grilovanie?: boolean | ShoppingListItem$GrilovanieArgs<ExtArgs>
    StarostlivostODomacnost?: boolean | ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs>
    Pecivo?: boolean | ShoppingListItem$PecivoArgs<ExtArgs>
    MasoRybyALahodky?: boolean | ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs>
    MliecneVyrobkyAVajcia?: boolean | ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs>
    TrvanlivePotraviny?: boolean | ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs>
    SpecialnaAZdravaVyziva?: boolean | ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs>
    MrazenePotraviny?: boolean | ShoppingListItem$MrazenePotravinyArgs<ExtArgs>
    Napoje?: boolean | ShoppingListItem$NapojeArgs<ExtArgs>
    Alkohol?: boolean | ShoppingListItem$AlkoholArgs<ExtArgs>
  }

  export type $ShoppingListItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShoppingListItem"
    objects: {
      shoppingList: Prisma.$ShoppingListPayload<ExtArgs>
      ZdravieAKrasa: Prisma.$ZdravieAKrasaPayload<ExtArgs> | null
      OvocieAZeleniny: Prisma.$OvocieAZeleninyPayload<ExtArgs> | null
      Grilovanie: Prisma.$GrilovaniePayload<ExtArgs> | null
      StarostlivostODomacnost: Prisma.$StarostlivostODomacnostPayload<ExtArgs> | null
      Pecivo: Prisma.$PecivoPayload<ExtArgs> | null
      MasoRybyALahodky: Prisma.$MasoRybyALahodkyPayload<ExtArgs> | null
      MliecneVyrobkyAVajcia: Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs> | null
      TrvanlivePotraviny: Prisma.$TrvanlivePotravinyPayload<ExtArgs> | null
      SpecialnaAZdravaVyziva: Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs> | null
      MrazenePotraviny: Prisma.$MrazenePotravinyPayload<ExtArgs> | null
      Napoje: Prisma.$NapojePayload<ExtArgs> | null
      Alkohol: Prisma.$AlkoholPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      shoppingListId: number
      productId: string
      quantity: number
      category: string
      createdAt: Date
      updatedAt: Date
      zdravieAKrasaId: number | null
      ovocieAZeleninyId: number | null
      grilovanieId: number | null
      starostlivostODomacnostId: number | null
      pecivoId: number | null
      masoRybyALahodkyId: number | null
      mliecneVyrobkyAVajciaId: number | null
      trvanlivePotravinyId: number | null
      specialnaAZdravaVyzivaId: number | null
      mrazenePotravinyId: number | null
      napojeId: number | null
      alkoholId: number | null
    }, ExtArgs["result"]["shoppingListItem"]>
    composites: {}
  }

  type ShoppingListItemGetPayload<S extends boolean | null | undefined | ShoppingListItemDefaultArgs> = $Result.GetResult<Prisma.$ShoppingListItemPayload, S>

  type ShoppingListItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShoppingListItemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShoppingListItemCountAggregateInputType | true
    }

  export interface ShoppingListItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShoppingListItem'], meta: { name: 'ShoppingListItem' } }
    /**
     * Find zero or one ShoppingListItem that matches the filter.
     * @param {ShoppingListItemFindUniqueArgs} args - Arguments to find a ShoppingListItem
     * @example
     * // Get one ShoppingListItem
     * const shoppingListItem = await prisma.shoppingListItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUnique<T extends ShoppingListItemFindUniqueArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListItemFindUniqueArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findUnique'> | null, null, ExtArgs>

    /**
     * Find one ShoppingListItem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShoppingListItemFindUniqueOrThrowArgs} args - Arguments to find a ShoppingListItem
     * @example
     * // Get one ShoppingListItem
     * const shoppingListItem = await prisma.shoppingListItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findUniqueOrThrow<T extends ShoppingListItemFindUniqueOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemFindUniqueOrThrowArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findUniqueOrThrow'>, never, ExtArgs>

    /**
     * Find the first ShoppingListItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemFindFirstArgs} args - Arguments to find a ShoppingListItem
     * @example
     * // Get one ShoppingListItem
     * const shoppingListItem = await prisma.shoppingListItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirst<T extends ShoppingListItemFindFirstArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemFindFirstArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findFirst'> | null, null, ExtArgs>

    /**
     * Find the first ShoppingListItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemFindFirstOrThrowArgs} args - Arguments to find a ShoppingListItem
     * @example
     * // Get one ShoppingListItem
     * const shoppingListItem = await prisma.shoppingListItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
    **/
    findFirstOrThrow<T extends ShoppingListItemFindFirstOrThrowArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemFindFirstOrThrowArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findFirstOrThrow'>, never, ExtArgs>

    /**
     * Find zero or more ShoppingListItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShoppingListItems
     * const shoppingListItems = await prisma.shoppingListItem.findMany()
     * 
     * // Get first 10 ShoppingListItems
     * const shoppingListItems = await prisma.shoppingListItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shoppingListItemWithIdOnly = await prisma.shoppingListItem.findMany({ select: { id: true } })
     * 
    **/
    findMany<T extends ShoppingListItemFindManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemFindManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'findMany'>>

    /**
     * Create a ShoppingListItem.
     * @param {ShoppingListItemCreateArgs} args - Arguments to create a ShoppingListItem.
     * @example
     * // Create one ShoppingListItem
     * const ShoppingListItem = await prisma.shoppingListItem.create({
     *   data: {
     *     // ... data to create a ShoppingListItem
     *   }
     * })
     * 
    **/
    create<T extends ShoppingListItemCreateArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListItemCreateArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'create'>, never, ExtArgs>

    /**
     * Create many ShoppingListItems.
     * @param {ShoppingListItemCreateManyArgs} args - Arguments to create many ShoppingListItems.
     * @example
     * // Create many ShoppingListItems
     * const shoppingListItem = await prisma.shoppingListItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
    **/
    createMany<T extends ShoppingListItemCreateManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemCreateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many ShoppingListItems and returns the data saved in the database.
     * @param {ShoppingListItemCreateManyAndReturnArgs} args - Arguments to create many ShoppingListItems.
     * @example
     * // Create many ShoppingListItems
     * const shoppingListItem = await prisma.shoppingListItem.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many ShoppingListItems and only return the `id`
     * const shoppingListItemWithIdOnly = await prisma.shoppingListItem.createManyAndReturn({ 
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
    **/
    createManyAndReturn<T extends ShoppingListItemCreateManyAndReturnArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemCreateManyAndReturnArgs<ExtArgs>>
    ): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'createManyAndReturn'>>

    /**
     * Delete a ShoppingListItem.
     * @param {ShoppingListItemDeleteArgs} args - Arguments to delete one ShoppingListItem.
     * @example
     * // Delete one ShoppingListItem
     * const ShoppingListItem = await prisma.shoppingListItem.delete({
     *   where: {
     *     // ... filter to delete one ShoppingListItem
     *   }
     * })
     * 
    **/
    delete<T extends ShoppingListItemDeleteArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListItemDeleteArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'delete'>, never, ExtArgs>

    /**
     * Update one ShoppingListItem.
     * @param {ShoppingListItemUpdateArgs} args - Arguments to update one ShoppingListItem.
     * @example
     * // Update one ShoppingListItem
     * const shoppingListItem = await prisma.shoppingListItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    update<T extends ShoppingListItemUpdateArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListItemUpdateArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'update'>, never, ExtArgs>

    /**
     * Delete zero or more ShoppingListItems.
     * @param {ShoppingListItemDeleteManyArgs} args - Arguments to filter ShoppingListItems to delete.
     * @example
     * // Delete a few ShoppingListItems
     * const { count } = await prisma.shoppingListItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
    **/
    deleteMany<T extends ShoppingListItemDeleteManyArgs<ExtArgs>>(
      args?: SelectSubset<T, ShoppingListItemDeleteManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShoppingListItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShoppingListItems
     * const shoppingListItem = await prisma.shoppingListItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
    **/
    updateMany<T extends ShoppingListItemUpdateManyArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListItemUpdateManyArgs<ExtArgs>>
    ): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ShoppingListItem.
     * @param {ShoppingListItemUpsertArgs} args - Arguments to update or create a ShoppingListItem.
     * @example
     * // Update or create a ShoppingListItem
     * const shoppingListItem = await prisma.shoppingListItem.upsert({
     *   create: {
     *     // ... data to create a ShoppingListItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShoppingListItem we want to update
     *   }
     * })
    **/
    upsert<T extends ShoppingListItemUpsertArgs<ExtArgs>>(
      args: SelectSubset<T, ShoppingListItemUpsertArgs<ExtArgs>>
    ): Prisma__ShoppingListItemClient<$Result.GetResult<Prisma.$ShoppingListItemPayload<ExtArgs>, T, 'upsert'>, never, ExtArgs>

    /**
     * Count the number of ShoppingListItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemCountArgs} args - Arguments to filter ShoppingListItems to count.
     * @example
     * // Count the number of ShoppingListItems
     * const count = await prisma.shoppingListItem.count({
     *   where: {
     *     // ... the filter for the ShoppingListItems we want to count
     *   }
     * })
    **/
    count<T extends ShoppingListItemCountArgs>(
      args?: Subset<T, ShoppingListItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShoppingListItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShoppingListItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShoppingListItemAggregateArgs>(args: Subset<T, ShoppingListItemAggregateArgs>): Prisma.PrismaPromise<GetShoppingListItemAggregateType<T>>

    /**
     * Group by ShoppingListItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShoppingListItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShoppingListItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShoppingListItemGroupByArgs['orderBy'] }
        : { orderBy?: ShoppingListItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShoppingListItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShoppingListItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShoppingListItem model
   */
  readonly fields: ShoppingListItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShoppingListItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShoppingListItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: 'PrismaPromise';

    shoppingList<T extends ShoppingListDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListDefaultArgs<ExtArgs>>): Prisma__ShoppingListClient<$Result.GetResult<Prisma.$ShoppingListPayload<ExtArgs>, T, 'findUniqueOrThrow'> | Null, Null, ExtArgs>;

    ZdravieAKrasa<T extends ShoppingListItem$ZdravieAKrasaArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$ZdravieAKrasaArgs<ExtArgs>>): Prisma__ZdravieAKrasaClient<$Result.GetResult<Prisma.$ZdravieAKrasaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    OvocieAZeleniny<T extends ShoppingListItem$OvocieAZeleninyArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$OvocieAZeleninyArgs<ExtArgs>>): Prisma__OvocieAZeleninyClient<$Result.GetResult<Prisma.$OvocieAZeleninyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Grilovanie<T extends ShoppingListItem$GrilovanieArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$GrilovanieArgs<ExtArgs>>): Prisma__GrilovanieClient<$Result.GetResult<Prisma.$GrilovaniePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    StarostlivostODomacnost<T extends ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs>>): Prisma__StarostlivostODomacnostClient<$Result.GetResult<Prisma.$StarostlivostODomacnostPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Pecivo<T extends ShoppingListItem$PecivoArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$PecivoArgs<ExtArgs>>): Prisma__PecivoClient<$Result.GetResult<Prisma.$PecivoPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    MasoRybyALahodky<T extends ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs>>): Prisma__MasoRybyALahodkyClient<$Result.GetResult<Prisma.$MasoRybyALahodkyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    MliecneVyrobkyAVajcia<T extends ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs>>): Prisma__MliecneVyrobkyAVajciaClient<$Result.GetResult<Prisma.$MliecneVyrobkyAVajciaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    TrvanlivePotraviny<T extends ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs>>): Prisma__TrvanlivePotravinyClient<$Result.GetResult<Prisma.$TrvanlivePotravinyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    SpecialnaAZdravaVyziva<T extends ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs>>): Prisma__SpecialnaAZdravaVyzivaClient<$Result.GetResult<Prisma.$SpecialnaAZdravaVyzivaPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    MrazenePotraviny<T extends ShoppingListItem$MrazenePotravinyArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$MrazenePotravinyArgs<ExtArgs>>): Prisma__MrazenePotravinyClient<$Result.GetResult<Prisma.$MrazenePotravinyPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Napoje<T extends ShoppingListItem$NapojeArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$NapojeArgs<ExtArgs>>): Prisma__NapojeClient<$Result.GetResult<Prisma.$NapojePayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    Alkohol<T extends ShoppingListItem$AlkoholArgs<ExtArgs> = {}>(args?: Subset<T, ShoppingListItem$AlkoholArgs<ExtArgs>>): Prisma__AlkoholClient<$Result.GetResult<Prisma.$AlkoholPayload<ExtArgs>, T, 'findUniqueOrThrow'> | null, null, ExtArgs>;

    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>;
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>;
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>;
  }



  /**
   * Fields of the ShoppingListItem model
   */ 
  interface ShoppingListItemFieldRefs {
    readonly id: FieldRef<"ShoppingListItem", 'Int'>
    readonly shoppingListId: FieldRef<"ShoppingListItem", 'Int'>
    readonly productId: FieldRef<"ShoppingListItem", 'String'>
    readonly quantity: FieldRef<"ShoppingListItem", 'Int'>
    readonly category: FieldRef<"ShoppingListItem", 'String'>
    readonly createdAt: FieldRef<"ShoppingListItem", 'DateTime'>
    readonly updatedAt: FieldRef<"ShoppingListItem", 'DateTime'>
    readonly zdravieAKrasaId: FieldRef<"ShoppingListItem", 'Int'>
    readonly ovocieAZeleninyId: FieldRef<"ShoppingListItem", 'Int'>
    readonly grilovanieId: FieldRef<"ShoppingListItem", 'Int'>
    readonly starostlivostODomacnostId: FieldRef<"ShoppingListItem", 'Int'>
    readonly pecivoId: FieldRef<"ShoppingListItem", 'Int'>
    readonly masoRybyALahodkyId: FieldRef<"ShoppingListItem", 'Int'>
    readonly mliecneVyrobkyAVajciaId: FieldRef<"ShoppingListItem", 'Int'>
    readonly trvanlivePotravinyId: FieldRef<"ShoppingListItem", 'Int'>
    readonly specialnaAZdravaVyzivaId: FieldRef<"ShoppingListItem", 'Int'>
    readonly mrazenePotravinyId: FieldRef<"ShoppingListItem", 'Int'>
    readonly napojeId: FieldRef<"ShoppingListItem", 'Int'>
    readonly alkoholId: FieldRef<"ShoppingListItem", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * ShoppingListItem findUnique
   */
  export type ShoppingListItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingListItem to fetch.
     */
    where: ShoppingListItemWhereUniqueInput
  }

  /**
   * ShoppingListItem findUniqueOrThrow
   */
  export type ShoppingListItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingListItem to fetch.
     */
    where: ShoppingListItemWhereUniqueInput
  }

  /**
   * ShoppingListItem findFirst
   */
  export type ShoppingListItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingListItem to fetch.
     */
    where?: ShoppingListItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingListItems to fetch.
     */
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShoppingListItems.
     */
    cursor?: ShoppingListItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingListItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingListItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShoppingListItems.
     */
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * ShoppingListItem findFirstOrThrow
   */
  export type ShoppingListItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingListItem to fetch.
     */
    where?: ShoppingListItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingListItems to fetch.
     */
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShoppingListItems.
     */
    cursor?: ShoppingListItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingListItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingListItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShoppingListItems.
     */
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * ShoppingListItem findMany
   */
  export type ShoppingListItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * Filter, which ShoppingListItems to fetch.
     */
    where?: ShoppingListItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShoppingListItems to fetch.
     */
    orderBy?: ShoppingListItemOrderByWithRelationInput | ShoppingListItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShoppingListItems.
     */
    cursor?: ShoppingListItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShoppingListItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShoppingListItems.
     */
    skip?: number
    distinct?: ShoppingListItemScalarFieldEnum | ShoppingListItemScalarFieldEnum[]
  }

  /**
   * ShoppingListItem create
   */
  export type ShoppingListItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * The data needed to create a ShoppingListItem.
     */
    data: XOR<ShoppingListItemCreateInput, ShoppingListItemUncheckedCreateInput>
  }

  /**
   * ShoppingListItem createMany
   */
  export type ShoppingListItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShoppingListItems.
     */
    data: ShoppingListItemCreateManyInput | ShoppingListItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShoppingListItem createManyAndReturn
   */
  export type ShoppingListItemCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * The data used to create many ShoppingListItems.
     */
    data: ShoppingListItemCreateManyInput | ShoppingListItemCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * ShoppingListItem update
   */
  export type ShoppingListItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * The data needed to update a ShoppingListItem.
     */
    data: XOR<ShoppingListItemUpdateInput, ShoppingListItemUncheckedUpdateInput>
    /**
     * Choose, which ShoppingListItem to update.
     */
    where: ShoppingListItemWhereUniqueInput
  }

  /**
   * ShoppingListItem updateMany
   */
  export type ShoppingListItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShoppingListItems.
     */
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyInput>
    /**
     * Filter which ShoppingListItems to update
     */
    where?: ShoppingListItemWhereInput
  }

  /**
   * ShoppingListItem upsert
   */
  export type ShoppingListItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * The filter to search for the ShoppingListItem to update in case it exists.
     */
    where: ShoppingListItemWhereUniqueInput
    /**
     * In case the ShoppingListItem found by the `where` argument doesn't exist, create a new ShoppingListItem with this data.
     */
    create: XOR<ShoppingListItemCreateInput, ShoppingListItemUncheckedCreateInput>
    /**
     * In case the ShoppingListItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShoppingListItemUpdateInput, ShoppingListItemUncheckedUpdateInput>
  }

  /**
   * ShoppingListItem delete
   */
  export type ShoppingListItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
    /**
     * Filter which ShoppingListItem to delete.
     */
    where: ShoppingListItemWhereUniqueInput
  }

  /**
   * ShoppingListItem deleteMany
   */
  export type ShoppingListItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShoppingListItems to delete
     */
    where?: ShoppingListItemWhereInput
  }

  /**
   * ShoppingListItem.ZdravieAKrasa
   */
  export type ShoppingListItem$ZdravieAKrasaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ZdravieAKrasa
     */
    select?: ZdravieAKrasaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ZdravieAKrasaInclude<ExtArgs> | null
    where?: ZdravieAKrasaWhereInput
  }

  /**
   * ShoppingListItem.OvocieAZeleniny
   */
  export type ShoppingListItem$OvocieAZeleninyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OvocieAZeleniny
     */
    select?: OvocieAZeleninySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OvocieAZeleninyInclude<ExtArgs> | null
    where?: OvocieAZeleninyWhereInput
  }

  /**
   * ShoppingListItem.Grilovanie
   */
  export type ShoppingListItem$GrilovanieArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Grilovanie
     */
    select?: GrilovanieSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: GrilovanieInclude<ExtArgs> | null
    where?: GrilovanieWhereInput
  }

  /**
   * ShoppingListItem.StarostlivostODomacnost
   */
  export type ShoppingListItem$StarostlivostODomacnostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StarostlivostODomacnost
     */
    select?: StarostlivostODomacnostSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: StarostlivostODomacnostInclude<ExtArgs> | null
    where?: StarostlivostODomacnostWhereInput
  }

  /**
   * ShoppingListItem.Pecivo
   */
  export type ShoppingListItem$PecivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Pecivo
     */
    select?: PecivoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PecivoInclude<ExtArgs> | null
    where?: PecivoWhereInput
  }

  /**
   * ShoppingListItem.MasoRybyALahodky
   */
  export type ShoppingListItem$MasoRybyALahodkyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MasoRybyALahodky
     */
    select?: MasoRybyALahodkySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MasoRybyALahodkyInclude<ExtArgs> | null
    where?: MasoRybyALahodkyWhereInput
  }

  /**
   * ShoppingListItem.MliecneVyrobkyAVajcia
   */
  export type ShoppingListItem$MliecneVyrobkyAVajciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MliecneVyrobkyAVajcia
     */
    select?: MliecneVyrobkyAVajciaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MliecneVyrobkyAVajciaInclude<ExtArgs> | null
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  /**
   * ShoppingListItem.TrvanlivePotraviny
   */
  export type ShoppingListItem$TrvanlivePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TrvanlivePotraviny
     */
    select?: TrvanlivePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: TrvanlivePotravinyInclude<ExtArgs> | null
    where?: TrvanlivePotravinyWhereInput
  }

  /**
   * ShoppingListItem.SpecialnaAZdravaVyziva
   */
  export type ShoppingListItem$SpecialnaAZdravaVyzivaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialnaAZdravaVyziva
     */
    select?: SpecialnaAZdravaVyzivaSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialnaAZdravaVyzivaInclude<ExtArgs> | null
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  /**
   * ShoppingListItem.MrazenePotraviny
   */
  export type ShoppingListItem$MrazenePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the MrazenePotraviny
     */
    select?: MrazenePotravinySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: MrazenePotravinyInclude<ExtArgs> | null
    where?: MrazenePotravinyWhereInput
  }

  /**
   * ShoppingListItem.Napoje
   */
  export type ShoppingListItem$NapojeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Napoje
     */
    select?: NapojeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: NapojeInclude<ExtArgs> | null
    where?: NapojeWhereInput
  }

  /**
   * ShoppingListItem.Alkohol
   */
  export type ShoppingListItem$AlkoholArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Alkohol
     */
    select?: AlkoholSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: AlkoholInclude<ExtArgs> | null
    where?: AlkoholWhereInput
  }

  /**
   * ShoppingListItem without action
   */
  export type ShoppingListItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShoppingListItem
     */
    select?: ShoppingListItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ShoppingListItemInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const FavoriteScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    productId: 'productId',
    category: 'category',
    createdAt: 'createdAt'
  };

  export type FavoriteScalarFieldEnum = (typeof FavoriteScalarFieldEnum)[keyof typeof FavoriteScalarFieldEnum]


  export const ProductAnalyticsScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    priceDrop: 'priceDrop',
    priceIncrease: 'priceIncrease',
    percentageChange: 'percentageChange',
    isBuyRecommended: 'isBuyRecommended',
    isOnSale: 'isOnSale',
    previousPrice: 'previousPrice',
    priceChangeStatus: 'priceChangeStatus',
    averagePrice: 'averagePrice',
    medianPrice: 'medianPrice',
    priceStdDev: 'priceStdDev',
    promotionImpact: 'promotionImpact',
    lastCalculated: 'lastCalculated',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt'
  };

  export type ProductAnalyticsScalarFieldEnum = (typeof ProductAnalyticsScalarFieldEnum)[keyof typeof ProductAnalyticsScalarFieldEnum]


  export const ZdravieAKrasaScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    analyticsId: 'analyticsId',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type ZdravieAKrasaScalarFieldEnum = (typeof ZdravieAKrasaScalarFieldEnum)[keyof typeof ZdravieAKrasaScalarFieldEnum]


  export const OvocieAZeleninyScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    analyticsId: 'analyticsId',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type OvocieAZeleninyScalarFieldEnum = (typeof OvocieAZeleninyScalarFieldEnum)[keyof typeof OvocieAZeleninyScalarFieldEnum]


  export const GrilovanieScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type GrilovanieScalarFieldEnum = (typeof GrilovanieScalarFieldEnum)[keyof typeof GrilovanieScalarFieldEnum]


  export const StarostlivostODomacnostScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type StarostlivostODomacnostScalarFieldEnum = (typeof StarostlivostODomacnostScalarFieldEnum)[keyof typeof StarostlivostODomacnostScalarFieldEnum]


  export const PecivoScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type PecivoScalarFieldEnum = (typeof PecivoScalarFieldEnum)[keyof typeof PecivoScalarFieldEnum]


  export const MasoRybyALahodkyScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type MasoRybyALahodkyScalarFieldEnum = (typeof MasoRybyALahodkyScalarFieldEnum)[keyof typeof MasoRybyALahodkyScalarFieldEnum]


  export const MliecneVyrobkyAVajciaScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type MliecneVyrobkyAVajciaScalarFieldEnum = (typeof MliecneVyrobkyAVajciaScalarFieldEnum)[keyof typeof MliecneVyrobkyAVajciaScalarFieldEnum]


  export const TrvanlivePotravinyScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type TrvanlivePotravinyScalarFieldEnum = (typeof TrvanlivePotravinyScalarFieldEnum)[keyof typeof TrvanlivePotravinyScalarFieldEnum]


  export const SpecialnaAZdravaVyzivaScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type SpecialnaAZdravaVyzivaScalarFieldEnum = (typeof SpecialnaAZdravaVyzivaScalarFieldEnum)[keyof typeof SpecialnaAZdravaVyzivaScalarFieldEnum]


  export const MrazenePotravinyScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type MrazenePotravinyScalarFieldEnum = (typeof MrazenePotravinyScalarFieldEnum)[keyof typeof MrazenePotravinyScalarFieldEnum]


  export const NapojeScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type NapojeScalarFieldEnum = (typeof NapojeScalarFieldEnum)[keyof typeof NapojeScalarFieldEnum]


  export const AlkoholScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    title: 'title',
    price: 'price',
    unitPrice: 'unitPrice',
    imageUrl: 'imageUrl',
    unitOfMeasure: 'unitOfMeasure',
    isForSale: 'isForSale',
    aisleName: 'aisleName',
    lastUpdated: 'lastUpdated',
    category: 'category',
    superDepartmentName: 'superDepartmentName',
    hasPromotions: 'hasPromotions',
    productAnalyticsId: 'productAnalyticsId'
  };

  export type AlkoholScalarFieldEnum = (typeof AlkoholScalarFieldEnum)[keyof typeof AlkoholScalarFieldEnum]


  export const PromotionScalarFieldEnum: {
    id: 'id',
    promotionId: 'promotionId',
    promotionType: 'promotionType',
    startDate: 'startDate',
    endDate: 'endDate',
    offerText: 'offerText',
    promotionPrice: 'promotionPrice',
    attributes: 'attributes',
    ovocieAZeleninyId: 'ovocieAZeleninyId',
    grilovanieId: 'grilovanieId',
    mliecneVyrobkyAVajciaId: 'mliecneVyrobkyAVajciaId',
    pecivoId: 'pecivoId',
    masoRybyALahodkyId: 'masoRybyALahodkyId',
    trvanlivePotravinyId: 'trvanlivePotravinyId',
    specialnaAZdravaVyzivaId: 'specialnaAZdravaVyzivaId',
    mrazenePotravinyId: 'mrazenePotravinyId',
    napojeId: 'napojeId',
    alkoholId: 'alkoholId',
    starostlivostODomacnostId: 'starostlivostODomacnostId',
    zdravieAKrasaId: 'zdravieAKrasaId'
  };

  export type PromotionScalarFieldEnum = (typeof PromotionScalarFieldEnum)[keyof typeof PromotionScalarFieldEnum]


  export const UpdateSettingsScalarFieldEnum: {
    id: 'id',
    xCsrfToken: 'xCsrfToken',
    cookie: 'cookie',
    updatedAt: 'updatedAt'
  };

  export type UpdateSettingsScalarFieldEnum = (typeof UpdateSettingsScalarFieldEnum)[keyof typeof UpdateSettingsScalarFieldEnum]


  export const ShoppingListScalarFieldEnum: {
    id: 'id',
    name: 'name',
    userId: 'userId',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    shared: 'shared',
    sharedUrlId: 'sharedUrlId'
  };

  export type ShoppingListScalarFieldEnum = (typeof ShoppingListScalarFieldEnum)[keyof typeof ShoppingListScalarFieldEnum]


  export const ShoppingListItemScalarFieldEnum: {
    id: 'id',
    shoppingListId: 'shoppingListId',
    productId: 'productId',
    quantity: 'quantity',
    category: 'category',
    createdAt: 'createdAt',
    updatedAt: 'updatedAt',
    zdravieAKrasaId: 'zdravieAKrasaId',
    ovocieAZeleninyId: 'ovocieAZeleninyId',
    grilovanieId: 'grilovanieId',
    starostlivostODomacnostId: 'starostlivostODomacnostId',
    pecivoId: 'pecivoId',
    masoRybyALahodkyId: 'masoRybyALahodkyId',
    mliecneVyrobkyAVajciaId: 'mliecneVyrobkyAVajciaId',
    trvanlivePotravinyId: 'trvanlivePotravinyId',
    specialnaAZdravaVyzivaId: 'specialnaAZdravaVyzivaId',
    mrazenePotravinyId: 'mrazenePotravinyId',
    napojeId: 'napojeId',
    alkoholId: 'alkoholId'
  };

  export type ShoppingListItemScalarFieldEnum = (typeof ShoppingListItemScalarFieldEnum)[keyof typeof ShoppingListItemScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    
  /**
   * Deep Input Types
   */


  export type FavoriteWhereInput = {
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    id?: IntFilter<"Favorite"> | number
    userId?: StringFilter<"Favorite"> | string
    productId?: StringFilter<"Favorite"> | string
    category?: StringFilter<"Favorite"> | string
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
  }

  export type FavoriteOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: FavoriteWhereInput | FavoriteWhereInput[]
    OR?: FavoriteWhereInput[]
    NOT?: FavoriteWhereInput | FavoriteWhereInput[]
    userId?: StringFilter<"Favorite"> | string
    productId?: StringFilter<"Favorite"> | string
    category?: StringFilter<"Favorite"> | string
    createdAt?: DateTimeFilter<"Favorite"> | Date | string
  }, "id">

  export type FavoriteOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    _count?: FavoriteCountOrderByAggregateInput
    _avg?: FavoriteAvgOrderByAggregateInput
    _max?: FavoriteMaxOrderByAggregateInput
    _min?: FavoriteMinOrderByAggregateInput
    _sum?: FavoriteSumOrderByAggregateInput
  }

  export type FavoriteScalarWhereWithAggregatesInput = {
    AND?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    OR?: FavoriteScalarWhereWithAggregatesInput[]
    NOT?: FavoriteScalarWhereWithAggregatesInput | FavoriteScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Favorite"> | number
    userId?: StringWithAggregatesFilter<"Favorite"> | string
    productId?: StringWithAggregatesFilter<"Favorite"> | string
    category?: StringWithAggregatesFilter<"Favorite"> | string
    createdAt?: DateTimeWithAggregatesFilter<"Favorite"> | Date | string
  }

  export type ProductAnalyticsWhereInput = {
    AND?: ProductAnalyticsWhereInput | ProductAnalyticsWhereInput[]
    OR?: ProductAnalyticsWhereInput[]
    NOT?: ProductAnalyticsWhereInput | ProductAnalyticsWhereInput[]
    id?: IntFilter<"ProductAnalytics"> | number
    productId?: StringFilter<"ProductAnalytics"> | string
    priceDrop?: FloatFilter<"ProductAnalytics"> | number
    priceIncrease?: FloatFilter<"ProductAnalytics"> | number
    percentageChange?: FloatFilter<"ProductAnalytics"> | number
    isBuyRecommended?: StringFilter<"ProductAnalytics"> | string
    isOnSale?: BoolFilter<"ProductAnalytics"> | boolean
    previousPrice?: FloatNullableFilter<"ProductAnalytics"> | number | null
    priceChangeStatus?: StringFilter<"ProductAnalytics"> | string
    averagePrice?: FloatNullableFilter<"ProductAnalytics"> | number | null
    medianPrice?: FloatNullableFilter<"ProductAnalytics"> | number | null
    priceStdDev?: FloatNullableFilter<"ProductAnalytics"> | number | null
    promotionImpact?: FloatNullableFilter<"ProductAnalytics"> | number | null
    lastCalculated?: DateTimeFilter<"ProductAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"ProductAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAnalytics"> | Date | string
    ovocieAZeleniny?: OvocieAZeleninyListRelationFilter
    grilovanie?: GrilovanieListRelationFilter
    pecivo?: PecivoListRelationFilter
    masoRybyALahodky?: MasoRybyALahodkyListRelationFilter
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaListRelationFilter
    trvanlivePotraviny?: TrvanlivePotravinyListRelationFilter
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaListRelationFilter
    mrazenePotraviny?: MrazenePotravinyListRelationFilter
    napoje?: NapojeListRelationFilter
    alkohol?: AlkoholListRelationFilter
    starostlivostODomacnost?: StarostlivostODomacnostListRelationFilter
    zdravieAKrasa?: ZdravieAKrasaListRelationFilter
  }

  export type ProductAnalyticsOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    isBuyRecommended?: SortOrder
    isOnSale?: SortOrder
    previousPrice?: SortOrderInput | SortOrder
    priceChangeStatus?: SortOrder
    averagePrice?: SortOrderInput | SortOrder
    medianPrice?: SortOrderInput | SortOrder
    priceStdDev?: SortOrderInput | SortOrder
    promotionImpact?: SortOrderInput | SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    ovocieAZeleniny?: OvocieAZeleninyOrderByRelationAggregateInput
    grilovanie?: GrilovanieOrderByRelationAggregateInput
    pecivo?: PecivoOrderByRelationAggregateInput
    masoRybyALahodky?: MasoRybyALahodkyOrderByRelationAggregateInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaOrderByRelationAggregateInput
    trvanlivePotraviny?: TrvanlivePotravinyOrderByRelationAggregateInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaOrderByRelationAggregateInput
    mrazenePotraviny?: MrazenePotravinyOrderByRelationAggregateInput
    napoje?: NapojeOrderByRelationAggregateInput
    alkohol?: AlkoholOrderByRelationAggregateInput
    starostlivostODomacnost?: StarostlivostODomacnostOrderByRelationAggregateInput
    zdravieAKrasa?: ZdravieAKrasaOrderByRelationAggregateInput
  }

  export type ProductAnalyticsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId?: string
    productId_lastCalculated?: ProductAnalyticsProductIdLastCalculatedCompoundUniqueInput
    AND?: ProductAnalyticsWhereInput | ProductAnalyticsWhereInput[]
    OR?: ProductAnalyticsWhereInput[]
    NOT?: ProductAnalyticsWhereInput | ProductAnalyticsWhereInput[]
    priceDrop?: FloatFilter<"ProductAnalytics"> | number
    priceIncrease?: FloatFilter<"ProductAnalytics"> | number
    percentageChange?: FloatFilter<"ProductAnalytics"> | number
    isBuyRecommended?: StringFilter<"ProductAnalytics"> | string
    isOnSale?: BoolFilter<"ProductAnalytics"> | boolean
    previousPrice?: FloatNullableFilter<"ProductAnalytics"> | number | null
    priceChangeStatus?: StringFilter<"ProductAnalytics"> | string
    averagePrice?: FloatNullableFilter<"ProductAnalytics"> | number | null
    medianPrice?: FloatNullableFilter<"ProductAnalytics"> | number | null
    priceStdDev?: FloatNullableFilter<"ProductAnalytics"> | number | null
    promotionImpact?: FloatNullableFilter<"ProductAnalytics"> | number | null
    lastCalculated?: DateTimeFilter<"ProductAnalytics"> | Date | string
    createdAt?: DateTimeFilter<"ProductAnalytics"> | Date | string
    updatedAt?: DateTimeFilter<"ProductAnalytics"> | Date | string
    ovocieAZeleniny?: OvocieAZeleninyListRelationFilter
    grilovanie?: GrilovanieListRelationFilter
    pecivo?: PecivoListRelationFilter
    masoRybyALahodky?: MasoRybyALahodkyListRelationFilter
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaListRelationFilter
    trvanlivePotraviny?: TrvanlivePotravinyListRelationFilter
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaListRelationFilter
    mrazenePotraviny?: MrazenePotravinyListRelationFilter
    napoje?: NapojeListRelationFilter
    alkohol?: AlkoholListRelationFilter
    starostlivostODomacnost?: StarostlivostODomacnostListRelationFilter
    zdravieAKrasa?: ZdravieAKrasaListRelationFilter
  }, "id" | "productId" | "productId_lastCalculated">

  export type ProductAnalyticsOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    isBuyRecommended?: SortOrder
    isOnSale?: SortOrder
    previousPrice?: SortOrderInput | SortOrder
    priceChangeStatus?: SortOrder
    averagePrice?: SortOrderInput | SortOrder
    medianPrice?: SortOrderInput | SortOrder
    priceStdDev?: SortOrderInput | SortOrder
    promotionImpact?: SortOrderInput | SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    _count?: ProductAnalyticsCountOrderByAggregateInput
    _avg?: ProductAnalyticsAvgOrderByAggregateInput
    _max?: ProductAnalyticsMaxOrderByAggregateInput
    _min?: ProductAnalyticsMinOrderByAggregateInput
    _sum?: ProductAnalyticsSumOrderByAggregateInput
  }

  export type ProductAnalyticsScalarWhereWithAggregatesInput = {
    AND?: ProductAnalyticsScalarWhereWithAggregatesInput | ProductAnalyticsScalarWhereWithAggregatesInput[]
    OR?: ProductAnalyticsScalarWhereWithAggregatesInput[]
    NOT?: ProductAnalyticsScalarWhereWithAggregatesInput | ProductAnalyticsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ProductAnalytics"> | number
    productId?: StringWithAggregatesFilter<"ProductAnalytics"> | string
    priceDrop?: FloatWithAggregatesFilter<"ProductAnalytics"> | number
    priceIncrease?: FloatWithAggregatesFilter<"ProductAnalytics"> | number
    percentageChange?: FloatWithAggregatesFilter<"ProductAnalytics"> | number
    isBuyRecommended?: StringWithAggregatesFilter<"ProductAnalytics"> | string
    isOnSale?: BoolWithAggregatesFilter<"ProductAnalytics"> | boolean
    previousPrice?: FloatNullableWithAggregatesFilter<"ProductAnalytics"> | number | null
    priceChangeStatus?: StringWithAggregatesFilter<"ProductAnalytics"> | string
    averagePrice?: FloatNullableWithAggregatesFilter<"ProductAnalytics"> | number | null
    medianPrice?: FloatNullableWithAggregatesFilter<"ProductAnalytics"> | number | null
    priceStdDev?: FloatNullableWithAggregatesFilter<"ProductAnalytics"> | number | null
    promotionImpact?: FloatNullableWithAggregatesFilter<"ProductAnalytics"> | number | null
    lastCalculated?: DateTimeWithAggregatesFilter<"ProductAnalytics"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"ProductAnalytics"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ProductAnalytics"> | Date | string
  }

  export type ZdravieAKrasaWhereInput = {
    AND?: ZdravieAKrasaWhereInput | ZdravieAKrasaWhereInput[]
    OR?: ZdravieAKrasaWhereInput[]
    NOT?: ZdravieAKrasaWhereInput | ZdravieAKrasaWhereInput[]
    id?: IntFilter<"ZdravieAKrasa"> | number
    productId?: StringFilter<"ZdravieAKrasa"> | string
    title?: StringFilter<"ZdravieAKrasa"> | string
    price?: FloatFilter<"ZdravieAKrasa"> | number
    unitPrice?: FloatFilter<"ZdravieAKrasa"> | number
    imageUrl?: StringFilter<"ZdravieAKrasa"> | string
    unitOfMeasure?: StringFilter<"ZdravieAKrasa"> | string
    isForSale?: BoolFilter<"ZdravieAKrasa"> | boolean
    aisleName?: StringFilter<"ZdravieAKrasa"> | string
    lastUpdated?: DateTimeFilter<"ZdravieAKrasa"> | Date | string
    category?: StringFilter<"ZdravieAKrasa"> | string
    superDepartmentName?: StringFilter<"ZdravieAKrasa"> | string
    hasPromotions?: BoolFilter<"ZdravieAKrasa"> | boolean
    analyticsId?: IntNullableFilter<"ZdravieAKrasa"> | number | null
    productAnalyticsId?: IntNullableFilter<"ZdravieAKrasa"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type ZdravieAKrasaOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrderInput | SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type ZdravieAKrasaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: ZdravieAKrasaProductIdLastUpdatedCompoundUniqueInput
    AND?: ZdravieAKrasaWhereInput | ZdravieAKrasaWhereInput[]
    OR?: ZdravieAKrasaWhereInput[]
    NOT?: ZdravieAKrasaWhereInput | ZdravieAKrasaWhereInput[]
    productId?: StringFilter<"ZdravieAKrasa"> | string
    title?: StringFilter<"ZdravieAKrasa"> | string
    price?: FloatFilter<"ZdravieAKrasa"> | number
    unitPrice?: FloatFilter<"ZdravieAKrasa"> | number
    imageUrl?: StringFilter<"ZdravieAKrasa"> | string
    unitOfMeasure?: StringFilter<"ZdravieAKrasa"> | string
    isForSale?: BoolFilter<"ZdravieAKrasa"> | boolean
    aisleName?: StringFilter<"ZdravieAKrasa"> | string
    lastUpdated?: DateTimeFilter<"ZdravieAKrasa"> | Date | string
    category?: StringFilter<"ZdravieAKrasa"> | string
    superDepartmentName?: StringFilter<"ZdravieAKrasa"> | string
    hasPromotions?: BoolFilter<"ZdravieAKrasa"> | boolean
    analyticsId?: IntNullableFilter<"ZdravieAKrasa"> | number | null
    productAnalyticsId?: IntNullableFilter<"ZdravieAKrasa"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type ZdravieAKrasaOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrderInput | SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: ZdravieAKrasaCountOrderByAggregateInput
    _avg?: ZdravieAKrasaAvgOrderByAggregateInput
    _max?: ZdravieAKrasaMaxOrderByAggregateInput
    _min?: ZdravieAKrasaMinOrderByAggregateInput
    _sum?: ZdravieAKrasaSumOrderByAggregateInput
  }

  export type ZdravieAKrasaScalarWhereWithAggregatesInput = {
    AND?: ZdravieAKrasaScalarWhereWithAggregatesInput | ZdravieAKrasaScalarWhereWithAggregatesInput[]
    OR?: ZdravieAKrasaScalarWhereWithAggregatesInput[]
    NOT?: ZdravieAKrasaScalarWhereWithAggregatesInput | ZdravieAKrasaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ZdravieAKrasa"> | number
    productId?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    title?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    price?: FloatWithAggregatesFilter<"ZdravieAKrasa"> | number
    unitPrice?: FloatWithAggregatesFilter<"ZdravieAKrasa"> | number
    imageUrl?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    isForSale?: BoolWithAggregatesFilter<"ZdravieAKrasa"> | boolean
    aisleName?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"ZdravieAKrasa"> | Date | string
    category?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    superDepartmentName?: StringWithAggregatesFilter<"ZdravieAKrasa"> | string
    hasPromotions?: BoolWithAggregatesFilter<"ZdravieAKrasa"> | boolean
    analyticsId?: IntNullableWithAggregatesFilter<"ZdravieAKrasa"> | number | null
    productAnalyticsId?: IntNullableWithAggregatesFilter<"ZdravieAKrasa"> | number | null
  }

  export type OvocieAZeleninyWhereInput = {
    AND?: OvocieAZeleninyWhereInput | OvocieAZeleninyWhereInput[]
    OR?: OvocieAZeleninyWhereInput[]
    NOT?: OvocieAZeleninyWhereInput | OvocieAZeleninyWhereInput[]
    id?: IntFilter<"OvocieAZeleniny"> | number
    productId?: StringFilter<"OvocieAZeleniny"> | string
    title?: StringFilter<"OvocieAZeleniny"> | string
    price?: FloatFilter<"OvocieAZeleniny"> | number
    unitPrice?: FloatFilter<"OvocieAZeleniny"> | number
    imageUrl?: StringFilter<"OvocieAZeleniny"> | string
    unitOfMeasure?: StringFilter<"OvocieAZeleniny"> | string
    isForSale?: BoolFilter<"OvocieAZeleniny"> | boolean
    aisleName?: StringFilter<"OvocieAZeleniny"> | string
    lastUpdated?: DateTimeFilter<"OvocieAZeleniny"> | Date | string
    category?: StringFilter<"OvocieAZeleniny"> | string
    superDepartmentName?: StringFilter<"OvocieAZeleniny"> | string
    hasPromotions?: BoolFilter<"OvocieAZeleniny"> | boolean
    analyticsId?: IntNullableFilter<"OvocieAZeleniny"> | number | null
    productAnalyticsId?: IntNullableFilter<"OvocieAZeleniny"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type OvocieAZeleninyOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrderInput | SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type OvocieAZeleninyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: OvocieAZeleninyProductIdLastUpdatedCompoundUniqueInput
    AND?: OvocieAZeleninyWhereInput | OvocieAZeleninyWhereInput[]
    OR?: OvocieAZeleninyWhereInput[]
    NOT?: OvocieAZeleninyWhereInput | OvocieAZeleninyWhereInput[]
    productId?: StringFilter<"OvocieAZeleniny"> | string
    title?: StringFilter<"OvocieAZeleniny"> | string
    price?: FloatFilter<"OvocieAZeleniny"> | number
    unitPrice?: FloatFilter<"OvocieAZeleniny"> | number
    imageUrl?: StringFilter<"OvocieAZeleniny"> | string
    unitOfMeasure?: StringFilter<"OvocieAZeleniny"> | string
    isForSale?: BoolFilter<"OvocieAZeleniny"> | boolean
    aisleName?: StringFilter<"OvocieAZeleniny"> | string
    lastUpdated?: DateTimeFilter<"OvocieAZeleniny"> | Date | string
    category?: StringFilter<"OvocieAZeleniny"> | string
    superDepartmentName?: StringFilter<"OvocieAZeleniny"> | string
    hasPromotions?: BoolFilter<"OvocieAZeleniny"> | boolean
    analyticsId?: IntNullableFilter<"OvocieAZeleniny"> | number | null
    productAnalyticsId?: IntNullableFilter<"OvocieAZeleniny"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type OvocieAZeleninyOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrderInput | SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: OvocieAZeleninyCountOrderByAggregateInput
    _avg?: OvocieAZeleninyAvgOrderByAggregateInput
    _max?: OvocieAZeleninyMaxOrderByAggregateInput
    _min?: OvocieAZeleninyMinOrderByAggregateInput
    _sum?: OvocieAZeleninySumOrderByAggregateInput
  }

  export type OvocieAZeleninyScalarWhereWithAggregatesInput = {
    AND?: OvocieAZeleninyScalarWhereWithAggregatesInput | OvocieAZeleninyScalarWhereWithAggregatesInput[]
    OR?: OvocieAZeleninyScalarWhereWithAggregatesInput[]
    NOT?: OvocieAZeleninyScalarWhereWithAggregatesInput | OvocieAZeleninyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"OvocieAZeleniny"> | number
    productId?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    title?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    price?: FloatWithAggregatesFilter<"OvocieAZeleniny"> | number
    unitPrice?: FloatWithAggregatesFilter<"OvocieAZeleniny"> | number
    imageUrl?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    isForSale?: BoolWithAggregatesFilter<"OvocieAZeleniny"> | boolean
    aisleName?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"OvocieAZeleniny"> | Date | string
    category?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    superDepartmentName?: StringWithAggregatesFilter<"OvocieAZeleniny"> | string
    hasPromotions?: BoolWithAggregatesFilter<"OvocieAZeleniny"> | boolean
    analyticsId?: IntNullableWithAggregatesFilter<"OvocieAZeleniny"> | number | null
    productAnalyticsId?: IntNullableWithAggregatesFilter<"OvocieAZeleniny"> | number | null
  }

  export type GrilovanieWhereInput = {
    AND?: GrilovanieWhereInput | GrilovanieWhereInput[]
    OR?: GrilovanieWhereInput[]
    NOT?: GrilovanieWhereInput | GrilovanieWhereInput[]
    id?: IntFilter<"Grilovanie"> | number
    productId?: StringFilter<"Grilovanie"> | string
    title?: StringFilter<"Grilovanie"> | string
    price?: FloatFilter<"Grilovanie"> | number
    unitPrice?: FloatFilter<"Grilovanie"> | number
    imageUrl?: StringFilter<"Grilovanie"> | string
    unitOfMeasure?: StringFilter<"Grilovanie"> | string
    isForSale?: BoolFilter<"Grilovanie"> | boolean
    aisleName?: StringFilter<"Grilovanie"> | string
    lastUpdated?: DateTimeFilter<"Grilovanie"> | Date | string
    category?: StringFilter<"Grilovanie"> | string
    superDepartmentName?: StringFilter<"Grilovanie"> | string
    hasPromotions?: BoolFilter<"Grilovanie"> | boolean
    productAnalyticsId?: IntNullableFilter<"Grilovanie"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type GrilovanieOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type GrilovanieWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: GrilovanieProductIdLastUpdatedCompoundUniqueInput
    AND?: GrilovanieWhereInput | GrilovanieWhereInput[]
    OR?: GrilovanieWhereInput[]
    NOT?: GrilovanieWhereInput | GrilovanieWhereInput[]
    productId?: StringFilter<"Grilovanie"> | string
    title?: StringFilter<"Grilovanie"> | string
    price?: FloatFilter<"Grilovanie"> | number
    unitPrice?: FloatFilter<"Grilovanie"> | number
    imageUrl?: StringFilter<"Grilovanie"> | string
    unitOfMeasure?: StringFilter<"Grilovanie"> | string
    isForSale?: BoolFilter<"Grilovanie"> | boolean
    aisleName?: StringFilter<"Grilovanie"> | string
    lastUpdated?: DateTimeFilter<"Grilovanie"> | Date | string
    category?: StringFilter<"Grilovanie"> | string
    superDepartmentName?: StringFilter<"Grilovanie"> | string
    hasPromotions?: BoolFilter<"Grilovanie"> | boolean
    productAnalyticsId?: IntNullableFilter<"Grilovanie"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type GrilovanieOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: GrilovanieCountOrderByAggregateInput
    _avg?: GrilovanieAvgOrderByAggregateInput
    _max?: GrilovanieMaxOrderByAggregateInput
    _min?: GrilovanieMinOrderByAggregateInput
    _sum?: GrilovanieSumOrderByAggregateInput
  }

  export type GrilovanieScalarWhereWithAggregatesInput = {
    AND?: GrilovanieScalarWhereWithAggregatesInput | GrilovanieScalarWhereWithAggregatesInput[]
    OR?: GrilovanieScalarWhereWithAggregatesInput[]
    NOT?: GrilovanieScalarWhereWithAggregatesInput | GrilovanieScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Grilovanie"> | number
    productId?: StringWithAggregatesFilter<"Grilovanie"> | string
    title?: StringWithAggregatesFilter<"Grilovanie"> | string
    price?: FloatWithAggregatesFilter<"Grilovanie"> | number
    unitPrice?: FloatWithAggregatesFilter<"Grilovanie"> | number
    imageUrl?: StringWithAggregatesFilter<"Grilovanie"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"Grilovanie"> | string
    isForSale?: BoolWithAggregatesFilter<"Grilovanie"> | boolean
    aisleName?: StringWithAggregatesFilter<"Grilovanie"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"Grilovanie"> | Date | string
    category?: StringWithAggregatesFilter<"Grilovanie"> | string
    superDepartmentName?: StringWithAggregatesFilter<"Grilovanie"> | string
    hasPromotions?: BoolWithAggregatesFilter<"Grilovanie"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"Grilovanie"> | number | null
  }

  export type StarostlivostODomacnostWhereInput = {
    AND?: StarostlivostODomacnostWhereInput | StarostlivostODomacnostWhereInput[]
    OR?: StarostlivostODomacnostWhereInput[]
    NOT?: StarostlivostODomacnostWhereInput | StarostlivostODomacnostWhereInput[]
    id?: IntFilter<"StarostlivostODomacnost"> | number
    productId?: StringFilter<"StarostlivostODomacnost"> | string
    title?: StringFilter<"StarostlivostODomacnost"> | string
    price?: FloatFilter<"StarostlivostODomacnost"> | number
    unitPrice?: FloatFilter<"StarostlivostODomacnost"> | number
    imageUrl?: StringFilter<"StarostlivostODomacnost"> | string
    unitOfMeasure?: StringFilter<"StarostlivostODomacnost"> | string
    isForSale?: BoolFilter<"StarostlivostODomacnost"> | boolean
    aisleName?: StringFilter<"StarostlivostODomacnost"> | string
    lastUpdated?: DateTimeFilter<"StarostlivostODomacnost"> | Date | string
    category?: StringFilter<"StarostlivostODomacnost"> | string
    superDepartmentName?: StringFilter<"StarostlivostODomacnost"> | string
    hasPromotions?: BoolFilter<"StarostlivostODomacnost"> | boolean
    productAnalyticsId?: IntNullableFilter<"StarostlivostODomacnost"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type StarostlivostODomacnostOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type StarostlivostODomacnostWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: StarostlivostODomacnostProductIdLastUpdatedCompoundUniqueInput
    AND?: StarostlivostODomacnostWhereInput | StarostlivostODomacnostWhereInput[]
    OR?: StarostlivostODomacnostWhereInput[]
    NOT?: StarostlivostODomacnostWhereInput | StarostlivostODomacnostWhereInput[]
    productId?: StringFilter<"StarostlivostODomacnost"> | string
    title?: StringFilter<"StarostlivostODomacnost"> | string
    price?: FloatFilter<"StarostlivostODomacnost"> | number
    unitPrice?: FloatFilter<"StarostlivostODomacnost"> | number
    imageUrl?: StringFilter<"StarostlivostODomacnost"> | string
    unitOfMeasure?: StringFilter<"StarostlivostODomacnost"> | string
    isForSale?: BoolFilter<"StarostlivostODomacnost"> | boolean
    aisleName?: StringFilter<"StarostlivostODomacnost"> | string
    lastUpdated?: DateTimeFilter<"StarostlivostODomacnost"> | Date | string
    category?: StringFilter<"StarostlivostODomacnost"> | string
    superDepartmentName?: StringFilter<"StarostlivostODomacnost"> | string
    hasPromotions?: BoolFilter<"StarostlivostODomacnost"> | boolean
    productAnalyticsId?: IntNullableFilter<"StarostlivostODomacnost"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type StarostlivostODomacnostOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: StarostlivostODomacnostCountOrderByAggregateInput
    _avg?: StarostlivostODomacnostAvgOrderByAggregateInput
    _max?: StarostlivostODomacnostMaxOrderByAggregateInput
    _min?: StarostlivostODomacnostMinOrderByAggregateInput
    _sum?: StarostlivostODomacnostSumOrderByAggregateInput
  }

  export type StarostlivostODomacnostScalarWhereWithAggregatesInput = {
    AND?: StarostlivostODomacnostScalarWhereWithAggregatesInput | StarostlivostODomacnostScalarWhereWithAggregatesInput[]
    OR?: StarostlivostODomacnostScalarWhereWithAggregatesInput[]
    NOT?: StarostlivostODomacnostScalarWhereWithAggregatesInput | StarostlivostODomacnostScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"StarostlivostODomacnost"> | number
    productId?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    title?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    price?: FloatWithAggregatesFilter<"StarostlivostODomacnost"> | number
    unitPrice?: FloatWithAggregatesFilter<"StarostlivostODomacnost"> | number
    imageUrl?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    isForSale?: BoolWithAggregatesFilter<"StarostlivostODomacnost"> | boolean
    aisleName?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"StarostlivostODomacnost"> | Date | string
    category?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    superDepartmentName?: StringWithAggregatesFilter<"StarostlivostODomacnost"> | string
    hasPromotions?: BoolWithAggregatesFilter<"StarostlivostODomacnost"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"StarostlivostODomacnost"> | number | null
  }

  export type PecivoWhereInput = {
    AND?: PecivoWhereInput | PecivoWhereInput[]
    OR?: PecivoWhereInput[]
    NOT?: PecivoWhereInput | PecivoWhereInput[]
    id?: IntFilter<"Pecivo"> | number
    productId?: StringFilter<"Pecivo"> | string
    title?: StringFilter<"Pecivo"> | string
    price?: FloatFilter<"Pecivo"> | number
    unitPrice?: FloatFilter<"Pecivo"> | number
    imageUrl?: StringFilter<"Pecivo"> | string
    unitOfMeasure?: StringFilter<"Pecivo"> | string
    isForSale?: BoolFilter<"Pecivo"> | boolean
    aisleName?: StringFilter<"Pecivo"> | string
    lastUpdated?: DateTimeFilter<"Pecivo"> | Date | string
    category?: StringFilter<"Pecivo"> | string
    superDepartmentName?: StringFilter<"Pecivo"> | string
    hasPromotions?: BoolFilter<"Pecivo"> | boolean
    productAnalyticsId?: IntNullableFilter<"Pecivo"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type PecivoOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type PecivoWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: PecivoProductIdLastUpdatedCompoundUniqueInput
    AND?: PecivoWhereInput | PecivoWhereInput[]
    OR?: PecivoWhereInput[]
    NOT?: PecivoWhereInput | PecivoWhereInput[]
    productId?: StringFilter<"Pecivo"> | string
    title?: StringFilter<"Pecivo"> | string
    price?: FloatFilter<"Pecivo"> | number
    unitPrice?: FloatFilter<"Pecivo"> | number
    imageUrl?: StringFilter<"Pecivo"> | string
    unitOfMeasure?: StringFilter<"Pecivo"> | string
    isForSale?: BoolFilter<"Pecivo"> | boolean
    aisleName?: StringFilter<"Pecivo"> | string
    lastUpdated?: DateTimeFilter<"Pecivo"> | Date | string
    category?: StringFilter<"Pecivo"> | string
    superDepartmentName?: StringFilter<"Pecivo"> | string
    hasPromotions?: BoolFilter<"Pecivo"> | boolean
    productAnalyticsId?: IntNullableFilter<"Pecivo"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type PecivoOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: PecivoCountOrderByAggregateInput
    _avg?: PecivoAvgOrderByAggregateInput
    _max?: PecivoMaxOrderByAggregateInput
    _min?: PecivoMinOrderByAggregateInput
    _sum?: PecivoSumOrderByAggregateInput
  }

  export type PecivoScalarWhereWithAggregatesInput = {
    AND?: PecivoScalarWhereWithAggregatesInput | PecivoScalarWhereWithAggregatesInput[]
    OR?: PecivoScalarWhereWithAggregatesInput[]
    NOT?: PecivoScalarWhereWithAggregatesInput | PecivoScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Pecivo"> | number
    productId?: StringWithAggregatesFilter<"Pecivo"> | string
    title?: StringWithAggregatesFilter<"Pecivo"> | string
    price?: FloatWithAggregatesFilter<"Pecivo"> | number
    unitPrice?: FloatWithAggregatesFilter<"Pecivo"> | number
    imageUrl?: StringWithAggregatesFilter<"Pecivo"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"Pecivo"> | string
    isForSale?: BoolWithAggregatesFilter<"Pecivo"> | boolean
    aisleName?: StringWithAggregatesFilter<"Pecivo"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"Pecivo"> | Date | string
    category?: StringWithAggregatesFilter<"Pecivo"> | string
    superDepartmentName?: StringWithAggregatesFilter<"Pecivo"> | string
    hasPromotions?: BoolWithAggregatesFilter<"Pecivo"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"Pecivo"> | number | null
  }

  export type MasoRybyALahodkyWhereInput = {
    AND?: MasoRybyALahodkyWhereInput | MasoRybyALahodkyWhereInput[]
    OR?: MasoRybyALahodkyWhereInput[]
    NOT?: MasoRybyALahodkyWhereInput | MasoRybyALahodkyWhereInput[]
    id?: IntFilter<"MasoRybyALahodky"> | number
    productId?: StringFilter<"MasoRybyALahodky"> | string
    title?: StringFilter<"MasoRybyALahodky"> | string
    price?: FloatFilter<"MasoRybyALahodky"> | number
    unitPrice?: FloatFilter<"MasoRybyALahodky"> | number
    imageUrl?: StringFilter<"MasoRybyALahodky"> | string
    unitOfMeasure?: StringFilter<"MasoRybyALahodky"> | string
    isForSale?: BoolFilter<"MasoRybyALahodky"> | boolean
    aisleName?: StringFilter<"MasoRybyALahodky"> | string
    lastUpdated?: DateTimeFilter<"MasoRybyALahodky"> | Date | string
    category?: StringFilter<"MasoRybyALahodky"> | string
    superDepartmentName?: StringFilter<"MasoRybyALahodky"> | string
    hasPromotions?: BoolFilter<"MasoRybyALahodky"> | boolean
    productAnalyticsId?: IntNullableFilter<"MasoRybyALahodky"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type MasoRybyALahodkyOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type MasoRybyALahodkyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: MasoRybyALahodkyProductIdLastUpdatedCompoundUniqueInput
    AND?: MasoRybyALahodkyWhereInput | MasoRybyALahodkyWhereInput[]
    OR?: MasoRybyALahodkyWhereInput[]
    NOT?: MasoRybyALahodkyWhereInput | MasoRybyALahodkyWhereInput[]
    productId?: StringFilter<"MasoRybyALahodky"> | string
    title?: StringFilter<"MasoRybyALahodky"> | string
    price?: FloatFilter<"MasoRybyALahodky"> | number
    unitPrice?: FloatFilter<"MasoRybyALahodky"> | number
    imageUrl?: StringFilter<"MasoRybyALahodky"> | string
    unitOfMeasure?: StringFilter<"MasoRybyALahodky"> | string
    isForSale?: BoolFilter<"MasoRybyALahodky"> | boolean
    aisleName?: StringFilter<"MasoRybyALahodky"> | string
    lastUpdated?: DateTimeFilter<"MasoRybyALahodky"> | Date | string
    category?: StringFilter<"MasoRybyALahodky"> | string
    superDepartmentName?: StringFilter<"MasoRybyALahodky"> | string
    hasPromotions?: BoolFilter<"MasoRybyALahodky"> | boolean
    productAnalyticsId?: IntNullableFilter<"MasoRybyALahodky"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type MasoRybyALahodkyOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: MasoRybyALahodkyCountOrderByAggregateInput
    _avg?: MasoRybyALahodkyAvgOrderByAggregateInput
    _max?: MasoRybyALahodkyMaxOrderByAggregateInput
    _min?: MasoRybyALahodkyMinOrderByAggregateInput
    _sum?: MasoRybyALahodkySumOrderByAggregateInput
  }

  export type MasoRybyALahodkyScalarWhereWithAggregatesInput = {
    AND?: MasoRybyALahodkyScalarWhereWithAggregatesInput | MasoRybyALahodkyScalarWhereWithAggregatesInput[]
    OR?: MasoRybyALahodkyScalarWhereWithAggregatesInput[]
    NOT?: MasoRybyALahodkyScalarWhereWithAggregatesInput | MasoRybyALahodkyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MasoRybyALahodky"> | number
    productId?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    title?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    price?: FloatWithAggregatesFilter<"MasoRybyALahodky"> | number
    unitPrice?: FloatWithAggregatesFilter<"MasoRybyALahodky"> | number
    imageUrl?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    isForSale?: BoolWithAggregatesFilter<"MasoRybyALahodky"> | boolean
    aisleName?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"MasoRybyALahodky"> | Date | string
    category?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    superDepartmentName?: StringWithAggregatesFilter<"MasoRybyALahodky"> | string
    hasPromotions?: BoolWithAggregatesFilter<"MasoRybyALahodky"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"MasoRybyALahodky"> | number | null
  }

  export type MliecneVyrobkyAVajciaWhereInput = {
    AND?: MliecneVyrobkyAVajciaWhereInput | MliecneVyrobkyAVajciaWhereInput[]
    OR?: MliecneVyrobkyAVajciaWhereInput[]
    NOT?: MliecneVyrobkyAVajciaWhereInput | MliecneVyrobkyAVajciaWhereInput[]
    id?: IntFilter<"MliecneVyrobkyAVajcia"> | number
    productId?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    title?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    price?: FloatFilter<"MliecneVyrobkyAVajcia"> | number
    unitPrice?: FloatFilter<"MliecneVyrobkyAVajcia"> | number
    imageUrl?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    unitOfMeasure?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    isForSale?: BoolFilter<"MliecneVyrobkyAVajcia"> | boolean
    aisleName?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    lastUpdated?: DateTimeFilter<"MliecneVyrobkyAVajcia"> | Date | string
    category?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    superDepartmentName?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    hasPromotions?: BoolFilter<"MliecneVyrobkyAVajcia"> | boolean
    productAnalyticsId?: IntNullableFilter<"MliecneVyrobkyAVajcia"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type MliecneVyrobkyAVajciaOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type MliecneVyrobkyAVajciaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: MliecneVyrobkyAVajciaProductIdLastUpdatedCompoundUniqueInput
    AND?: MliecneVyrobkyAVajciaWhereInput | MliecneVyrobkyAVajciaWhereInput[]
    OR?: MliecneVyrobkyAVajciaWhereInput[]
    NOT?: MliecneVyrobkyAVajciaWhereInput | MliecneVyrobkyAVajciaWhereInput[]
    productId?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    title?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    price?: FloatFilter<"MliecneVyrobkyAVajcia"> | number
    unitPrice?: FloatFilter<"MliecneVyrobkyAVajcia"> | number
    imageUrl?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    unitOfMeasure?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    isForSale?: BoolFilter<"MliecneVyrobkyAVajcia"> | boolean
    aisleName?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    lastUpdated?: DateTimeFilter<"MliecneVyrobkyAVajcia"> | Date | string
    category?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    superDepartmentName?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    hasPromotions?: BoolFilter<"MliecneVyrobkyAVajcia"> | boolean
    productAnalyticsId?: IntNullableFilter<"MliecneVyrobkyAVajcia"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type MliecneVyrobkyAVajciaOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: MliecneVyrobkyAVajciaCountOrderByAggregateInput
    _avg?: MliecneVyrobkyAVajciaAvgOrderByAggregateInput
    _max?: MliecneVyrobkyAVajciaMaxOrderByAggregateInput
    _min?: MliecneVyrobkyAVajciaMinOrderByAggregateInput
    _sum?: MliecneVyrobkyAVajciaSumOrderByAggregateInput
  }

  export type MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput = {
    AND?: MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput | MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput[]
    OR?: MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput[]
    NOT?: MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput | MliecneVyrobkyAVajciaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | number
    productId?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    title?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    price?: FloatWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | number
    unitPrice?: FloatWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | number
    imageUrl?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    isForSale?: BoolWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | boolean
    aisleName?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | Date | string
    category?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    superDepartmentName?: StringWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | string
    hasPromotions?: BoolWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"MliecneVyrobkyAVajcia"> | number | null
  }

  export type TrvanlivePotravinyWhereInput = {
    AND?: TrvanlivePotravinyWhereInput | TrvanlivePotravinyWhereInput[]
    OR?: TrvanlivePotravinyWhereInput[]
    NOT?: TrvanlivePotravinyWhereInput | TrvanlivePotravinyWhereInput[]
    id?: IntFilter<"TrvanlivePotraviny"> | number
    productId?: StringFilter<"TrvanlivePotraviny"> | string
    title?: StringFilter<"TrvanlivePotraviny"> | string
    price?: FloatFilter<"TrvanlivePotraviny"> | number
    unitPrice?: FloatFilter<"TrvanlivePotraviny"> | number
    imageUrl?: StringFilter<"TrvanlivePotraviny"> | string
    unitOfMeasure?: StringFilter<"TrvanlivePotraviny"> | string
    isForSale?: BoolFilter<"TrvanlivePotraviny"> | boolean
    aisleName?: StringFilter<"TrvanlivePotraviny"> | string
    lastUpdated?: DateTimeFilter<"TrvanlivePotraviny"> | Date | string
    category?: StringFilter<"TrvanlivePotraviny"> | string
    superDepartmentName?: StringFilter<"TrvanlivePotraviny"> | string
    hasPromotions?: BoolFilter<"TrvanlivePotraviny"> | boolean
    productAnalyticsId?: IntNullableFilter<"TrvanlivePotraviny"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type TrvanlivePotravinyOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type TrvanlivePotravinyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: TrvanlivePotravinyProductIdLastUpdatedCompoundUniqueInput
    AND?: TrvanlivePotravinyWhereInput | TrvanlivePotravinyWhereInput[]
    OR?: TrvanlivePotravinyWhereInput[]
    NOT?: TrvanlivePotravinyWhereInput | TrvanlivePotravinyWhereInput[]
    productId?: StringFilter<"TrvanlivePotraviny"> | string
    title?: StringFilter<"TrvanlivePotraviny"> | string
    price?: FloatFilter<"TrvanlivePotraviny"> | number
    unitPrice?: FloatFilter<"TrvanlivePotraviny"> | number
    imageUrl?: StringFilter<"TrvanlivePotraviny"> | string
    unitOfMeasure?: StringFilter<"TrvanlivePotraviny"> | string
    isForSale?: BoolFilter<"TrvanlivePotraviny"> | boolean
    aisleName?: StringFilter<"TrvanlivePotraviny"> | string
    lastUpdated?: DateTimeFilter<"TrvanlivePotraviny"> | Date | string
    category?: StringFilter<"TrvanlivePotraviny"> | string
    superDepartmentName?: StringFilter<"TrvanlivePotraviny"> | string
    hasPromotions?: BoolFilter<"TrvanlivePotraviny"> | boolean
    productAnalyticsId?: IntNullableFilter<"TrvanlivePotraviny"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type TrvanlivePotravinyOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: TrvanlivePotravinyCountOrderByAggregateInput
    _avg?: TrvanlivePotravinyAvgOrderByAggregateInput
    _max?: TrvanlivePotravinyMaxOrderByAggregateInput
    _min?: TrvanlivePotravinyMinOrderByAggregateInput
    _sum?: TrvanlivePotravinySumOrderByAggregateInput
  }

  export type TrvanlivePotravinyScalarWhereWithAggregatesInput = {
    AND?: TrvanlivePotravinyScalarWhereWithAggregatesInput | TrvanlivePotravinyScalarWhereWithAggregatesInput[]
    OR?: TrvanlivePotravinyScalarWhereWithAggregatesInput[]
    NOT?: TrvanlivePotravinyScalarWhereWithAggregatesInput | TrvanlivePotravinyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"TrvanlivePotraviny"> | number
    productId?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    title?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    price?: FloatWithAggregatesFilter<"TrvanlivePotraviny"> | number
    unitPrice?: FloatWithAggregatesFilter<"TrvanlivePotraviny"> | number
    imageUrl?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    isForSale?: BoolWithAggregatesFilter<"TrvanlivePotraviny"> | boolean
    aisleName?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"TrvanlivePotraviny"> | Date | string
    category?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    superDepartmentName?: StringWithAggregatesFilter<"TrvanlivePotraviny"> | string
    hasPromotions?: BoolWithAggregatesFilter<"TrvanlivePotraviny"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"TrvanlivePotraviny"> | number | null
  }

  export type SpecialnaAZdravaVyzivaWhereInput = {
    AND?: SpecialnaAZdravaVyzivaWhereInput | SpecialnaAZdravaVyzivaWhereInput[]
    OR?: SpecialnaAZdravaVyzivaWhereInput[]
    NOT?: SpecialnaAZdravaVyzivaWhereInput | SpecialnaAZdravaVyzivaWhereInput[]
    id?: IntFilter<"SpecialnaAZdravaVyziva"> | number
    productId?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    title?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    price?: FloatFilter<"SpecialnaAZdravaVyziva"> | number
    unitPrice?: FloatFilter<"SpecialnaAZdravaVyziva"> | number
    imageUrl?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    unitOfMeasure?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    isForSale?: BoolFilter<"SpecialnaAZdravaVyziva"> | boolean
    aisleName?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    lastUpdated?: DateTimeFilter<"SpecialnaAZdravaVyziva"> | Date | string
    category?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    superDepartmentName?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    hasPromotions?: BoolFilter<"SpecialnaAZdravaVyziva"> | boolean
    productAnalyticsId?: IntNullableFilter<"SpecialnaAZdravaVyziva"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type SpecialnaAZdravaVyzivaOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type SpecialnaAZdravaVyzivaWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: SpecialnaAZdravaVyzivaProductIdLastUpdatedCompoundUniqueInput
    AND?: SpecialnaAZdravaVyzivaWhereInput | SpecialnaAZdravaVyzivaWhereInput[]
    OR?: SpecialnaAZdravaVyzivaWhereInput[]
    NOT?: SpecialnaAZdravaVyzivaWhereInput | SpecialnaAZdravaVyzivaWhereInput[]
    productId?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    title?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    price?: FloatFilter<"SpecialnaAZdravaVyziva"> | number
    unitPrice?: FloatFilter<"SpecialnaAZdravaVyziva"> | number
    imageUrl?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    unitOfMeasure?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    isForSale?: BoolFilter<"SpecialnaAZdravaVyziva"> | boolean
    aisleName?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    lastUpdated?: DateTimeFilter<"SpecialnaAZdravaVyziva"> | Date | string
    category?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    superDepartmentName?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    hasPromotions?: BoolFilter<"SpecialnaAZdravaVyziva"> | boolean
    productAnalyticsId?: IntNullableFilter<"SpecialnaAZdravaVyziva"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type SpecialnaAZdravaVyzivaOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: SpecialnaAZdravaVyzivaCountOrderByAggregateInput
    _avg?: SpecialnaAZdravaVyzivaAvgOrderByAggregateInput
    _max?: SpecialnaAZdravaVyzivaMaxOrderByAggregateInput
    _min?: SpecialnaAZdravaVyzivaMinOrderByAggregateInput
    _sum?: SpecialnaAZdravaVyzivaSumOrderByAggregateInput
  }

  export type SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput = {
    AND?: SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput | SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput[]
    OR?: SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput[]
    NOT?: SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput | SpecialnaAZdravaVyzivaScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | number
    productId?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    title?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    price?: FloatWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | number
    unitPrice?: FloatWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | number
    imageUrl?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    isForSale?: BoolWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | boolean
    aisleName?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | Date | string
    category?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    superDepartmentName?: StringWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | string
    hasPromotions?: BoolWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"SpecialnaAZdravaVyziva"> | number | null
  }

  export type MrazenePotravinyWhereInput = {
    AND?: MrazenePotravinyWhereInput | MrazenePotravinyWhereInput[]
    OR?: MrazenePotravinyWhereInput[]
    NOT?: MrazenePotravinyWhereInput | MrazenePotravinyWhereInput[]
    id?: IntFilter<"MrazenePotraviny"> | number
    productId?: StringFilter<"MrazenePotraviny"> | string
    title?: StringFilter<"MrazenePotraviny"> | string
    price?: FloatFilter<"MrazenePotraviny"> | number
    unitPrice?: FloatFilter<"MrazenePotraviny"> | number
    imageUrl?: StringFilter<"MrazenePotraviny"> | string
    unitOfMeasure?: StringFilter<"MrazenePotraviny"> | string
    isForSale?: BoolFilter<"MrazenePotraviny"> | boolean
    aisleName?: StringFilter<"MrazenePotraviny"> | string
    lastUpdated?: DateTimeFilter<"MrazenePotraviny"> | Date | string
    category?: StringFilter<"MrazenePotraviny"> | string
    superDepartmentName?: StringFilter<"MrazenePotraviny"> | string
    hasPromotions?: BoolFilter<"MrazenePotraviny"> | boolean
    productAnalyticsId?: IntNullableFilter<"MrazenePotraviny"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type MrazenePotravinyOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type MrazenePotravinyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: MrazenePotravinyProductIdLastUpdatedCompoundUniqueInput
    AND?: MrazenePotravinyWhereInput | MrazenePotravinyWhereInput[]
    OR?: MrazenePotravinyWhereInput[]
    NOT?: MrazenePotravinyWhereInput | MrazenePotravinyWhereInput[]
    productId?: StringFilter<"MrazenePotraviny"> | string
    title?: StringFilter<"MrazenePotraviny"> | string
    price?: FloatFilter<"MrazenePotraviny"> | number
    unitPrice?: FloatFilter<"MrazenePotraviny"> | number
    imageUrl?: StringFilter<"MrazenePotraviny"> | string
    unitOfMeasure?: StringFilter<"MrazenePotraviny"> | string
    isForSale?: BoolFilter<"MrazenePotraviny"> | boolean
    aisleName?: StringFilter<"MrazenePotraviny"> | string
    lastUpdated?: DateTimeFilter<"MrazenePotraviny"> | Date | string
    category?: StringFilter<"MrazenePotraviny"> | string
    superDepartmentName?: StringFilter<"MrazenePotraviny"> | string
    hasPromotions?: BoolFilter<"MrazenePotraviny"> | boolean
    productAnalyticsId?: IntNullableFilter<"MrazenePotraviny"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type MrazenePotravinyOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: MrazenePotravinyCountOrderByAggregateInput
    _avg?: MrazenePotravinyAvgOrderByAggregateInput
    _max?: MrazenePotravinyMaxOrderByAggregateInput
    _min?: MrazenePotravinyMinOrderByAggregateInput
    _sum?: MrazenePotravinySumOrderByAggregateInput
  }

  export type MrazenePotravinyScalarWhereWithAggregatesInput = {
    AND?: MrazenePotravinyScalarWhereWithAggregatesInput | MrazenePotravinyScalarWhereWithAggregatesInput[]
    OR?: MrazenePotravinyScalarWhereWithAggregatesInput[]
    NOT?: MrazenePotravinyScalarWhereWithAggregatesInput | MrazenePotravinyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"MrazenePotraviny"> | number
    productId?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    title?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    price?: FloatWithAggregatesFilter<"MrazenePotraviny"> | number
    unitPrice?: FloatWithAggregatesFilter<"MrazenePotraviny"> | number
    imageUrl?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    isForSale?: BoolWithAggregatesFilter<"MrazenePotraviny"> | boolean
    aisleName?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"MrazenePotraviny"> | Date | string
    category?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    superDepartmentName?: StringWithAggregatesFilter<"MrazenePotraviny"> | string
    hasPromotions?: BoolWithAggregatesFilter<"MrazenePotraviny"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"MrazenePotraviny"> | number | null
  }

  export type NapojeWhereInput = {
    AND?: NapojeWhereInput | NapojeWhereInput[]
    OR?: NapojeWhereInput[]
    NOT?: NapojeWhereInput | NapojeWhereInput[]
    id?: IntFilter<"Napoje"> | number
    productId?: StringFilter<"Napoje"> | string
    title?: StringFilter<"Napoje"> | string
    price?: FloatFilter<"Napoje"> | number
    unitPrice?: FloatFilter<"Napoje"> | number
    imageUrl?: StringFilter<"Napoje"> | string
    unitOfMeasure?: StringFilter<"Napoje"> | string
    isForSale?: BoolFilter<"Napoje"> | boolean
    aisleName?: StringFilter<"Napoje"> | string
    lastUpdated?: DateTimeFilter<"Napoje"> | Date | string
    category?: StringFilter<"Napoje"> | string
    superDepartmentName?: StringFilter<"Napoje"> | string
    hasPromotions?: BoolFilter<"Napoje"> | boolean
    productAnalyticsId?: IntNullableFilter<"Napoje"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type NapojeOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type NapojeWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: NapojeProductIdLastUpdatedCompoundUniqueInput
    AND?: NapojeWhereInput | NapojeWhereInput[]
    OR?: NapojeWhereInput[]
    NOT?: NapojeWhereInput | NapojeWhereInput[]
    productId?: StringFilter<"Napoje"> | string
    title?: StringFilter<"Napoje"> | string
    price?: FloatFilter<"Napoje"> | number
    unitPrice?: FloatFilter<"Napoje"> | number
    imageUrl?: StringFilter<"Napoje"> | string
    unitOfMeasure?: StringFilter<"Napoje"> | string
    isForSale?: BoolFilter<"Napoje"> | boolean
    aisleName?: StringFilter<"Napoje"> | string
    lastUpdated?: DateTimeFilter<"Napoje"> | Date | string
    category?: StringFilter<"Napoje"> | string
    superDepartmentName?: StringFilter<"Napoje"> | string
    hasPromotions?: BoolFilter<"Napoje"> | boolean
    productAnalyticsId?: IntNullableFilter<"Napoje"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type NapojeOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: NapojeCountOrderByAggregateInput
    _avg?: NapojeAvgOrderByAggregateInput
    _max?: NapojeMaxOrderByAggregateInput
    _min?: NapojeMinOrderByAggregateInput
    _sum?: NapojeSumOrderByAggregateInput
  }

  export type NapojeScalarWhereWithAggregatesInput = {
    AND?: NapojeScalarWhereWithAggregatesInput | NapojeScalarWhereWithAggregatesInput[]
    OR?: NapojeScalarWhereWithAggregatesInput[]
    NOT?: NapojeScalarWhereWithAggregatesInput | NapojeScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Napoje"> | number
    productId?: StringWithAggregatesFilter<"Napoje"> | string
    title?: StringWithAggregatesFilter<"Napoje"> | string
    price?: FloatWithAggregatesFilter<"Napoje"> | number
    unitPrice?: FloatWithAggregatesFilter<"Napoje"> | number
    imageUrl?: StringWithAggregatesFilter<"Napoje"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"Napoje"> | string
    isForSale?: BoolWithAggregatesFilter<"Napoje"> | boolean
    aisleName?: StringWithAggregatesFilter<"Napoje"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"Napoje"> | Date | string
    category?: StringWithAggregatesFilter<"Napoje"> | string
    superDepartmentName?: StringWithAggregatesFilter<"Napoje"> | string
    hasPromotions?: BoolWithAggregatesFilter<"Napoje"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"Napoje"> | number | null
  }

  export type AlkoholWhereInput = {
    AND?: AlkoholWhereInput | AlkoholWhereInput[]
    OR?: AlkoholWhereInput[]
    NOT?: AlkoholWhereInput | AlkoholWhereInput[]
    id?: IntFilter<"Alkohol"> | number
    productId?: StringFilter<"Alkohol"> | string
    title?: StringFilter<"Alkohol"> | string
    price?: FloatFilter<"Alkohol"> | number
    unitPrice?: FloatFilter<"Alkohol"> | number
    imageUrl?: StringFilter<"Alkohol"> | string
    unitOfMeasure?: StringFilter<"Alkohol"> | string
    isForSale?: BoolFilter<"Alkohol"> | boolean
    aisleName?: StringFilter<"Alkohol"> | string
    lastUpdated?: DateTimeFilter<"Alkohol"> | Date | string
    category?: StringFilter<"Alkohol"> | string
    superDepartmentName?: StringFilter<"Alkohol"> | string
    hasPromotions?: BoolFilter<"Alkohol"> | boolean
    productAnalyticsId?: IntNullableFilter<"Alkohol"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }

  export type AlkoholOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    promotions?: PromotionOrderByRelationAggregateInput
    ProductAnalytics?: ProductAnalyticsOrderByWithRelationInput
    ShoppingListItem?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type AlkoholWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    productId_lastUpdated?: AlkoholProductIdLastUpdatedCompoundUniqueInput
    AND?: AlkoholWhereInput | AlkoholWhereInput[]
    OR?: AlkoholWhereInput[]
    NOT?: AlkoholWhereInput | AlkoholWhereInput[]
    productId?: StringFilter<"Alkohol"> | string
    title?: StringFilter<"Alkohol"> | string
    price?: FloatFilter<"Alkohol"> | number
    unitPrice?: FloatFilter<"Alkohol"> | number
    imageUrl?: StringFilter<"Alkohol"> | string
    unitOfMeasure?: StringFilter<"Alkohol"> | string
    isForSale?: BoolFilter<"Alkohol"> | boolean
    aisleName?: StringFilter<"Alkohol"> | string
    lastUpdated?: DateTimeFilter<"Alkohol"> | Date | string
    category?: StringFilter<"Alkohol"> | string
    superDepartmentName?: StringFilter<"Alkohol"> | string
    hasPromotions?: BoolFilter<"Alkohol"> | boolean
    productAnalyticsId?: IntNullableFilter<"Alkohol"> | number | null
    promotions?: PromotionListRelationFilter
    ProductAnalytics?: XOR<ProductAnalyticsNullableRelationFilter, ProductAnalyticsWhereInput> | null
    ShoppingListItem?: ShoppingListItemListRelationFilter
  }, "id" | "productId_lastUpdated">

  export type AlkoholOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrderInput | SortOrder
    _count?: AlkoholCountOrderByAggregateInput
    _avg?: AlkoholAvgOrderByAggregateInput
    _max?: AlkoholMaxOrderByAggregateInput
    _min?: AlkoholMinOrderByAggregateInput
    _sum?: AlkoholSumOrderByAggregateInput
  }

  export type AlkoholScalarWhereWithAggregatesInput = {
    AND?: AlkoholScalarWhereWithAggregatesInput | AlkoholScalarWhereWithAggregatesInput[]
    OR?: AlkoholScalarWhereWithAggregatesInput[]
    NOT?: AlkoholScalarWhereWithAggregatesInput | AlkoholScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Alkohol"> | number
    productId?: StringWithAggregatesFilter<"Alkohol"> | string
    title?: StringWithAggregatesFilter<"Alkohol"> | string
    price?: FloatWithAggregatesFilter<"Alkohol"> | number
    unitPrice?: FloatWithAggregatesFilter<"Alkohol"> | number
    imageUrl?: StringWithAggregatesFilter<"Alkohol"> | string
    unitOfMeasure?: StringWithAggregatesFilter<"Alkohol"> | string
    isForSale?: BoolWithAggregatesFilter<"Alkohol"> | boolean
    aisleName?: StringWithAggregatesFilter<"Alkohol"> | string
    lastUpdated?: DateTimeWithAggregatesFilter<"Alkohol"> | Date | string
    category?: StringWithAggregatesFilter<"Alkohol"> | string
    superDepartmentName?: StringWithAggregatesFilter<"Alkohol"> | string
    hasPromotions?: BoolWithAggregatesFilter<"Alkohol"> | boolean
    productAnalyticsId?: IntNullableWithAggregatesFilter<"Alkohol"> | number | null
  }

  export type PromotionWhereInput = {
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    id?: IntFilter<"Promotion"> | number
    promotionId?: StringFilter<"Promotion"> | string
    promotionType?: StringFilter<"Promotion"> | string
    startDate?: DateTimeFilter<"Promotion"> | Date | string
    endDate?: DateTimeFilter<"Promotion"> | Date | string
    offerText?: StringFilter<"Promotion"> | string
    promotionPrice?: FloatNullableFilter<"Promotion"> | number | null
    attributes?: StringNullableListFilter<"Promotion">
    ovocieAZeleninyId?: IntNullableFilter<"Promotion"> | number | null
    grilovanieId?: IntNullableFilter<"Promotion"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableFilter<"Promotion"> | number | null
    pecivoId?: IntNullableFilter<"Promotion"> | number | null
    masoRybyALahodkyId?: IntNullableFilter<"Promotion"> | number | null
    trvanlivePotravinyId?: IntNullableFilter<"Promotion"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableFilter<"Promotion"> | number | null
    mrazenePotravinyId?: IntNullableFilter<"Promotion"> | number | null
    napojeId?: IntNullableFilter<"Promotion"> | number | null
    alkoholId?: IntNullableFilter<"Promotion"> | number | null
    starostlivostODomacnostId?: IntNullableFilter<"Promotion"> | number | null
    zdravieAKrasaId?: IntNullableFilter<"Promotion"> | number | null
    ovocieAZeleniny?: XOR<OvocieAZeleninyNullableRelationFilter, OvocieAZeleninyWhereInput> | null
    grilovanie?: XOR<GrilovanieNullableRelationFilter, GrilovanieWhereInput> | null
    mliecneVyrobkyAVajcia?: XOR<MliecneVyrobkyAVajciaNullableRelationFilter, MliecneVyrobkyAVajciaWhereInput> | null
    pecivo?: XOR<PecivoNullableRelationFilter, PecivoWhereInput> | null
    masoRybyALahodky?: XOR<MasoRybyALahodkyNullableRelationFilter, MasoRybyALahodkyWhereInput> | null
    trvanlivePotraviny?: XOR<TrvanlivePotravinyNullableRelationFilter, TrvanlivePotravinyWhereInput> | null
    specialnaAZdravaVyziva?: XOR<SpecialnaAZdravaVyzivaNullableRelationFilter, SpecialnaAZdravaVyzivaWhereInput> | null
    mrazenePotraviny?: XOR<MrazenePotravinyNullableRelationFilter, MrazenePotravinyWhereInput> | null
    napoje?: XOR<NapojeNullableRelationFilter, NapojeWhereInput> | null
    alkohol?: XOR<AlkoholNullableRelationFilter, AlkoholWhereInput> | null
    starostlivostODomacnost?: XOR<StarostlivostODomacnostNullableRelationFilter, StarostlivostODomacnostWhereInput> | null
    zdravieAKrasa?: XOR<ZdravieAKrasaNullableRelationFilter, ZdravieAKrasaWhereInput> | null
  }

  export type PromotionOrderByWithRelationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    offerText?: SortOrder
    promotionPrice?: SortOrderInput | SortOrder
    attributes?: SortOrder
    ovocieAZeleninyId?: SortOrderInput | SortOrder
    grilovanieId?: SortOrderInput | SortOrder
    mliecneVyrobkyAVajciaId?: SortOrderInput | SortOrder
    pecivoId?: SortOrderInput | SortOrder
    masoRybyALahodkyId?: SortOrderInput | SortOrder
    trvanlivePotravinyId?: SortOrderInput | SortOrder
    specialnaAZdravaVyzivaId?: SortOrderInput | SortOrder
    mrazenePotravinyId?: SortOrderInput | SortOrder
    napojeId?: SortOrderInput | SortOrder
    alkoholId?: SortOrderInput | SortOrder
    starostlivostODomacnostId?: SortOrderInput | SortOrder
    zdravieAKrasaId?: SortOrderInput | SortOrder
    ovocieAZeleniny?: OvocieAZeleninyOrderByWithRelationInput
    grilovanie?: GrilovanieOrderByWithRelationInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaOrderByWithRelationInput
    pecivo?: PecivoOrderByWithRelationInput
    masoRybyALahodky?: MasoRybyALahodkyOrderByWithRelationInput
    trvanlivePotraviny?: TrvanlivePotravinyOrderByWithRelationInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaOrderByWithRelationInput
    mrazenePotraviny?: MrazenePotravinyOrderByWithRelationInput
    napoje?: NapojeOrderByWithRelationInput
    alkohol?: AlkoholOrderByWithRelationInput
    starostlivostODomacnost?: StarostlivostODomacnostOrderByWithRelationInput
    zdravieAKrasa?: ZdravieAKrasaOrderByWithRelationInput
  }

  export type PromotionWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: PromotionWhereInput | PromotionWhereInput[]
    OR?: PromotionWhereInput[]
    NOT?: PromotionWhereInput | PromotionWhereInput[]
    promotionId?: StringFilter<"Promotion"> | string
    promotionType?: StringFilter<"Promotion"> | string
    startDate?: DateTimeFilter<"Promotion"> | Date | string
    endDate?: DateTimeFilter<"Promotion"> | Date | string
    offerText?: StringFilter<"Promotion"> | string
    promotionPrice?: FloatNullableFilter<"Promotion"> | number | null
    attributes?: StringNullableListFilter<"Promotion">
    ovocieAZeleninyId?: IntNullableFilter<"Promotion"> | number | null
    grilovanieId?: IntNullableFilter<"Promotion"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableFilter<"Promotion"> | number | null
    pecivoId?: IntNullableFilter<"Promotion"> | number | null
    masoRybyALahodkyId?: IntNullableFilter<"Promotion"> | number | null
    trvanlivePotravinyId?: IntNullableFilter<"Promotion"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableFilter<"Promotion"> | number | null
    mrazenePotravinyId?: IntNullableFilter<"Promotion"> | number | null
    napojeId?: IntNullableFilter<"Promotion"> | number | null
    alkoholId?: IntNullableFilter<"Promotion"> | number | null
    starostlivostODomacnostId?: IntNullableFilter<"Promotion"> | number | null
    zdravieAKrasaId?: IntNullableFilter<"Promotion"> | number | null
    ovocieAZeleniny?: XOR<OvocieAZeleninyNullableRelationFilter, OvocieAZeleninyWhereInput> | null
    grilovanie?: XOR<GrilovanieNullableRelationFilter, GrilovanieWhereInput> | null
    mliecneVyrobkyAVajcia?: XOR<MliecneVyrobkyAVajciaNullableRelationFilter, MliecneVyrobkyAVajciaWhereInput> | null
    pecivo?: XOR<PecivoNullableRelationFilter, PecivoWhereInput> | null
    masoRybyALahodky?: XOR<MasoRybyALahodkyNullableRelationFilter, MasoRybyALahodkyWhereInput> | null
    trvanlivePotraviny?: XOR<TrvanlivePotravinyNullableRelationFilter, TrvanlivePotravinyWhereInput> | null
    specialnaAZdravaVyziva?: XOR<SpecialnaAZdravaVyzivaNullableRelationFilter, SpecialnaAZdravaVyzivaWhereInput> | null
    mrazenePotraviny?: XOR<MrazenePotravinyNullableRelationFilter, MrazenePotravinyWhereInput> | null
    napoje?: XOR<NapojeNullableRelationFilter, NapojeWhereInput> | null
    alkohol?: XOR<AlkoholNullableRelationFilter, AlkoholWhereInput> | null
    starostlivostODomacnost?: XOR<StarostlivostODomacnostNullableRelationFilter, StarostlivostODomacnostWhereInput> | null
    zdravieAKrasa?: XOR<ZdravieAKrasaNullableRelationFilter, ZdravieAKrasaWhereInput> | null
  }, "id">

  export type PromotionOrderByWithAggregationInput = {
    id?: SortOrder
    promotionId?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    offerText?: SortOrder
    promotionPrice?: SortOrderInput | SortOrder
    attributes?: SortOrder
    ovocieAZeleninyId?: SortOrderInput | SortOrder
    grilovanieId?: SortOrderInput | SortOrder
    mliecneVyrobkyAVajciaId?: SortOrderInput | SortOrder
    pecivoId?: SortOrderInput | SortOrder
    masoRybyALahodkyId?: SortOrderInput | SortOrder
    trvanlivePotravinyId?: SortOrderInput | SortOrder
    specialnaAZdravaVyzivaId?: SortOrderInput | SortOrder
    mrazenePotravinyId?: SortOrderInput | SortOrder
    napojeId?: SortOrderInput | SortOrder
    alkoholId?: SortOrderInput | SortOrder
    starostlivostODomacnostId?: SortOrderInput | SortOrder
    zdravieAKrasaId?: SortOrderInput | SortOrder
    _count?: PromotionCountOrderByAggregateInput
    _avg?: PromotionAvgOrderByAggregateInput
    _max?: PromotionMaxOrderByAggregateInput
    _min?: PromotionMinOrderByAggregateInput
    _sum?: PromotionSumOrderByAggregateInput
  }

  export type PromotionScalarWhereWithAggregatesInput = {
    AND?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    OR?: PromotionScalarWhereWithAggregatesInput[]
    NOT?: PromotionScalarWhereWithAggregatesInput | PromotionScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Promotion"> | number
    promotionId?: StringWithAggregatesFilter<"Promotion"> | string
    promotionType?: StringWithAggregatesFilter<"Promotion"> | string
    startDate?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    endDate?: DateTimeWithAggregatesFilter<"Promotion"> | Date | string
    offerText?: StringWithAggregatesFilter<"Promotion"> | string
    promotionPrice?: FloatNullableWithAggregatesFilter<"Promotion"> | number | null
    attributes?: StringNullableListFilter<"Promotion">
    ovocieAZeleninyId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    grilovanieId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    pecivoId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    masoRybyALahodkyId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    trvanlivePotravinyId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    mrazenePotravinyId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    napojeId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    alkoholId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    starostlivostODomacnostId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
    zdravieAKrasaId?: IntNullableWithAggregatesFilter<"Promotion"> | number | null
  }

  export type UpdateSettingsWhereInput = {
    AND?: UpdateSettingsWhereInput | UpdateSettingsWhereInput[]
    OR?: UpdateSettingsWhereInput[]
    NOT?: UpdateSettingsWhereInput | UpdateSettingsWhereInput[]
    id?: IntFilter<"UpdateSettings"> | number
    xCsrfToken?: StringFilter<"UpdateSettings"> | string
    cookie?: StringFilter<"UpdateSettings"> | string
    updatedAt?: DateTimeFilter<"UpdateSettings"> | Date | string
  }

  export type UpdateSettingsOrderByWithRelationInput = {
    id?: SortOrder
    xCsrfToken?: SortOrder
    cookie?: SortOrder
    updatedAt?: SortOrder
  }

  export type UpdateSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: UpdateSettingsWhereInput | UpdateSettingsWhereInput[]
    OR?: UpdateSettingsWhereInput[]
    NOT?: UpdateSettingsWhereInput | UpdateSettingsWhereInput[]
    xCsrfToken?: StringFilter<"UpdateSettings"> | string
    cookie?: StringFilter<"UpdateSettings"> | string
    updatedAt?: DateTimeFilter<"UpdateSettings"> | Date | string
  }, "id">

  export type UpdateSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    xCsrfToken?: SortOrder
    cookie?: SortOrder
    updatedAt?: SortOrder
    _count?: UpdateSettingsCountOrderByAggregateInput
    _avg?: UpdateSettingsAvgOrderByAggregateInput
    _max?: UpdateSettingsMaxOrderByAggregateInput
    _min?: UpdateSettingsMinOrderByAggregateInput
    _sum?: UpdateSettingsSumOrderByAggregateInput
  }

  export type UpdateSettingsScalarWhereWithAggregatesInput = {
    AND?: UpdateSettingsScalarWhereWithAggregatesInput | UpdateSettingsScalarWhereWithAggregatesInput[]
    OR?: UpdateSettingsScalarWhereWithAggregatesInput[]
    NOT?: UpdateSettingsScalarWhereWithAggregatesInput | UpdateSettingsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"UpdateSettings"> | number
    xCsrfToken?: StringWithAggregatesFilter<"UpdateSettings"> | string
    cookie?: StringWithAggregatesFilter<"UpdateSettings"> | string
    updatedAt?: DateTimeWithAggregatesFilter<"UpdateSettings"> | Date | string
  }

  export type ShoppingListWhereInput = {
    AND?: ShoppingListWhereInput | ShoppingListWhereInput[]
    OR?: ShoppingListWhereInput[]
    NOT?: ShoppingListWhereInput | ShoppingListWhereInput[]
    id?: IntFilter<"ShoppingList"> | number
    name?: StringFilter<"ShoppingList"> | string
    userId?: StringFilter<"ShoppingList"> | string
    createdAt?: DateTimeFilter<"ShoppingList"> | Date | string
    updatedAt?: DateTimeFilter<"ShoppingList"> | Date | string
    shared?: BoolFilter<"ShoppingList"> | boolean
    sharedUrlId?: StringNullableFilter<"ShoppingList"> | string | null
    items?: ShoppingListItemListRelationFilter
  }

  export type ShoppingListOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shared?: SortOrder
    sharedUrlId?: SortOrderInput | SortOrder
    items?: ShoppingListItemOrderByRelationAggregateInput
  }

  export type ShoppingListWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    sharedUrlId?: string
    AND?: ShoppingListWhereInput | ShoppingListWhereInput[]
    OR?: ShoppingListWhereInput[]
    NOT?: ShoppingListWhereInput | ShoppingListWhereInput[]
    name?: StringFilter<"ShoppingList"> | string
    userId?: StringFilter<"ShoppingList"> | string
    createdAt?: DateTimeFilter<"ShoppingList"> | Date | string
    updatedAt?: DateTimeFilter<"ShoppingList"> | Date | string
    shared?: BoolFilter<"ShoppingList"> | boolean
    items?: ShoppingListItemListRelationFilter
  }, "id" | "sharedUrlId">

  export type ShoppingListOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shared?: SortOrder
    sharedUrlId?: SortOrderInput | SortOrder
    _count?: ShoppingListCountOrderByAggregateInput
    _avg?: ShoppingListAvgOrderByAggregateInput
    _max?: ShoppingListMaxOrderByAggregateInput
    _min?: ShoppingListMinOrderByAggregateInput
    _sum?: ShoppingListSumOrderByAggregateInput
  }

  export type ShoppingListScalarWhereWithAggregatesInput = {
    AND?: ShoppingListScalarWhereWithAggregatesInput | ShoppingListScalarWhereWithAggregatesInput[]
    OR?: ShoppingListScalarWhereWithAggregatesInput[]
    NOT?: ShoppingListScalarWhereWithAggregatesInput | ShoppingListScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ShoppingList"> | number
    name?: StringWithAggregatesFilter<"ShoppingList"> | string
    userId?: StringWithAggregatesFilter<"ShoppingList"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ShoppingList"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShoppingList"> | Date | string
    shared?: BoolWithAggregatesFilter<"ShoppingList"> | boolean
    sharedUrlId?: StringNullableWithAggregatesFilter<"ShoppingList"> | string | null
  }

  export type ShoppingListItemWhereInput = {
    AND?: ShoppingListItemWhereInput | ShoppingListItemWhereInput[]
    OR?: ShoppingListItemWhereInput[]
    NOT?: ShoppingListItemWhereInput | ShoppingListItemWhereInput[]
    id?: IntFilter<"ShoppingListItem"> | number
    shoppingListId?: IntFilter<"ShoppingListItem"> | number
    productId?: StringFilter<"ShoppingListItem"> | string
    quantity?: IntFilter<"ShoppingListItem"> | number
    category?: StringFilter<"ShoppingListItem"> | string
    createdAt?: DateTimeFilter<"ShoppingListItem"> | Date | string
    updatedAt?: DateTimeFilter<"ShoppingListItem"> | Date | string
    zdravieAKrasaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    ovocieAZeleninyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    grilovanieId?: IntNullableFilter<"ShoppingListItem"> | number | null
    starostlivostODomacnostId?: IntNullableFilter<"ShoppingListItem"> | number | null
    pecivoId?: IntNullableFilter<"ShoppingListItem"> | number | null
    masoRybyALahodkyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    trvanlivePotravinyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    mrazenePotravinyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    napojeId?: IntNullableFilter<"ShoppingListItem"> | number | null
    alkoholId?: IntNullableFilter<"ShoppingListItem"> | number | null
    shoppingList?: XOR<ShoppingListRelationFilter, ShoppingListWhereInput>
    ZdravieAKrasa?: XOR<ZdravieAKrasaNullableRelationFilter, ZdravieAKrasaWhereInput> | null
    OvocieAZeleniny?: XOR<OvocieAZeleninyNullableRelationFilter, OvocieAZeleninyWhereInput> | null
    Grilovanie?: XOR<GrilovanieNullableRelationFilter, GrilovanieWhereInput> | null
    StarostlivostODomacnost?: XOR<StarostlivostODomacnostNullableRelationFilter, StarostlivostODomacnostWhereInput> | null
    Pecivo?: XOR<PecivoNullableRelationFilter, PecivoWhereInput> | null
    MasoRybyALahodky?: XOR<MasoRybyALahodkyNullableRelationFilter, MasoRybyALahodkyWhereInput> | null
    MliecneVyrobkyAVajcia?: XOR<MliecneVyrobkyAVajciaNullableRelationFilter, MliecneVyrobkyAVajciaWhereInput> | null
    TrvanlivePotraviny?: XOR<TrvanlivePotravinyNullableRelationFilter, TrvanlivePotravinyWhereInput> | null
    SpecialnaAZdravaVyziva?: XOR<SpecialnaAZdravaVyzivaNullableRelationFilter, SpecialnaAZdravaVyzivaWhereInput> | null
    MrazenePotraviny?: XOR<MrazenePotravinyNullableRelationFilter, MrazenePotravinyWhereInput> | null
    Napoje?: XOR<NapojeNullableRelationFilter, NapojeWhereInput> | null
    Alkohol?: XOR<AlkoholNullableRelationFilter, AlkoholWhereInput> | null
  }

  export type ShoppingListItemOrderByWithRelationInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    zdravieAKrasaId?: SortOrderInput | SortOrder
    ovocieAZeleninyId?: SortOrderInput | SortOrder
    grilovanieId?: SortOrderInput | SortOrder
    starostlivostODomacnostId?: SortOrderInput | SortOrder
    pecivoId?: SortOrderInput | SortOrder
    masoRybyALahodkyId?: SortOrderInput | SortOrder
    mliecneVyrobkyAVajciaId?: SortOrderInput | SortOrder
    trvanlivePotravinyId?: SortOrderInput | SortOrder
    specialnaAZdravaVyzivaId?: SortOrderInput | SortOrder
    mrazenePotravinyId?: SortOrderInput | SortOrder
    napojeId?: SortOrderInput | SortOrder
    alkoholId?: SortOrderInput | SortOrder
    shoppingList?: ShoppingListOrderByWithRelationInput
    ZdravieAKrasa?: ZdravieAKrasaOrderByWithRelationInput
    OvocieAZeleniny?: OvocieAZeleninyOrderByWithRelationInput
    Grilovanie?: GrilovanieOrderByWithRelationInput
    StarostlivostODomacnost?: StarostlivostODomacnostOrderByWithRelationInput
    Pecivo?: PecivoOrderByWithRelationInput
    MasoRybyALahodky?: MasoRybyALahodkyOrderByWithRelationInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaOrderByWithRelationInput
    TrvanlivePotraviny?: TrvanlivePotravinyOrderByWithRelationInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaOrderByWithRelationInput
    MrazenePotraviny?: MrazenePotravinyOrderByWithRelationInput
    Napoje?: NapojeOrderByWithRelationInput
    Alkohol?: AlkoholOrderByWithRelationInput
  }

  export type ShoppingListItemWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    shoppingListId_productId?: ShoppingListItemShoppingListIdProductIdCompoundUniqueInput
    AND?: ShoppingListItemWhereInput | ShoppingListItemWhereInput[]
    OR?: ShoppingListItemWhereInput[]
    NOT?: ShoppingListItemWhereInput | ShoppingListItemWhereInput[]
    shoppingListId?: IntFilter<"ShoppingListItem"> | number
    productId?: StringFilter<"ShoppingListItem"> | string
    quantity?: IntFilter<"ShoppingListItem"> | number
    category?: StringFilter<"ShoppingListItem"> | string
    createdAt?: DateTimeFilter<"ShoppingListItem"> | Date | string
    updatedAt?: DateTimeFilter<"ShoppingListItem"> | Date | string
    zdravieAKrasaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    ovocieAZeleninyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    grilovanieId?: IntNullableFilter<"ShoppingListItem"> | number | null
    starostlivostODomacnostId?: IntNullableFilter<"ShoppingListItem"> | number | null
    pecivoId?: IntNullableFilter<"ShoppingListItem"> | number | null
    masoRybyALahodkyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    trvanlivePotravinyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    mrazenePotravinyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    napojeId?: IntNullableFilter<"ShoppingListItem"> | number | null
    alkoholId?: IntNullableFilter<"ShoppingListItem"> | number | null
    shoppingList?: XOR<ShoppingListRelationFilter, ShoppingListWhereInput>
    ZdravieAKrasa?: XOR<ZdravieAKrasaNullableRelationFilter, ZdravieAKrasaWhereInput> | null
    OvocieAZeleniny?: XOR<OvocieAZeleninyNullableRelationFilter, OvocieAZeleninyWhereInput> | null
    Grilovanie?: XOR<GrilovanieNullableRelationFilter, GrilovanieWhereInput> | null
    StarostlivostODomacnost?: XOR<StarostlivostODomacnostNullableRelationFilter, StarostlivostODomacnostWhereInput> | null
    Pecivo?: XOR<PecivoNullableRelationFilter, PecivoWhereInput> | null
    MasoRybyALahodky?: XOR<MasoRybyALahodkyNullableRelationFilter, MasoRybyALahodkyWhereInput> | null
    MliecneVyrobkyAVajcia?: XOR<MliecneVyrobkyAVajciaNullableRelationFilter, MliecneVyrobkyAVajciaWhereInput> | null
    TrvanlivePotraviny?: XOR<TrvanlivePotravinyNullableRelationFilter, TrvanlivePotravinyWhereInput> | null
    SpecialnaAZdravaVyziva?: XOR<SpecialnaAZdravaVyzivaNullableRelationFilter, SpecialnaAZdravaVyzivaWhereInput> | null
    MrazenePotraviny?: XOR<MrazenePotravinyNullableRelationFilter, MrazenePotravinyWhereInput> | null
    Napoje?: XOR<NapojeNullableRelationFilter, NapojeWhereInput> | null
    Alkohol?: XOR<AlkoholNullableRelationFilter, AlkoholWhereInput> | null
  }, "id" | "shoppingListId_productId">

  export type ShoppingListItemOrderByWithAggregationInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    zdravieAKrasaId?: SortOrderInput | SortOrder
    ovocieAZeleninyId?: SortOrderInput | SortOrder
    grilovanieId?: SortOrderInput | SortOrder
    starostlivostODomacnostId?: SortOrderInput | SortOrder
    pecivoId?: SortOrderInput | SortOrder
    masoRybyALahodkyId?: SortOrderInput | SortOrder
    mliecneVyrobkyAVajciaId?: SortOrderInput | SortOrder
    trvanlivePotravinyId?: SortOrderInput | SortOrder
    specialnaAZdravaVyzivaId?: SortOrderInput | SortOrder
    mrazenePotravinyId?: SortOrderInput | SortOrder
    napojeId?: SortOrderInput | SortOrder
    alkoholId?: SortOrderInput | SortOrder
    _count?: ShoppingListItemCountOrderByAggregateInput
    _avg?: ShoppingListItemAvgOrderByAggregateInput
    _max?: ShoppingListItemMaxOrderByAggregateInput
    _min?: ShoppingListItemMinOrderByAggregateInput
    _sum?: ShoppingListItemSumOrderByAggregateInput
  }

  export type ShoppingListItemScalarWhereWithAggregatesInput = {
    AND?: ShoppingListItemScalarWhereWithAggregatesInput | ShoppingListItemScalarWhereWithAggregatesInput[]
    OR?: ShoppingListItemScalarWhereWithAggregatesInput[]
    NOT?: ShoppingListItemScalarWhereWithAggregatesInput | ShoppingListItemScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"ShoppingListItem"> | number
    shoppingListId?: IntWithAggregatesFilter<"ShoppingListItem"> | number
    productId?: StringWithAggregatesFilter<"ShoppingListItem"> | string
    quantity?: IntWithAggregatesFilter<"ShoppingListItem"> | number
    category?: StringWithAggregatesFilter<"ShoppingListItem"> | string
    createdAt?: DateTimeWithAggregatesFilter<"ShoppingListItem"> | Date | string
    updatedAt?: DateTimeWithAggregatesFilter<"ShoppingListItem"> | Date | string
    zdravieAKrasaId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    ovocieAZeleninyId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    grilovanieId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    starostlivostODomacnostId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    pecivoId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    masoRybyALahodkyId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    trvanlivePotravinyId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    mrazenePotravinyId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    napojeId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
    alkoholId?: IntNullableWithAggregatesFilter<"ShoppingListItem"> | number | null
  }

  export type FavoriteCreateInput = {
    userId: string
    productId: string
    category: string
    createdAt?: Date | string
  }

  export type FavoriteUncheckedCreateInput = {
    id?: number
    userId: string
    productId: string
    category: string
    createdAt?: Date | string
  }

  export type FavoriteUpdateInput = {
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteCreateManyInput = {
    id?: number
    userId: string
    productId: string
    category: string
    createdAt?: Date | string
  }

  export type FavoriteUpdateManyMutationInput = {
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type FavoriteUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAnalyticsCreateInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsCreateManyInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
  }

  export type ProductAnalyticsUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ProductAnalyticsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ZdravieAKrasaCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionCreateNestedManyWithoutZdravieAKrasaInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutZdravieAKrasaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutZdravieAKrasaInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUpdateManyWithoutZdravieAKrasaNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutZdravieAKrasaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type ZdravieAKrasaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutZdravieAKrasaNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type ZdravieAKrasaCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
  }

  export type ZdravieAKrasaUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ZdravieAKrasaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OvocieAZeleninyCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionCreateNestedManyWithoutOvocieAZeleninyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutOvocieAZeleninyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutOvocieAZeleninyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUpdateManyWithoutOvocieAZeleninyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutOvocieAZeleninyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type OvocieAZeleninyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type OvocieAZeleninyCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
  }

  export type OvocieAZeleninyUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type OvocieAZeleninyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type GrilovanieCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutGrilovanieInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutGrilovanieInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutGrilovanieInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutGrilovanieNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutGrilovanieNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutGrilovanieNestedInput
  }

  export type GrilovanieUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutGrilovanieNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutGrilovanieNestedInput
  }

  export type GrilovanieCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type GrilovanieUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type GrilovanieUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type StarostlivostODomacnostCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutStarostlivostODomacnostInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutStarostlivostODomacnostInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutStarostlivostODomacnostNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutStarostlivostODomacnostNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type StarostlivostODomacnostUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type StarostlivostODomacnostCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type StarostlivostODomacnostUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StarostlivostODomacnostUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PecivoCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutPecivoInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutPecivoInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutPecivoInput
  }

  export type PecivoUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutPecivoInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutPecivoInput
  }

  export type PecivoUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutPecivoNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutPecivoNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutPecivoNestedInput
  }

  export type PecivoUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutPecivoNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutPecivoNestedInput
  }

  export type PecivoCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type PecivoUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PecivoUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MasoRybyALahodkyCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMasoRybyALahodkyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMasoRybyALahodkyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMasoRybyALahodkyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMasoRybyALahodkyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type MasoRybyALahodkyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type MasoRybyALahodkyCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type MasoRybyALahodkyUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MasoRybyALahodkyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MliecneVyrobkyAVajciaCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMliecneVyrobkyAVajciaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMliecneVyrobkyAVajciaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type MliecneVyrobkyAVajciaCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type MliecneVyrobkyAVajciaUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type TrvanlivePotravinyCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutTrvanlivePotravinyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutTrvanlivePotravinyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutTrvanlivePotravinyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutTrvanlivePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type TrvanlivePotravinyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type TrvanlivePotravinyCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type TrvanlivePotravinyUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TrvanlivePotravinyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type SpecialnaAZdravaVyzivaCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutSpecialnaAZdravaVyzivaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutSpecialnaAZdravaVyzivaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type SpecialnaAZdravaVyzivaCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type SpecialnaAZdravaVyzivaUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type MrazenePotravinyCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMrazenePotravinyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMrazenePotravinyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutMrazenePotravinyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMrazenePotravinyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMrazenePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type MrazenePotravinyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutMrazenePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type MrazenePotravinyCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type MrazenePotravinyUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MrazenePotravinyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type NapojeCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutNapojeInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutNapojeInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutNapojeInput
  }

  export type NapojeUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutNapojeInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutNapojeInput
  }

  export type NapojeUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutNapojeNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutNapojeNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutNapojeNestedInput
  }

  export type NapojeUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutNapojeNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutNapojeNestedInput
  }

  export type NapojeCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type NapojeUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NapojeUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type AlkoholCreateInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutAlkoholInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutAlkoholInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholUncheckedCreateInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutAlkoholInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutAlkoholNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutAlkoholNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutAlkoholNestedInput
  }

  export type AlkoholUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutAlkoholNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutAlkoholNestedInput
  }

  export type AlkoholCreateManyInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
  }

  export type AlkoholUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlkoholUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionUpdateInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionUpdateManyMutationInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
  }

  export type PromotionUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type UpdateSettingsCreateInput = {
    xCsrfToken: string
    cookie: string
    updatedAt?: Date | string
  }

  export type UpdateSettingsUncheckedCreateInput = {
    id?: number
    xCsrfToken: string
    cookie: string
    updatedAt?: Date | string
  }

  export type UpdateSettingsUpdateInput = {
    xCsrfToken?: StringFieldUpdateOperationsInput | string
    cookie?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UpdateSettingsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    xCsrfToken?: StringFieldUpdateOperationsInput | string
    cookie?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UpdateSettingsCreateManyInput = {
    id?: number
    xCsrfToken: string
    cookie: string
    updatedAt?: Date | string
  }

  export type UpdateSettingsUpdateManyMutationInput = {
    xCsrfToken?: StringFieldUpdateOperationsInput | string
    cookie?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type UpdateSettingsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    xCsrfToken?: StringFieldUpdateOperationsInput | string
    cookie?: StringFieldUpdateOperationsInput | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShoppingListCreateInput = {
    name: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shared?: boolean
    sharedUrlId?: string | null
    items?: ShoppingListItemCreateNestedManyWithoutShoppingListInput
  }

  export type ShoppingListUncheckedCreateInput = {
    id?: number
    name: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shared?: boolean
    sharedUrlId?: string | null
    items?: ShoppingListItemUncheckedCreateNestedManyWithoutShoppingListInput
  }

  export type ShoppingListUpdateInput = {
    name?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shared?: BoolFieldUpdateOperationsInput | boolean
    sharedUrlId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: ShoppingListItemUpdateManyWithoutShoppingListNestedInput
  }

  export type ShoppingListUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shared?: BoolFieldUpdateOperationsInput | boolean
    sharedUrlId?: NullableStringFieldUpdateOperationsInput | string | null
    items?: ShoppingListItemUncheckedUpdateManyWithoutShoppingListNestedInput
  }

  export type ShoppingListCreateManyInput = {
    id?: number
    name: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shared?: boolean
    sharedUrlId?: string | null
  }

  export type ShoppingListUpdateManyMutationInput = {
    name?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shared?: BoolFieldUpdateOperationsInput | boolean
    sharedUrlId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShoppingListUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shared?: BoolFieldUpdateOperationsInput | boolean
    sharedUrlId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShoppingListItemCreateInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemUpdateInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemCreateManyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemUpdateManyMutationInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ShoppingListItemUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type FavoriteCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type FavoriteMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
  }

  export type FavoriteSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type OvocieAZeleninyListRelationFilter = {
    every?: OvocieAZeleninyWhereInput
    some?: OvocieAZeleninyWhereInput
    none?: OvocieAZeleninyWhereInput
  }

  export type GrilovanieListRelationFilter = {
    every?: GrilovanieWhereInput
    some?: GrilovanieWhereInput
    none?: GrilovanieWhereInput
  }

  export type PecivoListRelationFilter = {
    every?: PecivoWhereInput
    some?: PecivoWhereInput
    none?: PecivoWhereInput
  }

  export type MasoRybyALahodkyListRelationFilter = {
    every?: MasoRybyALahodkyWhereInput
    some?: MasoRybyALahodkyWhereInput
    none?: MasoRybyALahodkyWhereInput
  }

  export type MliecneVyrobkyAVajciaListRelationFilter = {
    every?: MliecneVyrobkyAVajciaWhereInput
    some?: MliecneVyrobkyAVajciaWhereInput
    none?: MliecneVyrobkyAVajciaWhereInput
  }

  export type TrvanlivePotravinyListRelationFilter = {
    every?: TrvanlivePotravinyWhereInput
    some?: TrvanlivePotravinyWhereInput
    none?: TrvanlivePotravinyWhereInput
  }

  export type SpecialnaAZdravaVyzivaListRelationFilter = {
    every?: SpecialnaAZdravaVyzivaWhereInput
    some?: SpecialnaAZdravaVyzivaWhereInput
    none?: SpecialnaAZdravaVyzivaWhereInput
  }

  export type MrazenePotravinyListRelationFilter = {
    every?: MrazenePotravinyWhereInput
    some?: MrazenePotravinyWhereInput
    none?: MrazenePotravinyWhereInput
  }

  export type NapojeListRelationFilter = {
    every?: NapojeWhereInput
    some?: NapojeWhereInput
    none?: NapojeWhereInput
  }

  export type AlkoholListRelationFilter = {
    every?: AlkoholWhereInput
    some?: AlkoholWhereInput
    none?: AlkoholWhereInput
  }

  export type StarostlivostODomacnostListRelationFilter = {
    every?: StarostlivostODomacnostWhereInput
    some?: StarostlivostODomacnostWhereInput
    none?: StarostlivostODomacnostWhereInput
  }

  export type ZdravieAKrasaListRelationFilter = {
    every?: ZdravieAKrasaWhereInput
    some?: ZdravieAKrasaWhereInput
    none?: ZdravieAKrasaWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type OvocieAZeleninyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type GrilovanieOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PecivoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MasoRybyALahodkyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MliecneVyrobkyAVajciaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type TrvanlivePotravinyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SpecialnaAZdravaVyzivaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type MrazenePotravinyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type NapojeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type AlkoholOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type StarostlivostODomacnostOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ZdravieAKrasaOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductAnalyticsProductIdLastCalculatedCompoundUniqueInput = {
    productId: string
    lastCalculated: Date | string
  }

  export type ProductAnalyticsCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    isBuyRecommended?: SortOrder
    isOnSale?: SortOrder
    previousPrice?: SortOrder
    priceChangeStatus?: SortOrder
    averagePrice?: SortOrder
    medianPrice?: SortOrder
    priceStdDev?: SortOrder
    promotionImpact?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAnalyticsAvgOrderByAggregateInput = {
    id?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    previousPrice?: SortOrder
    averagePrice?: SortOrder
    medianPrice?: SortOrder
    priceStdDev?: SortOrder
    promotionImpact?: SortOrder
  }

  export type ProductAnalyticsMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    isBuyRecommended?: SortOrder
    isOnSale?: SortOrder
    previousPrice?: SortOrder
    priceChangeStatus?: SortOrder
    averagePrice?: SortOrder
    medianPrice?: SortOrder
    priceStdDev?: SortOrder
    promotionImpact?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAnalyticsMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    isBuyRecommended?: SortOrder
    isOnSale?: SortOrder
    previousPrice?: SortOrder
    priceChangeStatus?: SortOrder
    averagePrice?: SortOrder
    medianPrice?: SortOrder
    priceStdDev?: SortOrder
    promotionImpact?: SortOrder
    lastCalculated?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
  }

  export type ProductAnalyticsSumOrderByAggregateInput = {
    id?: SortOrder
    priceDrop?: SortOrder
    priceIncrease?: SortOrder
    percentageChange?: SortOrder
    previousPrice?: SortOrder
    averagePrice?: SortOrder
    medianPrice?: SortOrder
    priceStdDev?: SortOrder
    promotionImpact?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type PromotionListRelationFilter = {
    every?: PromotionWhereInput
    some?: PromotionWhereInput
    none?: PromotionWhereInput
  }

  export type ProductAnalyticsNullableRelationFilter = {
    is?: ProductAnalyticsWhereInput | null
    isNot?: ProductAnalyticsWhereInput | null
  }

  export type ShoppingListItemListRelationFilter = {
    every?: ShoppingListItemWhereInput
    some?: ShoppingListItemWhereInput
    none?: ShoppingListItemWhereInput
  }

  export type PromotionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ShoppingListItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ZdravieAKrasaProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type ZdravieAKrasaCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type ZdravieAKrasaAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type ZdravieAKrasaMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type ZdravieAKrasaMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type ZdravieAKrasaSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type OvocieAZeleninyProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type OvocieAZeleninyCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type OvocieAZeleninyAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type OvocieAZeleninyMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type OvocieAZeleninyMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type OvocieAZeleninySumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    analyticsId?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type GrilovanieProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type GrilovanieCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type GrilovanieAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type GrilovanieMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type GrilovanieMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type GrilovanieSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type StarostlivostODomacnostProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type StarostlivostODomacnostCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type StarostlivostODomacnostAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type StarostlivostODomacnostMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type StarostlivostODomacnostMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type StarostlivostODomacnostSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type PecivoProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type PecivoCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type PecivoAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type PecivoMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type PecivoMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type PecivoSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MasoRybyALahodkyProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type MasoRybyALahodkyCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MasoRybyALahodkyAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MasoRybyALahodkyMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MasoRybyALahodkyMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MasoRybyALahodkySumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MliecneVyrobkyAVajciaProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type MliecneVyrobkyAVajciaCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MliecneVyrobkyAVajciaAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MliecneVyrobkyAVajciaMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MliecneVyrobkyAVajciaMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MliecneVyrobkyAVajciaSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type TrvanlivePotravinyProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type TrvanlivePotravinyCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type TrvanlivePotravinyAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type TrvanlivePotravinyMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type TrvanlivePotravinyMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type TrvanlivePotravinySumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type SpecialnaAZdravaVyzivaProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type SpecialnaAZdravaVyzivaCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type SpecialnaAZdravaVyzivaAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type SpecialnaAZdravaVyzivaMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type SpecialnaAZdravaVyzivaMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type SpecialnaAZdravaVyzivaSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MrazenePotravinyProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type MrazenePotravinyCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MrazenePotravinyAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MrazenePotravinyMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MrazenePotravinyMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type MrazenePotravinySumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type NapojeProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type NapojeCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type NapojeAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type NapojeMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type NapojeMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type NapojeSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type AlkoholProductIdLastUpdatedCompoundUniqueInput = {
    productId: string
    lastUpdated: Date | string
  }

  export type AlkoholCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type AlkoholAvgOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type AlkoholMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type AlkoholMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    title?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    imageUrl?: SortOrder
    unitOfMeasure?: SortOrder
    isForSale?: SortOrder
    aisleName?: SortOrder
    lastUpdated?: SortOrder
    category?: SortOrder
    superDepartmentName?: SortOrder
    hasPromotions?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type AlkoholSumOrderByAggregateInput = {
    id?: SortOrder
    price?: SortOrder
    unitPrice?: SortOrder
    productAnalyticsId?: SortOrder
  }

  export type StringNullableListFilter<$PrismaModel = never> = {
    equals?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    has?: string | StringFieldRefInput<$PrismaModel> | null
    hasEvery?: string[] | ListStringFieldRefInput<$PrismaModel>
    hasSome?: string[] | ListStringFieldRefInput<$PrismaModel>
    isEmpty?: boolean
  }

  export type OvocieAZeleninyNullableRelationFilter = {
    is?: OvocieAZeleninyWhereInput | null
    isNot?: OvocieAZeleninyWhereInput | null
  }

  export type GrilovanieNullableRelationFilter = {
    is?: GrilovanieWhereInput | null
    isNot?: GrilovanieWhereInput | null
  }

  export type MliecneVyrobkyAVajciaNullableRelationFilter = {
    is?: MliecneVyrobkyAVajciaWhereInput | null
    isNot?: MliecneVyrobkyAVajciaWhereInput | null
  }

  export type PecivoNullableRelationFilter = {
    is?: PecivoWhereInput | null
    isNot?: PecivoWhereInput | null
  }

  export type MasoRybyALahodkyNullableRelationFilter = {
    is?: MasoRybyALahodkyWhereInput | null
    isNot?: MasoRybyALahodkyWhereInput | null
  }

  export type TrvanlivePotravinyNullableRelationFilter = {
    is?: TrvanlivePotravinyWhereInput | null
    isNot?: TrvanlivePotravinyWhereInput | null
  }

  export type SpecialnaAZdravaVyzivaNullableRelationFilter = {
    is?: SpecialnaAZdravaVyzivaWhereInput | null
    isNot?: SpecialnaAZdravaVyzivaWhereInput | null
  }

  export type MrazenePotravinyNullableRelationFilter = {
    is?: MrazenePotravinyWhereInput | null
    isNot?: MrazenePotravinyWhereInput | null
  }

  export type NapojeNullableRelationFilter = {
    is?: NapojeWhereInput | null
    isNot?: NapojeWhereInput | null
  }

  export type AlkoholNullableRelationFilter = {
    is?: AlkoholWhereInput | null
    isNot?: AlkoholWhereInput | null
  }

  export type StarostlivostODomacnostNullableRelationFilter = {
    is?: StarostlivostODomacnostWhereInput | null
    isNot?: StarostlivostODomacnostWhereInput | null
  }

  export type ZdravieAKrasaNullableRelationFilter = {
    is?: ZdravieAKrasaWhereInput | null
    isNot?: ZdravieAKrasaWhereInput | null
  }

  export type PromotionCountOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    offerText?: SortOrder
    promotionPrice?: SortOrder
    attributes?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    zdravieAKrasaId?: SortOrder
  }

  export type PromotionAvgOrderByAggregateInput = {
    id?: SortOrder
    promotionPrice?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    zdravieAKrasaId?: SortOrder
  }

  export type PromotionMaxOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    offerText?: SortOrder
    promotionPrice?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    zdravieAKrasaId?: SortOrder
  }

  export type PromotionMinOrderByAggregateInput = {
    id?: SortOrder
    promotionId?: SortOrder
    promotionType?: SortOrder
    startDate?: SortOrder
    endDate?: SortOrder
    offerText?: SortOrder
    promotionPrice?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    zdravieAKrasaId?: SortOrder
  }

  export type PromotionSumOrderByAggregateInput = {
    id?: SortOrder
    promotionPrice?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    zdravieAKrasaId?: SortOrder
  }

  export type UpdateSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    xCsrfToken?: SortOrder
    cookie?: SortOrder
    updatedAt?: SortOrder
  }

  export type UpdateSettingsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UpdateSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    xCsrfToken?: SortOrder
    cookie?: SortOrder
    updatedAt?: SortOrder
  }

  export type UpdateSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    xCsrfToken?: SortOrder
    cookie?: SortOrder
    updatedAt?: SortOrder
  }

  export type UpdateSettingsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type ShoppingListCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shared?: SortOrder
    sharedUrlId?: SortOrder
  }

  export type ShoppingListAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type ShoppingListMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shared?: SortOrder
    sharedUrlId?: SortOrder
  }

  export type ShoppingListMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    userId?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    shared?: SortOrder
    sharedUrlId?: SortOrder
  }

  export type ShoppingListSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type ShoppingListRelationFilter = {
    is?: ShoppingListWhereInput
    isNot?: ShoppingListWhereInput
  }

  export type ShoppingListItemShoppingListIdProductIdCompoundUniqueInput = {
    shoppingListId: number
    productId: string
  }

  export type ShoppingListItemCountOrderByAggregateInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    zdravieAKrasaId?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
  }

  export type ShoppingListItemAvgOrderByAggregateInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    quantity?: SortOrder
    zdravieAKrasaId?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
  }

  export type ShoppingListItemMaxOrderByAggregateInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    zdravieAKrasaId?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
  }

  export type ShoppingListItemMinOrderByAggregateInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    productId?: SortOrder
    quantity?: SortOrder
    category?: SortOrder
    createdAt?: SortOrder
    updatedAt?: SortOrder
    zdravieAKrasaId?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
  }

  export type ShoppingListItemSumOrderByAggregateInput = {
    id?: SortOrder
    shoppingListId?: SortOrder
    quantity?: SortOrder
    zdravieAKrasaId?: SortOrder
    ovocieAZeleninyId?: SortOrder
    grilovanieId?: SortOrder
    starostlivostODomacnostId?: SortOrder
    pecivoId?: SortOrder
    masoRybyALahodkyId?: SortOrder
    mliecneVyrobkyAVajciaId?: SortOrder
    trvanlivePotravinyId?: SortOrder
    specialnaAZdravaVyzivaId?: SortOrder
    mrazenePotravinyId?: SortOrder
    napojeId?: SortOrder
    alkoholId?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput> | OvocieAZeleninyCreateWithoutProductAnalyticsInput[] | OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput | OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: OvocieAZeleninyCreateManyProductAnalyticsInputEnvelope
    connect?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
  }

  export type GrilovanieCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<GrilovanieCreateWithoutProductAnalyticsInput, GrilovanieUncheckedCreateWithoutProductAnalyticsInput> | GrilovanieCreateWithoutProductAnalyticsInput[] | GrilovanieUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: GrilovanieCreateOrConnectWithoutProductAnalyticsInput | GrilovanieCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: GrilovanieCreateManyProductAnalyticsInputEnvelope
    connect?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
  }

  export type PecivoCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<PecivoCreateWithoutProductAnalyticsInput, PecivoUncheckedCreateWithoutProductAnalyticsInput> | PecivoCreateWithoutProductAnalyticsInput[] | PecivoUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: PecivoCreateOrConnectWithoutProductAnalyticsInput | PecivoCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: PecivoCreateManyProductAnalyticsInputEnvelope
    connect?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
  }

  export type MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput> | MasoRybyALahodkyCreateWithoutProductAnalyticsInput[] | MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput | MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: MasoRybyALahodkyCreateManyProductAnalyticsInputEnvelope
    connect?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
  }

  export type MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput> | MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput[] | MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: MliecneVyrobkyAVajciaCreateManyProductAnalyticsInputEnvelope
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
  }

  export type TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput> | TrvanlivePotravinyCreateWithoutProductAnalyticsInput[] | TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput | TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: TrvanlivePotravinyCreateManyProductAnalyticsInputEnvelope
    connect?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
  }

  export type SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput> | SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput[] | SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInputEnvelope
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
  }

  export type MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<MrazenePotravinyCreateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput> | MrazenePotravinyCreateWithoutProductAnalyticsInput[] | MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput | MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: MrazenePotravinyCreateManyProductAnalyticsInputEnvelope
    connect?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
  }

  export type NapojeCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<NapojeCreateWithoutProductAnalyticsInput, NapojeUncheckedCreateWithoutProductAnalyticsInput> | NapojeCreateWithoutProductAnalyticsInput[] | NapojeUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: NapojeCreateOrConnectWithoutProductAnalyticsInput | NapojeCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: NapojeCreateManyProductAnalyticsInputEnvelope
    connect?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
  }

  export type AlkoholCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<AlkoholCreateWithoutProductAnalyticsInput, AlkoholUncheckedCreateWithoutProductAnalyticsInput> | AlkoholCreateWithoutProductAnalyticsInput[] | AlkoholUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: AlkoholCreateOrConnectWithoutProductAnalyticsInput | AlkoholCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: AlkoholCreateManyProductAnalyticsInputEnvelope
    connect?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
  }

  export type StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput> | StarostlivostODomacnostCreateWithoutProductAnalyticsInput[] | StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput | StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: StarostlivostODomacnostCreateManyProductAnalyticsInputEnvelope
    connect?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
  }

  export type ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput> | ZdravieAKrasaCreateWithoutProductAnalyticsInput[] | ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput | ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: ZdravieAKrasaCreateManyProductAnalyticsInputEnvelope
    connect?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
  }

  export type OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput> | OvocieAZeleninyCreateWithoutProductAnalyticsInput[] | OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput | OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: OvocieAZeleninyCreateManyProductAnalyticsInputEnvelope
    connect?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
  }

  export type GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<GrilovanieCreateWithoutProductAnalyticsInput, GrilovanieUncheckedCreateWithoutProductAnalyticsInput> | GrilovanieCreateWithoutProductAnalyticsInput[] | GrilovanieUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: GrilovanieCreateOrConnectWithoutProductAnalyticsInput | GrilovanieCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: GrilovanieCreateManyProductAnalyticsInputEnvelope
    connect?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
  }

  export type PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<PecivoCreateWithoutProductAnalyticsInput, PecivoUncheckedCreateWithoutProductAnalyticsInput> | PecivoCreateWithoutProductAnalyticsInput[] | PecivoUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: PecivoCreateOrConnectWithoutProductAnalyticsInput | PecivoCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: PecivoCreateManyProductAnalyticsInputEnvelope
    connect?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
  }

  export type MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput> | MasoRybyALahodkyCreateWithoutProductAnalyticsInput[] | MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput | MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: MasoRybyALahodkyCreateManyProductAnalyticsInputEnvelope
    connect?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
  }

  export type MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput> | MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput[] | MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: MliecneVyrobkyAVajciaCreateManyProductAnalyticsInputEnvelope
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
  }

  export type TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput> | TrvanlivePotravinyCreateWithoutProductAnalyticsInput[] | TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput | TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: TrvanlivePotravinyCreateManyProductAnalyticsInputEnvelope
    connect?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
  }

  export type SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput> | SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput[] | SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInputEnvelope
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
  }

  export type MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<MrazenePotravinyCreateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput> | MrazenePotravinyCreateWithoutProductAnalyticsInput[] | MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput | MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: MrazenePotravinyCreateManyProductAnalyticsInputEnvelope
    connect?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
  }

  export type NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<NapojeCreateWithoutProductAnalyticsInput, NapojeUncheckedCreateWithoutProductAnalyticsInput> | NapojeCreateWithoutProductAnalyticsInput[] | NapojeUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: NapojeCreateOrConnectWithoutProductAnalyticsInput | NapojeCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: NapojeCreateManyProductAnalyticsInputEnvelope
    connect?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
  }

  export type AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<AlkoholCreateWithoutProductAnalyticsInput, AlkoholUncheckedCreateWithoutProductAnalyticsInput> | AlkoholCreateWithoutProductAnalyticsInput[] | AlkoholUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: AlkoholCreateOrConnectWithoutProductAnalyticsInput | AlkoholCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: AlkoholCreateManyProductAnalyticsInputEnvelope
    connect?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
  }

  export type StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput> | StarostlivostODomacnostCreateWithoutProductAnalyticsInput[] | StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput | StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: StarostlivostODomacnostCreateManyProductAnalyticsInputEnvelope
    connect?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
  }

  export type ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput> | ZdravieAKrasaCreateWithoutProductAnalyticsInput[] | ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput | ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput[]
    createMany?: ZdravieAKrasaCreateManyProductAnalyticsInputEnvelope
    connect?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput> | OvocieAZeleninyCreateWithoutProductAnalyticsInput[] | OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput | OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: OvocieAZeleninyUpsertWithWhereUniqueWithoutProductAnalyticsInput | OvocieAZeleninyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: OvocieAZeleninyCreateManyProductAnalyticsInputEnvelope
    set?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    disconnect?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    delete?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    connect?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    update?: OvocieAZeleninyUpdateWithWhereUniqueWithoutProductAnalyticsInput | OvocieAZeleninyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: OvocieAZeleninyUpdateManyWithWhereWithoutProductAnalyticsInput | OvocieAZeleninyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: OvocieAZeleninyScalarWhereInput | OvocieAZeleninyScalarWhereInput[]
  }

  export type GrilovanieUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<GrilovanieCreateWithoutProductAnalyticsInput, GrilovanieUncheckedCreateWithoutProductAnalyticsInput> | GrilovanieCreateWithoutProductAnalyticsInput[] | GrilovanieUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: GrilovanieCreateOrConnectWithoutProductAnalyticsInput | GrilovanieCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: GrilovanieUpsertWithWhereUniqueWithoutProductAnalyticsInput | GrilovanieUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: GrilovanieCreateManyProductAnalyticsInputEnvelope
    set?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    disconnect?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    delete?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    connect?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    update?: GrilovanieUpdateWithWhereUniqueWithoutProductAnalyticsInput | GrilovanieUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: GrilovanieUpdateManyWithWhereWithoutProductAnalyticsInput | GrilovanieUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: GrilovanieScalarWhereInput | GrilovanieScalarWhereInput[]
  }

  export type PecivoUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<PecivoCreateWithoutProductAnalyticsInput, PecivoUncheckedCreateWithoutProductAnalyticsInput> | PecivoCreateWithoutProductAnalyticsInput[] | PecivoUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: PecivoCreateOrConnectWithoutProductAnalyticsInput | PecivoCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: PecivoUpsertWithWhereUniqueWithoutProductAnalyticsInput | PecivoUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: PecivoCreateManyProductAnalyticsInputEnvelope
    set?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    disconnect?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    delete?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    connect?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    update?: PecivoUpdateWithWhereUniqueWithoutProductAnalyticsInput | PecivoUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: PecivoUpdateManyWithWhereWithoutProductAnalyticsInput | PecivoUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: PecivoScalarWhereInput | PecivoScalarWhereInput[]
  }

  export type MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput> | MasoRybyALahodkyCreateWithoutProductAnalyticsInput[] | MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput | MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: MasoRybyALahodkyUpsertWithWhereUniqueWithoutProductAnalyticsInput | MasoRybyALahodkyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: MasoRybyALahodkyCreateManyProductAnalyticsInputEnvelope
    set?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    disconnect?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    delete?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    connect?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    update?: MasoRybyALahodkyUpdateWithWhereUniqueWithoutProductAnalyticsInput | MasoRybyALahodkyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: MasoRybyALahodkyUpdateManyWithWhereWithoutProductAnalyticsInput | MasoRybyALahodkyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: MasoRybyALahodkyScalarWhereInput | MasoRybyALahodkyScalarWhereInput[]
  }

  export type MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput> | MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput[] | MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: MliecneVyrobkyAVajciaUpsertWithWhereUniqueWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: MliecneVyrobkyAVajciaCreateManyProductAnalyticsInputEnvelope
    set?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    disconnect?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    delete?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    update?: MliecneVyrobkyAVajciaUpdateWithWhereUniqueWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: MliecneVyrobkyAVajciaUpdateManyWithWhereWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: MliecneVyrobkyAVajciaScalarWhereInput | MliecneVyrobkyAVajciaScalarWhereInput[]
  }

  export type TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput> | TrvanlivePotravinyCreateWithoutProductAnalyticsInput[] | TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput | TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: TrvanlivePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput | TrvanlivePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: TrvanlivePotravinyCreateManyProductAnalyticsInputEnvelope
    set?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    disconnect?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    delete?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    connect?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    update?: TrvanlivePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput | TrvanlivePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: TrvanlivePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput | TrvanlivePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: TrvanlivePotravinyScalarWhereInput | TrvanlivePotravinyScalarWhereInput[]
  }

  export type SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput> | SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput[] | SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: SpecialnaAZdravaVyzivaUpsertWithWhereUniqueWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInputEnvelope
    set?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    disconnect?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    delete?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    update?: SpecialnaAZdravaVyzivaUpdateWithWhereUniqueWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: SpecialnaAZdravaVyzivaUpdateManyWithWhereWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: SpecialnaAZdravaVyzivaScalarWhereInput | SpecialnaAZdravaVyzivaScalarWhereInput[]
  }

  export type MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<MrazenePotravinyCreateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput> | MrazenePotravinyCreateWithoutProductAnalyticsInput[] | MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput | MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: MrazenePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput | MrazenePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: MrazenePotravinyCreateManyProductAnalyticsInputEnvelope
    set?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    disconnect?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    delete?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    connect?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    update?: MrazenePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput | MrazenePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: MrazenePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput | MrazenePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: MrazenePotravinyScalarWhereInput | MrazenePotravinyScalarWhereInput[]
  }

  export type NapojeUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<NapojeCreateWithoutProductAnalyticsInput, NapojeUncheckedCreateWithoutProductAnalyticsInput> | NapojeCreateWithoutProductAnalyticsInput[] | NapojeUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: NapojeCreateOrConnectWithoutProductAnalyticsInput | NapojeCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: NapojeUpsertWithWhereUniqueWithoutProductAnalyticsInput | NapojeUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: NapojeCreateManyProductAnalyticsInputEnvelope
    set?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    disconnect?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    delete?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    connect?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    update?: NapojeUpdateWithWhereUniqueWithoutProductAnalyticsInput | NapojeUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: NapojeUpdateManyWithWhereWithoutProductAnalyticsInput | NapojeUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: NapojeScalarWhereInput | NapojeScalarWhereInput[]
  }

  export type AlkoholUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<AlkoholCreateWithoutProductAnalyticsInput, AlkoholUncheckedCreateWithoutProductAnalyticsInput> | AlkoholCreateWithoutProductAnalyticsInput[] | AlkoholUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: AlkoholCreateOrConnectWithoutProductAnalyticsInput | AlkoholCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: AlkoholUpsertWithWhereUniqueWithoutProductAnalyticsInput | AlkoholUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: AlkoholCreateManyProductAnalyticsInputEnvelope
    set?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    disconnect?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    delete?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    connect?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    update?: AlkoholUpdateWithWhereUniqueWithoutProductAnalyticsInput | AlkoholUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: AlkoholUpdateManyWithWhereWithoutProductAnalyticsInput | AlkoholUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: AlkoholScalarWhereInput | AlkoholScalarWhereInput[]
  }

  export type StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput> | StarostlivostODomacnostCreateWithoutProductAnalyticsInput[] | StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput | StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: StarostlivostODomacnostUpsertWithWhereUniqueWithoutProductAnalyticsInput | StarostlivostODomacnostUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: StarostlivostODomacnostCreateManyProductAnalyticsInputEnvelope
    set?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    disconnect?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    delete?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    connect?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    update?: StarostlivostODomacnostUpdateWithWhereUniqueWithoutProductAnalyticsInput | StarostlivostODomacnostUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: StarostlivostODomacnostUpdateManyWithWhereWithoutProductAnalyticsInput | StarostlivostODomacnostUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: StarostlivostODomacnostScalarWhereInput | StarostlivostODomacnostScalarWhereInput[]
  }

  export type ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput> | ZdravieAKrasaCreateWithoutProductAnalyticsInput[] | ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput | ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: ZdravieAKrasaUpsertWithWhereUniqueWithoutProductAnalyticsInput | ZdravieAKrasaUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: ZdravieAKrasaCreateManyProductAnalyticsInputEnvelope
    set?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    disconnect?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    delete?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    connect?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    update?: ZdravieAKrasaUpdateWithWhereUniqueWithoutProductAnalyticsInput | ZdravieAKrasaUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: ZdravieAKrasaUpdateManyWithWhereWithoutProductAnalyticsInput | ZdravieAKrasaUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: ZdravieAKrasaScalarWhereInput | ZdravieAKrasaScalarWhereInput[]
  }

  export type OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput> | OvocieAZeleninyCreateWithoutProductAnalyticsInput[] | OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput | OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: OvocieAZeleninyUpsertWithWhereUniqueWithoutProductAnalyticsInput | OvocieAZeleninyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: OvocieAZeleninyCreateManyProductAnalyticsInputEnvelope
    set?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    disconnect?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    delete?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    connect?: OvocieAZeleninyWhereUniqueInput | OvocieAZeleninyWhereUniqueInput[]
    update?: OvocieAZeleninyUpdateWithWhereUniqueWithoutProductAnalyticsInput | OvocieAZeleninyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: OvocieAZeleninyUpdateManyWithWhereWithoutProductAnalyticsInput | OvocieAZeleninyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: OvocieAZeleninyScalarWhereInput | OvocieAZeleninyScalarWhereInput[]
  }

  export type GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<GrilovanieCreateWithoutProductAnalyticsInput, GrilovanieUncheckedCreateWithoutProductAnalyticsInput> | GrilovanieCreateWithoutProductAnalyticsInput[] | GrilovanieUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: GrilovanieCreateOrConnectWithoutProductAnalyticsInput | GrilovanieCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: GrilovanieUpsertWithWhereUniqueWithoutProductAnalyticsInput | GrilovanieUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: GrilovanieCreateManyProductAnalyticsInputEnvelope
    set?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    disconnect?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    delete?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    connect?: GrilovanieWhereUniqueInput | GrilovanieWhereUniqueInput[]
    update?: GrilovanieUpdateWithWhereUniqueWithoutProductAnalyticsInput | GrilovanieUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: GrilovanieUpdateManyWithWhereWithoutProductAnalyticsInput | GrilovanieUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: GrilovanieScalarWhereInput | GrilovanieScalarWhereInput[]
  }

  export type PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<PecivoCreateWithoutProductAnalyticsInput, PecivoUncheckedCreateWithoutProductAnalyticsInput> | PecivoCreateWithoutProductAnalyticsInput[] | PecivoUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: PecivoCreateOrConnectWithoutProductAnalyticsInput | PecivoCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: PecivoUpsertWithWhereUniqueWithoutProductAnalyticsInput | PecivoUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: PecivoCreateManyProductAnalyticsInputEnvelope
    set?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    disconnect?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    delete?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    connect?: PecivoWhereUniqueInput | PecivoWhereUniqueInput[]
    update?: PecivoUpdateWithWhereUniqueWithoutProductAnalyticsInput | PecivoUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: PecivoUpdateManyWithWhereWithoutProductAnalyticsInput | PecivoUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: PecivoScalarWhereInput | PecivoScalarWhereInput[]
  }

  export type MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput> | MasoRybyALahodkyCreateWithoutProductAnalyticsInput[] | MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput | MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: MasoRybyALahodkyUpsertWithWhereUniqueWithoutProductAnalyticsInput | MasoRybyALahodkyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: MasoRybyALahodkyCreateManyProductAnalyticsInputEnvelope
    set?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    disconnect?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    delete?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    connect?: MasoRybyALahodkyWhereUniqueInput | MasoRybyALahodkyWhereUniqueInput[]
    update?: MasoRybyALahodkyUpdateWithWhereUniqueWithoutProductAnalyticsInput | MasoRybyALahodkyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: MasoRybyALahodkyUpdateManyWithWhereWithoutProductAnalyticsInput | MasoRybyALahodkyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: MasoRybyALahodkyScalarWhereInput | MasoRybyALahodkyScalarWhereInput[]
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput> | MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput[] | MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: MliecneVyrobkyAVajciaUpsertWithWhereUniqueWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: MliecneVyrobkyAVajciaCreateManyProductAnalyticsInputEnvelope
    set?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    disconnect?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    delete?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput | MliecneVyrobkyAVajciaWhereUniqueInput[]
    update?: MliecneVyrobkyAVajciaUpdateWithWhereUniqueWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: MliecneVyrobkyAVajciaUpdateManyWithWhereWithoutProductAnalyticsInput | MliecneVyrobkyAVajciaUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: MliecneVyrobkyAVajciaScalarWhereInput | MliecneVyrobkyAVajciaScalarWhereInput[]
  }

  export type TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput> | TrvanlivePotravinyCreateWithoutProductAnalyticsInput[] | TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput | TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: TrvanlivePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput | TrvanlivePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: TrvanlivePotravinyCreateManyProductAnalyticsInputEnvelope
    set?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    disconnect?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    delete?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    connect?: TrvanlivePotravinyWhereUniqueInput | TrvanlivePotravinyWhereUniqueInput[]
    update?: TrvanlivePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput | TrvanlivePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: TrvanlivePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput | TrvanlivePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: TrvanlivePotravinyScalarWhereInput | TrvanlivePotravinyScalarWhereInput[]
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput> | SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput[] | SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: SpecialnaAZdravaVyzivaUpsertWithWhereUniqueWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInputEnvelope
    set?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    disconnect?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    delete?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput | SpecialnaAZdravaVyzivaWhereUniqueInput[]
    update?: SpecialnaAZdravaVyzivaUpdateWithWhereUniqueWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: SpecialnaAZdravaVyzivaUpdateManyWithWhereWithoutProductAnalyticsInput | SpecialnaAZdravaVyzivaUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: SpecialnaAZdravaVyzivaScalarWhereInput | SpecialnaAZdravaVyzivaScalarWhereInput[]
  }

  export type MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<MrazenePotravinyCreateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput> | MrazenePotravinyCreateWithoutProductAnalyticsInput[] | MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput | MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: MrazenePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput | MrazenePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: MrazenePotravinyCreateManyProductAnalyticsInputEnvelope
    set?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    disconnect?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    delete?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    connect?: MrazenePotravinyWhereUniqueInput | MrazenePotravinyWhereUniqueInput[]
    update?: MrazenePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput | MrazenePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: MrazenePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput | MrazenePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: MrazenePotravinyScalarWhereInput | MrazenePotravinyScalarWhereInput[]
  }

  export type NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<NapojeCreateWithoutProductAnalyticsInput, NapojeUncheckedCreateWithoutProductAnalyticsInput> | NapojeCreateWithoutProductAnalyticsInput[] | NapojeUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: NapojeCreateOrConnectWithoutProductAnalyticsInput | NapojeCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: NapojeUpsertWithWhereUniqueWithoutProductAnalyticsInput | NapojeUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: NapojeCreateManyProductAnalyticsInputEnvelope
    set?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    disconnect?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    delete?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    connect?: NapojeWhereUniqueInput | NapojeWhereUniqueInput[]
    update?: NapojeUpdateWithWhereUniqueWithoutProductAnalyticsInput | NapojeUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: NapojeUpdateManyWithWhereWithoutProductAnalyticsInput | NapojeUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: NapojeScalarWhereInput | NapojeScalarWhereInput[]
  }

  export type AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<AlkoholCreateWithoutProductAnalyticsInput, AlkoholUncheckedCreateWithoutProductAnalyticsInput> | AlkoholCreateWithoutProductAnalyticsInput[] | AlkoholUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: AlkoholCreateOrConnectWithoutProductAnalyticsInput | AlkoholCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: AlkoholUpsertWithWhereUniqueWithoutProductAnalyticsInput | AlkoholUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: AlkoholCreateManyProductAnalyticsInputEnvelope
    set?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    disconnect?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    delete?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    connect?: AlkoholWhereUniqueInput | AlkoholWhereUniqueInput[]
    update?: AlkoholUpdateWithWhereUniqueWithoutProductAnalyticsInput | AlkoholUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: AlkoholUpdateManyWithWhereWithoutProductAnalyticsInput | AlkoholUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: AlkoholScalarWhereInput | AlkoholScalarWhereInput[]
  }

  export type StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput> | StarostlivostODomacnostCreateWithoutProductAnalyticsInput[] | StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput | StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: StarostlivostODomacnostUpsertWithWhereUniqueWithoutProductAnalyticsInput | StarostlivostODomacnostUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: StarostlivostODomacnostCreateManyProductAnalyticsInputEnvelope
    set?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    disconnect?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    delete?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    connect?: StarostlivostODomacnostWhereUniqueInput | StarostlivostODomacnostWhereUniqueInput[]
    update?: StarostlivostODomacnostUpdateWithWhereUniqueWithoutProductAnalyticsInput | StarostlivostODomacnostUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: StarostlivostODomacnostUpdateManyWithWhereWithoutProductAnalyticsInput | StarostlivostODomacnostUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: StarostlivostODomacnostScalarWhereInput | StarostlivostODomacnostScalarWhereInput[]
  }

  export type ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput> | ZdravieAKrasaCreateWithoutProductAnalyticsInput[] | ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput[]
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput | ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput[]
    upsert?: ZdravieAKrasaUpsertWithWhereUniqueWithoutProductAnalyticsInput | ZdravieAKrasaUpsertWithWhereUniqueWithoutProductAnalyticsInput[]
    createMany?: ZdravieAKrasaCreateManyProductAnalyticsInputEnvelope
    set?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    disconnect?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    delete?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    connect?: ZdravieAKrasaWhereUniqueInput | ZdravieAKrasaWhereUniqueInput[]
    update?: ZdravieAKrasaUpdateWithWhereUniqueWithoutProductAnalyticsInput | ZdravieAKrasaUpdateWithWhereUniqueWithoutProductAnalyticsInput[]
    updateMany?: ZdravieAKrasaUpdateManyWithWhereWithoutProductAnalyticsInput | ZdravieAKrasaUpdateManyWithWhereWithoutProductAnalyticsInput[]
    deleteMany?: ZdravieAKrasaScalarWhereInput | ZdravieAKrasaScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutZdravieAKrasaInput = {
    create?: XOR<PromotionCreateWithoutZdravieAKrasaInput, PromotionUncheckedCreateWithoutZdravieAKrasaInput> | PromotionCreateWithoutZdravieAKrasaInput[] | PromotionUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutZdravieAKrasaInput | PromotionCreateOrConnectWithoutZdravieAKrasaInput[]
    createMany?: PromotionCreateManyZdravieAKrasaInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutZdravieAKrasaInput = {
    create?: XOR<ProductAnalyticsCreateWithoutZdravieAKrasaInput, ProductAnalyticsUncheckedCreateWithoutZdravieAKrasaInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutZdravieAKrasaInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutZdravieAKrasaInput = {
    create?: XOR<ShoppingListItemCreateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput> | ShoppingListItemCreateWithoutZdravieAKrasaInput[] | ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput | ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput[]
    createMany?: ShoppingListItemCreateManyZdravieAKrasaInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutZdravieAKrasaInput = {
    create?: XOR<PromotionCreateWithoutZdravieAKrasaInput, PromotionUncheckedCreateWithoutZdravieAKrasaInput> | PromotionCreateWithoutZdravieAKrasaInput[] | PromotionUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutZdravieAKrasaInput | PromotionCreateOrConnectWithoutZdravieAKrasaInput[]
    createMany?: PromotionCreateManyZdravieAKrasaInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutZdravieAKrasaInput = {
    create?: XOR<ShoppingListItemCreateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput> | ShoppingListItemCreateWithoutZdravieAKrasaInput[] | ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput | ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput[]
    createMany?: ShoppingListItemCreateManyZdravieAKrasaInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type PromotionUpdateManyWithoutZdravieAKrasaNestedInput = {
    create?: XOR<PromotionCreateWithoutZdravieAKrasaInput, PromotionUncheckedCreateWithoutZdravieAKrasaInput> | PromotionCreateWithoutZdravieAKrasaInput[] | PromotionUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutZdravieAKrasaInput | PromotionCreateOrConnectWithoutZdravieAKrasaInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutZdravieAKrasaInput | PromotionUpsertWithWhereUniqueWithoutZdravieAKrasaInput[]
    createMany?: PromotionCreateManyZdravieAKrasaInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutZdravieAKrasaInput | PromotionUpdateWithWhereUniqueWithoutZdravieAKrasaInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutZdravieAKrasaInput | PromotionUpdateManyWithWhereWithoutZdravieAKrasaInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutZdravieAKrasaNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutZdravieAKrasaInput, ProductAnalyticsUncheckedCreateWithoutZdravieAKrasaInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutZdravieAKrasaInput
    upsert?: ProductAnalyticsUpsertWithoutZdravieAKrasaInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutZdravieAKrasaInput, ProductAnalyticsUpdateWithoutZdravieAKrasaInput>, ProductAnalyticsUncheckedUpdateWithoutZdravieAKrasaInput>
  }

  export type ShoppingListItemUpdateManyWithoutZdravieAKrasaNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput> | ShoppingListItemCreateWithoutZdravieAKrasaInput[] | ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput | ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutZdravieAKrasaInput | ShoppingListItemUpsertWithWhereUniqueWithoutZdravieAKrasaInput[]
    createMany?: ShoppingListItemCreateManyZdravieAKrasaInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutZdravieAKrasaInput | ShoppingListItemUpdateWithWhereUniqueWithoutZdravieAKrasaInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutZdravieAKrasaInput | ShoppingListItemUpdateManyWithWhereWithoutZdravieAKrasaInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutZdravieAKrasaNestedInput = {
    create?: XOR<PromotionCreateWithoutZdravieAKrasaInput, PromotionUncheckedCreateWithoutZdravieAKrasaInput> | PromotionCreateWithoutZdravieAKrasaInput[] | PromotionUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutZdravieAKrasaInput | PromotionCreateOrConnectWithoutZdravieAKrasaInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutZdravieAKrasaInput | PromotionUpsertWithWhereUniqueWithoutZdravieAKrasaInput[]
    createMany?: PromotionCreateManyZdravieAKrasaInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutZdravieAKrasaInput | PromotionUpdateWithWhereUniqueWithoutZdravieAKrasaInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutZdravieAKrasaInput | PromotionUpdateManyWithWhereWithoutZdravieAKrasaInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutZdravieAKrasaNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput> | ShoppingListItemCreateWithoutZdravieAKrasaInput[] | ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput | ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutZdravieAKrasaInput | ShoppingListItemUpsertWithWhereUniqueWithoutZdravieAKrasaInput[]
    createMany?: ShoppingListItemCreateManyZdravieAKrasaInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutZdravieAKrasaInput | ShoppingListItemUpdateWithWhereUniqueWithoutZdravieAKrasaInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutZdravieAKrasaInput | ShoppingListItemUpdateManyWithWhereWithoutZdravieAKrasaInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutOvocieAZeleninyInput = {
    create?: XOR<PromotionCreateWithoutOvocieAZeleninyInput, PromotionUncheckedCreateWithoutOvocieAZeleninyInput> | PromotionCreateWithoutOvocieAZeleninyInput[] | PromotionUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutOvocieAZeleninyInput | PromotionCreateOrConnectWithoutOvocieAZeleninyInput[]
    createMany?: PromotionCreateManyOvocieAZeleninyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutOvocieAZeleninyInput = {
    create?: XOR<ProductAnalyticsCreateWithoutOvocieAZeleninyInput, ProductAnalyticsUncheckedCreateWithoutOvocieAZeleninyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutOvocieAZeleninyInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutOvocieAZeleninyInput = {
    create?: XOR<ShoppingListItemCreateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput> | ShoppingListItemCreateWithoutOvocieAZeleninyInput[] | ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput | ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput[]
    createMany?: ShoppingListItemCreateManyOvocieAZeleninyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutOvocieAZeleninyInput = {
    create?: XOR<PromotionCreateWithoutOvocieAZeleninyInput, PromotionUncheckedCreateWithoutOvocieAZeleninyInput> | PromotionCreateWithoutOvocieAZeleninyInput[] | PromotionUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutOvocieAZeleninyInput | PromotionCreateOrConnectWithoutOvocieAZeleninyInput[]
    createMany?: PromotionCreateManyOvocieAZeleninyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutOvocieAZeleninyInput = {
    create?: XOR<ShoppingListItemCreateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput> | ShoppingListItemCreateWithoutOvocieAZeleninyInput[] | ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput | ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput[]
    createMany?: ShoppingListItemCreateManyOvocieAZeleninyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutOvocieAZeleninyNestedInput = {
    create?: XOR<PromotionCreateWithoutOvocieAZeleninyInput, PromotionUncheckedCreateWithoutOvocieAZeleninyInput> | PromotionCreateWithoutOvocieAZeleninyInput[] | PromotionUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutOvocieAZeleninyInput | PromotionCreateOrConnectWithoutOvocieAZeleninyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutOvocieAZeleninyInput | PromotionUpsertWithWhereUniqueWithoutOvocieAZeleninyInput[]
    createMany?: PromotionCreateManyOvocieAZeleninyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutOvocieAZeleninyInput | PromotionUpdateWithWhereUniqueWithoutOvocieAZeleninyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutOvocieAZeleninyInput | PromotionUpdateManyWithWhereWithoutOvocieAZeleninyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutOvocieAZeleninyNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutOvocieAZeleninyInput, ProductAnalyticsUncheckedCreateWithoutOvocieAZeleninyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutOvocieAZeleninyInput
    upsert?: ProductAnalyticsUpsertWithoutOvocieAZeleninyInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutOvocieAZeleninyInput, ProductAnalyticsUpdateWithoutOvocieAZeleninyInput>, ProductAnalyticsUncheckedUpdateWithoutOvocieAZeleninyInput>
  }

  export type ShoppingListItemUpdateManyWithoutOvocieAZeleninyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput> | ShoppingListItemCreateWithoutOvocieAZeleninyInput[] | ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput | ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutOvocieAZeleninyInput | ShoppingListItemUpsertWithWhereUniqueWithoutOvocieAZeleninyInput[]
    createMany?: ShoppingListItemCreateManyOvocieAZeleninyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutOvocieAZeleninyInput | ShoppingListItemUpdateWithWhereUniqueWithoutOvocieAZeleninyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutOvocieAZeleninyInput | ShoppingListItemUpdateManyWithWhereWithoutOvocieAZeleninyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput = {
    create?: XOR<PromotionCreateWithoutOvocieAZeleninyInput, PromotionUncheckedCreateWithoutOvocieAZeleninyInput> | PromotionCreateWithoutOvocieAZeleninyInput[] | PromotionUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutOvocieAZeleninyInput | PromotionCreateOrConnectWithoutOvocieAZeleninyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutOvocieAZeleninyInput | PromotionUpsertWithWhereUniqueWithoutOvocieAZeleninyInput[]
    createMany?: PromotionCreateManyOvocieAZeleninyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutOvocieAZeleninyInput | PromotionUpdateWithWhereUniqueWithoutOvocieAZeleninyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutOvocieAZeleninyInput | PromotionUpdateManyWithWhereWithoutOvocieAZeleninyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput> | ShoppingListItemCreateWithoutOvocieAZeleninyInput[] | ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput | ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutOvocieAZeleninyInput | ShoppingListItemUpsertWithWhereUniqueWithoutOvocieAZeleninyInput[]
    createMany?: ShoppingListItemCreateManyOvocieAZeleninyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutOvocieAZeleninyInput | ShoppingListItemUpdateWithWhereUniqueWithoutOvocieAZeleninyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutOvocieAZeleninyInput | ShoppingListItemUpdateManyWithWhereWithoutOvocieAZeleninyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutGrilovanieInput = {
    create?: XOR<PromotionCreateWithoutGrilovanieInput, PromotionUncheckedCreateWithoutGrilovanieInput> | PromotionCreateWithoutGrilovanieInput[] | PromotionUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutGrilovanieInput | PromotionCreateOrConnectWithoutGrilovanieInput[]
    createMany?: PromotionCreateManyGrilovanieInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutGrilovanieInput = {
    create?: XOR<ProductAnalyticsCreateWithoutGrilovanieInput, ProductAnalyticsUncheckedCreateWithoutGrilovanieInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutGrilovanieInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutGrilovanieInput = {
    create?: XOR<ShoppingListItemCreateWithoutGrilovanieInput, ShoppingListItemUncheckedCreateWithoutGrilovanieInput> | ShoppingListItemCreateWithoutGrilovanieInput[] | ShoppingListItemUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutGrilovanieInput | ShoppingListItemCreateOrConnectWithoutGrilovanieInput[]
    createMany?: ShoppingListItemCreateManyGrilovanieInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutGrilovanieInput = {
    create?: XOR<PromotionCreateWithoutGrilovanieInput, PromotionUncheckedCreateWithoutGrilovanieInput> | PromotionCreateWithoutGrilovanieInput[] | PromotionUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutGrilovanieInput | PromotionCreateOrConnectWithoutGrilovanieInput[]
    createMany?: PromotionCreateManyGrilovanieInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutGrilovanieInput = {
    create?: XOR<ShoppingListItemCreateWithoutGrilovanieInput, ShoppingListItemUncheckedCreateWithoutGrilovanieInput> | ShoppingListItemCreateWithoutGrilovanieInput[] | ShoppingListItemUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutGrilovanieInput | ShoppingListItemCreateOrConnectWithoutGrilovanieInput[]
    createMany?: ShoppingListItemCreateManyGrilovanieInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutGrilovanieNestedInput = {
    create?: XOR<PromotionCreateWithoutGrilovanieInput, PromotionUncheckedCreateWithoutGrilovanieInput> | PromotionCreateWithoutGrilovanieInput[] | PromotionUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutGrilovanieInput | PromotionCreateOrConnectWithoutGrilovanieInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutGrilovanieInput | PromotionUpsertWithWhereUniqueWithoutGrilovanieInput[]
    createMany?: PromotionCreateManyGrilovanieInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutGrilovanieInput | PromotionUpdateWithWhereUniqueWithoutGrilovanieInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutGrilovanieInput | PromotionUpdateManyWithWhereWithoutGrilovanieInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutGrilovanieNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutGrilovanieInput, ProductAnalyticsUncheckedCreateWithoutGrilovanieInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutGrilovanieInput
    upsert?: ProductAnalyticsUpsertWithoutGrilovanieInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutGrilovanieInput, ProductAnalyticsUpdateWithoutGrilovanieInput>, ProductAnalyticsUncheckedUpdateWithoutGrilovanieInput>
  }

  export type ShoppingListItemUpdateManyWithoutGrilovanieNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutGrilovanieInput, ShoppingListItemUncheckedCreateWithoutGrilovanieInput> | ShoppingListItemCreateWithoutGrilovanieInput[] | ShoppingListItemUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutGrilovanieInput | ShoppingListItemCreateOrConnectWithoutGrilovanieInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutGrilovanieInput | ShoppingListItemUpsertWithWhereUniqueWithoutGrilovanieInput[]
    createMany?: ShoppingListItemCreateManyGrilovanieInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutGrilovanieInput | ShoppingListItemUpdateWithWhereUniqueWithoutGrilovanieInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutGrilovanieInput | ShoppingListItemUpdateManyWithWhereWithoutGrilovanieInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutGrilovanieNestedInput = {
    create?: XOR<PromotionCreateWithoutGrilovanieInput, PromotionUncheckedCreateWithoutGrilovanieInput> | PromotionCreateWithoutGrilovanieInput[] | PromotionUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutGrilovanieInput | PromotionCreateOrConnectWithoutGrilovanieInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutGrilovanieInput | PromotionUpsertWithWhereUniqueWithoutGrilovanieInput[]
    createMany?: PromotionCreateManyGrilovanieInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutGrilovanieInput | PromotionUpdateWithWhereUniqueWithoutGrilovanieInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutGrilovanieInput | PromotionUpdateManyWithWhereWithoutGrilovanieInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutGrilovanieNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutGrilovanieInput, ShoppingListItemUncheckedCreateWithoutGrilovanieInput> | ShoppingListItemCreateWithoutGrilovanieInput[] | ShoppingListItemUncheckedCreateWithoutGrilovanieInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutGrilovanieInput | ShoppingListItemCreateOrConnectWithoutGrilovanieInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutGrilovanieInput | ShoppingListItemUpsertWithWhereUniqueWithoutGrilovanieInput[]
    createMany?: ShoppingListItemCreateManyGrilovanieInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutGrilovanieInput | ShoppingListItemUpdateWithWhereUniqueWithoutGrilovanieInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutGrilovanieInput | ShoppingListItemUpdateManyWithWhereWithoutGrilovanieInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutStarostlivostODomacnostInput = {
    create?: XOR<PromotionCreateWithoutStarostlivostODomacnostInput, PromotionUncheckedCreateWithoutStarostlivostODomacnostInput> | PromotionCreateWithoutStarostlivostODomacnostInput[] | PromotionUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutStarostlivostODomacnostInput | PromotionCreateOrConnectWithoutStarostlivostODomacnostInput[]
    createMany?: PromotionCreateManyStarostlivostODomacnostInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutStarostlivostODomacnostInput = {
    create?: XOR<ProductAnalyticsCreateWithoutStarostlivostODomacnostInput, ProductAnalyticsUncheckedCreateWithoutStarostlivostODomacnostInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutStarostlivostODomacnostInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutStarostlivostODomacnostInput = {
    create?: XOR<ShoppingListItemCreateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput> | ShoppingListItemCreateWithoutStarostlivostODomacnostInput[] | ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput | ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput[]
    createMany?: ShoppingListItemCreateManyStarostlivostODomacnostInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput = {
    create?: XOR<PromotionCreateWithoutStarostlivostODomacnostInput, PromotionUncheckedCreateWithoutStarostlivostODomacnostInput> | PromotionCreateWithoutStarostlivostODomacnostInput[] | PromotionUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutStarostlivostODomacnostInput | PromotionCreateOrConnectWithoutStarostlivostODomacnostInput[]
    createMany?: PromotionCreateManyStarostlivostODomacnostInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput = {
    create?: XOR<ShoppingListItemCreateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput> | ShoppingListItemCreateWithoutStarostlivostODomacnostInput[] | ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput | ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput[]
    createMany?: ShoppingListItemCreateManyStarostlivostODomacnostInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutStarostlivostODomacnostNestedInput = {
    create?: XOR<PromotionCreateWithoutStarostlivostODomacnostInput, PromotionUncheckedCreateWithoutStarostlivostODomacnostInput> | PromotionCreateWithoutStarostlivostODomacnostInput[] | PromotionUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutStarostlivostODomacnostInput | PromotionCreateOrConnectWithoutStarostlivostODomacnostInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput | PromotionUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    createMany?: PromotionCreateManyStarostlivostODomacnostInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput | PromotionUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutStarostlivostODomacnostInput | PromotionUpdateManyWithWhereWithoutStarostlivostODomacnostInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutStarostlivostODomacnostNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutStarostlivostODomacnostInput, ProductAnalyticsUncheckedCreateWithoutStarostlivostODomacnostInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutStarostlivostODomacnostInput
    upsert?: ProductAnalyticsUpsertWithoutStarostlivostODomacnostInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutStarostlivostODomacnostInput, ProductAnalyticsUpdateWithoutStarostlivostODomacnostInput>, ProductAnalyticsUncheckedUpdateWithoutStarostlivostODomacnostInput>
  }

  export type ShoppingListItemUpdateManyWithoutStarostlivostODomacnostNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput> | ShoppingListItemCreateWithoutStarostlivostODomacnostInput[] | ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput | ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput | ShoppingListItemUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    createMany?: ShoppingListItemCreateManyStarostlivostODomacnostInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput | ShoppingListItemUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutStarostlivostODomacnostInput | ShoppingListItemUpdateManyWithWhereWithoutStarostlivostODomacnostInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput = {
    create?: XOR<PromotionCreateWithoutStarostlivostODomacnostInput, PromotionUncheckedCreateWithoutStarostlivostODomacnostInput> | PromotionCreateWithoutStarostlivostODomacnostInput[] | PromotionUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutStarostlivostODomacnostInput | PromotionCreateOrConnectWithoutStarostlivostODomacnostInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput | PromotionUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    createMany?: PromotionCreateManyStarostlivostODomacnostInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput | PromotionUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutStarostlivostODomacnostInput | PromotionUpdateManyWithWhereWithoutStarostlivostODomacnostInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput> | ShoppingListItemCreateWithoutStarostlivostODomacnostInput[] | ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput | ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput | ShoppingListItemUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    createMany?: ShoppingListItemCreateManyStarostlivostODomacnostInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput | ShoppingListItemUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutStarostlivostODomacnostInput | ShoppingListItemUpdateManyWithWhereWithoutStarostlivostODomacnostInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutPecivoInput = {
    create?: XOR<PromotionCreateWithoutPecivoInput, PromotionUncheckedCreateWithoutPecivoInput> | PromotionCreateWithoutPecivoInput[] | PromotionUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPecivoInput | PromotionCreateOrConnectWithoutPecivoInput[]
    createMany?: PromotionCreateManyPecivoInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutPecivoInput = {
    create?: XOR<ProductAnalyticsCreateWithoutPecivoInput, ProductAnalyticsUncheckedCreateWithoutPecivoInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutPecivoInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutPecivoInput = {
    create?: XOR<ShoppingListItemCreateWithoutPecivoInput, ShoppingListItemUncheckedCreateWithoutPecivoInput> | ShoppingListItemCreateWithoutPecivoInput[] | ShoppingListItemUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutPecivoInput | ShoppingListItemCreateOrConnectWithoutPecivoInput[]
    createMany?: ShoppingListItemCreateManyPecivoInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutPecivoInput = {
    create?: XOR<PromotionCreateWithoutPecivoInput, PromotionUncheckedCreateWithoutPecivoInput> | PromotionCreateWithoutPecivoInput[] | PromotionUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPecivoInput | PromotionCreateOrConnectWithoutPecivoInput[]
    createMany?: PromotionCreateManyPecivoInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutPecivoInput = {
    create?: XOR<ShoppingListItemCreateWithoutPecivoInput, ShoppingListItemUncheckedCreateWithoutPecivoInput> | ShoppingListItemCreateWithoutPecivoInput[] | ShoppingListItemUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutPecivoInput | ShoppingListItemCreateOrConnectWithoutPecivoInput[]
    createMany?: ShoppingListItemCreateManyPecivoInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutPecivoNestedInput = {
    create?: XOR<PromotionCreateWithoutPecivoInput, PromotionUncheckedCreateWithoutPecivoInput> | PromotionCreateWithoutPecivoInput[] | PromotionUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPecivoInput | PromotionCreateOrConnectWithoutPecivoInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutPecivoInput | PromotionUpsertWithWhereUniqueWithoutPecivoInput[]
    createMany?: PromotionCreateManyPecivoInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutPecivoInput | PromotionUpdateWithWhereUniqueWithoutPecivoInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutPecivoInput | PromotionUpdateManyWithWhereWithoutPecivoInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutPecivoNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutPecivoInput, ProductAnalyticsUncheckedCreateWithoutPecivoInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutPecivoInput
    upsert?: ProductAnalyticsUpsertWithoutPecivoInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutPecivoInput, ProductAnalyticsUpdateWithoutPecivoInput>, ProductAnalyticsUncheckedUpdateWithoutPecivoInput>
  }

  export type ShoppingListItemUpdateManyWithoutPecivoNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutPecivoInput, ShoppingListItemUncheckedCreateWithoutPecivoInput> | ShoppingListItemCreateWithoutPecivoInput[] | ShoppingListItemUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutPecivoInput | ShoppingListItemCreateOrConnectWithoutPecivoInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutPecivoInput | ShoppingListItemUpsertWithWhereUniqueWithoutPecivoInput[]
    createMany?: ShoppingListItemCreateManyPecivoInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutPecivoInput | ShoppingListItemUpdateWithWhereUniqueWithoutPecivoInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutPecivoInput | ShoppingListItemUpdateManyWithWhereWithoutPecivoInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutPecivoNestedInput = {
    create?: XOR<PromotionCreateWithoutPecivoInput, PromotionUncheckedCreateWithoutPecivoInput> | PromotionCreateWithoutPecivoInput[] | PromotionUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutPecivoInput | PromotionCreateOrConnectWithoutPecivoInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutPecivoInput | PromotionUpsertWithWhereUniqueWithoutPecivoInput[]
    createMany?: PromotionCreateManyPecivoInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutPecivoInput | PromotionUpdateWithWhereUniqueWithoutPecivoInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutPecivoInput | PromotionUpdateManyWithWhereWithoutPecivoInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutPecivoNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutPecivoInput, ShoppingListItemUncheckedCreateWithoutPecivoInput> | ShoppingListItemCreateWithoutPecivoInput[] | ShoppingListItemUncheckedCreateWithoutPecivoInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutPecivoInput | ShoppingListItemCreateOrConnectWithoutPecivoInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutPecivoInput | ShoppingListItemUpsertWithWhereUniqueWithoutPecivoInput[]
    createMany?: ShoppingListItemCreateManyPecivoInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutPecivoInput | ShoppingListItemUpdateWithWhereUniqueWithoutPecivoInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutPecivoInput | ShoppingListItemUpdateManyWithWhereWithoutPecivoInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutMasoRybyALahodkyInput = {
    create?: XOR<PromotionCreateWithoutMasoRybyALahodkyInput, PromotionUncheckedCreateWithoutMasoRybyALahodkyInput> | PromotionCreateWithoutMasoRybyALahodkyInput[] | PromotionUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMasoRybyALahodkyInput | PromotionCreateOrConnectWithoutMasoRybyALahodkyInput[]
    createMany?: PromotionCreateManyMasoRybyALahodkyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutMasoRybyALahodkyInput = {
    create?: XOR<ProductAnalyticsCreateWithoutMasoRybyALahodkyInput, ProductAnalyticsUncheckedCreateWithoutMasoRybyALahodkyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutMasoRybyALahodkyInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutMasoRybyALahodkyInput = {
    create?: XOR<ShoppingListItemCreateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput> | ShoppingListItemCreateWithoutMasoRybyALahodkyInput[] | ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput | ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput[]
    createMany?: ShoppingListItemCreateManyMasoRybyALahodkyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput = {
    create?: XOR<PromotionCreateWithoutMasoRybyALahodkyInput, PromotionUncheckedCreateWithoutMasoRybyALahodkyInput> | PromotionCreateWithoutMasoRybyALahodkyInput[] | PromotionUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMasoRybyALahodkyInput | PromotionCreateOrConnectWithoutMasoRybyALahodkyInput[]
    createMany?: PromotionCreateManyMasoRybyALahodkyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput = {
    create?: XOR<ShoppingListItemCreateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput> | ShoppingListItemCreateWithoutMasoRybyALahodkyInput[] | ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput | ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput[]
    createMany?: ShoppingListItemCreateManyMasoRybyALahodkyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutMasoRybyALahodkyNestedInput = {
    create?: XOR<PromotionCreateWithoutMasoRybyALahodkyInput, PromotionUncheckedCreateWithoutMasoRybyALahodkyInput> | PromotionCreateWithoutMasoRybyALahodkyInput[] | PromotionUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMasoRybyALahodkyInput | PromotionCreateOrConnectWithoutMasoRybyALahodkyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput | PromotionUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    createMany?: PromotionCreateManyMasoRybyALahodkyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput | PromotionUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutMasoRybyALahodkyInput | PromotionUpdateManyWithWhereWithoutMasoRybyALahodkyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutMasoRybyALahodkyNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutMasoRybyALahodkyInput, ProductAnalyticsUncheckedCreateWithoutMasoRybyALahodkyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutMasoRybyALahodkyInput
    upsert?: ProductAnalyticsUpsertWithoutMasoRybyALahodkyInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutMasoRybyALahodkyInput, ProductAnalyticsUpdateWithoutMasoRybyALahodkyInput>, ProductAnalyticsUncheckedUpdateWithoutMasoRybyALahodkyInput>
  }

  export type ShoppingListItemUpdateManyWithoutMasoRybyALahodkyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput> | ShoppingListItemCreateWithoutMasoRybyALahodkyInput[] | ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput | ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput | ShoppingListItemUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    createMany?: ShoppingListItemCreateManyMasoRybyALahodkyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput | ShoppingListItemUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutMasoRybyALahodkyInput | ShoppingListItemUpdateManyWithWhereWithoutMasoRybyALahodkyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput = {
    create?: XOR<PromotionCreateWithoutMasoRybyALahodkyInput, PromotionUncheckedCreateWithoutMasoRybyALahodkyInput> | PromotionCreateWithoutMasoRybyALahodkyInput[] | PromotionUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMasoRybyALahodkyInput | PromotionCreateOrConnectWithoutMasoRybyALahodkyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput | PromotionUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    createMany?: PromotionCreateManyMasoRybyALahodkyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput | PromotionUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutMasoRybyALahodkyInput | PromotionUpdateManyWithWhereWithoutMasoRybyALahodkyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput> | ShoppingListItemCreateWithoutMasoRybyALahodkyInput[] | ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput | ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput | ShoppingListItemUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    createMany?: ShoppingListItemCreateManyMasoRybyALahodkyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput | ShoppingListItemUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutMasoRybyALahodkyInput | ShoppingListItemUpdateManyWithWhereWithoutMasoRybyALahodkyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutMliecneVyrobkyAVajciaInput = {
    create?: XOR<PromotionCreateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | PromotionCreateWithoutMliecneVyrobkyAVajciaInput[] | PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: PromotionCreateManyMliecneVyrobkyAVajciaInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutMliecneVyrobkyAVajciaInput = {
    create?: XOR<ProductAnalyticsCreateWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutMliecneVyrobkyAVajciaInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutMliecneVyrobkyAVajciaInput = {
    create?: XOR<ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput[] | ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: ShoppingListItemCreateManyMliecneVyrobkyAVajciaInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput = {
    create?: XOR<PromotionCreateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | PromotionCreateWithoutMliecneVyrobkyAVajciaInput[] | PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: PromotionCreateManyMliecneVyrobkyAVajciaInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput = {
    create?: XOR<ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput[] | ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: ShoppingListItemCreateManyMliecneVyrobkyAVajciaInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput = {
    create?: XOR<PromotionCreateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | PromotionCreateWithoutMliecneVyrobkyAVajciaInput[] | PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | PromotionUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: PromotionCreateManyMliecneVyrobkyAVajciaInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | PromotionUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput | PromotionUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutMliecneVyrobkyAVajciaNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutMliecneVyrobkyAVajciaInput
    upsert?: ProductAnalyticsUpsertWithoutMliecneVyrobkyAVajciaInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUpdateWithoutMliecneVyrobkyAVajciaInput>, ProductAnalyticsUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ShoppingListItemUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput[] | ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: ShoppingListItemCreateManyMliecneVyrobkyAVajciaInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput = {
    create?: XOR<PromotionCreateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | PromotionCreateWithoutMliecneVyrobkyAVajciaInput[] | PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | PromotionUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: PromotionCreateManyMliecneVyrobkyAVajciaInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | PromotionUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput | PromotionUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput> | ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput[] | ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    createMany?: ShoppingListItemCreateManyMliecneVyrobkyAVajciaInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput | ShoppingListItemUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutTrvanlivePotravinyInput = {
    create?: XOR<PromotionCreateWithoutTrvanlivePotravinyInput, PromotionUncheckedCreateWithoutTrvanlivePotravinyInput> | PromotionCreateWithoutTrvanlivePotravinyInput[] | PromotionUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutTrvanlivePotravinyInput | PromotionCreateOrConnectWithoutTrvanlivePotravinyInput[]
    createMany?: PromotionCreateManyTrvanlivePotravinyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutTrvanlivePotravinyInput = {
    create?: XOR<ProductAnalyticsCreateWithoutTrvanlivePotravinyInput, ProductAnalyticsUncheckedCreateWithoutTrvanlivePotravinyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutTrvanlivePotravinyInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutTrvanlivePotravinyInput = {
    create?: XOR<ShoppingListItemCreateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput> | ShoppingListItemCreateWithoutTrvanlivePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput | ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput[]
    createMany?: ShoppingListItemCreateManyTrvanlivePotravinyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput = {
    create?: XOR<PromotionCreateWithoutTrvanlivePotravinyInput, PromotionUncheckedCreateWithoutTrvanlivePotravinyInput> | PromotionCreateWithoutTrvanlivePotravinyInput[] | PromotionUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutTrvanlivePotravinyInput | PromotionCreateOrConnectWithoutTrvanlivePotravinyInput[]
    createMany?: PromotionCreateManyTrvanlivePotravinyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput = {
    create?: XOR<ShoppingListItemCreateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput> | ShoppingListItemCreateWithoutTrvanlivePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput | ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput[]
    createMany?: ShoppingListItemCreateManyTrvanlivePotravinyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutTrvanlivePotravinyNestedInput = {
    create?: XOR<PromotionCreateWithoutTrvanlivePotravinyInput, PromotionUncheckedCreateWithoutTrvanlivePotravinyInput> | PromotionCreateWithoutTrvanlivePotravinyInput[] | PromotionUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutTrvanlivePotravinyInput | PromotionCreateOrConnectWithoutTrvanlivePotravinyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput | PromotionUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    createMany?: PromotionCreateManyTrvanlivePotravinyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput | PromotionUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutTrvanlivePotravinyInput | PromotionUpdateManyWithWhereWithoutTrvanlivePotravinyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutTrvanlivePotravinyNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutTrvanlivePotravinyInput, ProductAnalyticsUncheckedCreateWithoutTrvanlivePotravinyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutTrvanlivePotravinyInput
    upsert?: ProductAnalyticsUpsertWithoutTrvanlivePotravinyInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutTrvanlivePotravinyInput, ProductAnalyticsUpdateWithoutTrvanlivePotravinyInput>, ProductAnalyticsUncheckedUpdateWithoutTrvanlivePotravinyInput>
  }

  export type ShoppingListItemUpdateManyWithoutTrvanlivePotravinyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput> | ShoppingListItemCreateWithoutTrvanlivePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput | ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput | ShoppingListItemUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    createMany?: ShoppingListItemCreateManyTrvanlivePotravinyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput | ShoppingListItemUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutTrvanlivePotravinyInput | ShoppingListItemUpdateManyWithWhereWithoutTrvanlivePotravinyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput = {
    create?: XOR<PromotionCreateWithoutTrvanlivePotravinyInput, PromotionUncheckedCreateWithoutTrvanlivePotravinyInput> | PromotionCreateWithoutTrvanlivePotravinyInput[] | PromotionUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutTrvanlivePotravinyInput | PromotionCreateOrConnectWithoutTrvanlivePotravinyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput | PromotionUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    createMany?: PromotionCreateManyTrvanlivePotravinyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput | PromotionUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutTrvanlivePotravinyInput | PromotionUpdateManyWithWhereWithoutTrvanlivePotravinyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput> | ShoppingListItemCreateWithoutTrvanlivePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput | ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput | ShoppingListItemUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    createMany?: ShoppingListItemCreateManyTrvanlivePotravinyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput | ShoppingListItemUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutTrvanlivePotravinyInput | ShoppingListItemUpdateManyWithWhereWithoutTrvanlivePotravinyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput = {
    create?: XOR<PromotionCreateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | PromotionCreateWithoutSpecialnaAZdravaVyzivaInput[] | PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: PromotionCreateManySpecialnaAZdravaVyzivaInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutSpecialnaAZdravaVyzivaInput = {
    create?: XOR<ProductAnalyticsCreateWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput = {
    create?: XOR<ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput[] | ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: ShoppingListItemCreateManySpecialnaAZdravaVyzivaInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput = {
    create?: XOR<PromotionCreateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | PromotionCreateWithoutSpecialnaAZdravaVyzivaInput[] | PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: PromotionCreateManySpecialnaAZdravaVyzivaInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput = {
    create?: XOR<ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput[] | ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: ShoppingListItemCreateManySpecialnaAZdravaVyzivaInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput = {
    create?: XOR<PromotionCreateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | PromotionCreateWithoutSpecialnaAZdravaVyzivaInput[] | PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | PromotionUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: PromotionCreateManySpecialnaAZdravaVyzivaInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | PromotionUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput | PromotionUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutSpecialnaAZdravaVyzivaNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput
    upsert?: ProductAnalyticsUpsertWithoutSpecialnaAZdravaVyzivaInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUpdateWithoutSpecialnaAZdravaVyzivaInput>, ProductAnalyticsUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ShoppingListItemUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput[] | ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: ShoppingListItemCreateManySpecialnaAZdravaVyzivaInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput = {
    create?: XOR<PromotionCreateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | PromotionCreateWithoutSpecialnaAZdravaVyzivaInput[] | PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | PromotionUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: PromotionCreateManySpecialnaAZdravaVyzivaInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | PromotionUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput | PromotionUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput> | ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput[] | ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    createMany?: ShoppingListItemCreateManySpecialnaAZdravaVyzivaInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput | ShoppingListItemUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutMrazenePotravinyInput = {
    create?: XOR<PromotionCreateWithoutMrazenePotravinyInput, PromotionUncheckedCreateWithoutMrazenePotravinyInput> | PromotionCreateWithoutMrazenePotravinyInput[] | PromotionUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMrazenePotravinyInput | PromotionCreateOrConnectWithoutMrazenePotravinyInput[]
    createMany?: PromotionCreateManyMrazenePotravinyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutMrazenePotravinyInput = {
    create?: XOR<ProductAnalyticsCreateWithoutMrazenePotravinyInput, ProductAnalyticsUncheckedCreateWithoutMrazenePotravinyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutMrazenePotravinyInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutMrazenePotravinyInput = {
    create?: XOR<ShoppingListItemCreateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput> | ShoppingListItemCreateWithoutMrazenePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput | ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput[]
    createMany?: ShoppingListItemCreateManyMrazenePotravinyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutMrazenePotravinyInput = {
    create?: XOR<PromotionCreateWithoutMrazenePotravinyInput, PromotionUncheckedCreateWithoutMrazenePotravinyInput> | PromotionCreateWithoutMrazenePotravinyInput[] | PromotionUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMrazenePotravinyInput | PromotionCreateOrConnectWithoutMrazenePotravinyInput[]
    createMany?: PromotionCreateManyMrazenePotravinyInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutMrazenePotravinyInput = {
    create?: XOR<ShoppingListItemCreateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput> | ShoppingListItemCreateWithoutMrazenePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput | ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput[]
    createMany?: ShoppingListItemCreateManyMrazenePotravinyInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutMrazenePotravinyNestedInput = {
    create?: XOR<PromotionCreateWithoutMrazenePotravinyInput, PromotionUncheckedCreateWithoutMrazenePotravinyInput> | PromotionCreateWithoutMrazenePotravinyInput[] | PromotionUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMrazenePotravinyInput | PromotionCreateOrConnectWithoutMrazenePotravinyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutMrazenePotravinyInput | PromotionUpsertWithWhereUniqueWithoutMrazenePotravinyInput[]
    createMany?: PromotionCreateManyMrazenePotravinyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutMrazenePotravinyInput | PromotionUpdateWithWhereUniqueWithoutMrazenePotravinyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutMrazenePotravinyInput | PromotionUpdateManyWithWhereWithoutMrazenePotravinyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutMrazenePotravinyNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutMrazenePotravinyInput, ProductAnalyticsUncheckedCreateWithoutMrazenePotravinyInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutMrazenePotravinyInput
    upsert?: ProductAnalyticsUpsertWithoutMrazenePotravinyInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutMrazenePotravinyInput, ProductAnalyticsUpdateWithoutMrazenePotravinyInput>, ProductAnalyticsUncheckedUpdateWithoutMrazenePotravinyInput>
  }

  export type ShoppingListItemUpdateManyWithoutMrazenePotravinyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput> | ShoppingListItemCreateWithoutMrazenePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput | ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutMrazenePotravinyInput | ShoppingListItemUpsertWithWhereUniqueWithoutMrazenePotravinyInput[]
    createMany?: ShoppingListItemCreateManyMrazenePotravinyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutMrazenePotravinyInput | ShoppingListItemUpdateWithWhereUniqueWithoutMrazenePotravinyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutMrazenePotravinyInput | ShoppingListItemUpdateManyWithWhereWithoutMrazenePotravinyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutMrazenePotravinyNestedInput = {
    create?: XOR<PromotionCreateWithoutMrazenePotravinyInput, PromotionUncheckedCreateWithoutMrazenePotravinyInput> | PromotionCreateWithoutMrazenePotravinyInput[] | PromotionUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutMrazenePotravinyInput | PromotionCreateOrConnectWithoutMrazenePotravinyInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutMrazenePotravinyInput | PromotionUpsertWithWhereUniqueWithoutMrazenePotravinyInput[]
    createMany?: PromotionCreateManyMrazenePotravinyInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutMrazenePotravinyInput | PromotionUpdateWithWhereUniqueWithoutMrazenePotravinyInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutMrazenePotravinyInput | PromotionUpdateManyWithWhereWithoutMrazenePotravinyInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutMrazenePotravinyNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput> | ShoppingListItemCreateWithoutMrazenePotravinyInput[] | ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput | ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutMrazenePotravinyInput | ShoppingListItemUpsertWithWhereUniqueWithoutMrazenePotravinyInput[]
    createMany?: ShoppingListItemCreateManyMrazenePotravinyInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutMrazenePotravinyInput | ShoppingListItemUpdateWithWhereUniqueWithoutMrazenePotravinyInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutMrazenePotravinyInput | ShoppingListItemUpdateManyWithWhereWithoutMrazenePotravinyInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutNapojeInput = {
    create?: XOR<PromotionCreateWithoutNapojeInput, PromotionUncheckedCreateWithoutNapojeInput> | PromotionCreateWithoutNapojeInput[] | PromotionUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutNapojeInput | PromotionCreateOrConnectWithoutNapojeInput[]
    createMany?: PromotionCreateManyNapojeInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutNapojeInput = {
    create?: XOR<ProductAnalyticsCreateWithoutNapojeInput, ProductAnalyticsUncheckedCreateWithoutNapojeInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutNapojeInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutNapojeInput = {
    create?: XOR<ShoppingListItemCreateWithoutNapojeInput, ShoppingListItemUncheckedCreateWithoutNapojeInput> | ShoppingListItemCreateWithoutNapojeInput[] | ShoppingListItemUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutNapojeInput | ShoppingListItemCreateOrConnectWithoutNapojeInput[]
    createMany?: ShoppingListItemCreateManyNapojeInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutNapojeInput = {
    create?: XOR<PromotionCreateWithoutNapojeInput, PromotionUncheckedCreateWithoutNapojeInput> | PromotionCreateWithoutNapojeInput[] | PromotionUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutNapojeInput | PromotionCreateOrConnectWithoutNapojeInput[]
    createMany?: PromotionCreateManyNapojeInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutNapojeInput = {
    create?: XOR<ShoppingListItemCreateWithoutNapojeInput, ShoppingListItemUncheckedCreateWithoutNapojeInput> | ShoppingListItemCreateWithoutNapojeInput[] | ShoppingListItemUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutNapojeInput | ShoppingListItemCreateOrConnectWithoutNapojeInput[]
    createMany?: ShoppingListItemCreateManyNapojeInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutNapojeNestedInput = {
    create?: XOR<PromotionCreateWithoutNapojeInput, PromotionUncheckedCreateWithoutNapojeInput> | PromotionCreateWithoutNapojeInput[] | PromotionUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutNapojeInput | PromotionCreateOrConnectWithoutNapojeInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutNapojeInput | PromotionUpsertWithWhereUniqueWithoutNapojeInput[]
    createMany?: PromotionCreateManyNapojeInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutNapojeInput | PromotionUpdateWithWhereUniqueWithoutNapojeInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutNapojeInput | PromotionUpdateManyWithWhereWithoutNapojeInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutNapojeNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutNapojeInput, ProductAnalyticsUncheckedCreateWithoutNapojeInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutNapojeInput
    upsert?: ProductAnalyticsUpsertWithoutNapojeInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutNapojeInput, ProductAnalyticsUpdateWithoutNapojeInput>, ProductAnalyticsUncheckedUpdateWithoutNapojeInput>
  }

  export type ShoppingListItemUpdateManyWithoutNapojeNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutNapojeInput, ShoppingListItemUncheckedCreateWithoutNapojeInput> | ShoppingListItemCreateWithoutNapojeInput[] | ShoppingListItemUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutNapojeInput | ShoppingListItemCreateOrConnectWithoutNapojeInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutNapojeInput | ShoppingListItemUpsertWithWhereUniqueWithoutNapojeInput[]
    createMany?: ShoppingListItemCreateManyNapojeInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutNapojeInput | ShoppingListItemUpdateWithWhereUniqueWithoutNapojeInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutNapojeInput | ShoppingListItemUpdateManyWithWhereWithoutNapojeInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutNapojeNestedInput = {
    create?: XOR<PromotionCreateWithoutNapojeInput, PromotionUncheckedCreateWithoutNapojeInput> | PromotionCreateWithoutNapojeInput[] | PromotionUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutNapojeInput | PromotionCreateOrConnectWithoutNapojeInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutNapojeInput | PromotionUpsertWithWhereUniqueWithoutNapojeInput[]
    createMany?: PromotionCreateManyNapojeInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutNapojeInput | PromotionUpdateWithWhereUniqueWithoutNapojeInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutNapojeInput | PromotionUpdateManyWithWhereWithoutNapojeInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutNapojeNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutNapojeInput, ShoppingListItemUncheckedCreateWithoutNapojeInput> | ShoppingListItemCreateWithoutNapojeInput[] | ShoppingListItemUncheckedCreateWithoutNapojeInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutNapojeInput | ShoppingListItemCreateOrConnectWithoutNapojeInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutNapojeInput | ShoppingListItemUpsertWithWhereUniqueWithoutNapojeInput[]
    createMany?: ShoppingListItemCreateManyNapojeInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutNapojeInput | ShoppingListItemUpdateWithWhereUniqueWithoutNapojeInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutNapojeInput | ShoppingListItemUpdateManyWithWhereWithoutNapojeInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateNestedManyWithoutAlkoholInput = {
    create?: XOR<PromotionCreateWithoutAlkoholInput, PromotionUncheckedCreateWithoutAlkoholInput> | PromotionCreateWithoutAlkoholInput[] | PromotionUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutAlkoholInput | PromotionCreateOrConnectWithoutAlkoholInput[]
    createMany?: PromotionCreateManyAlkoholInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ProductAnalyticsCreateNestedOneWithoutAlkoholInput = {
    create?: XOR<ProductAnalyticsCreateWithoutAlkoholInput, ProductAnalyticsUncheckedCreateWithoutAlkoholInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutAlkoholInput
    connect?: ProductAnalyticsWhereUniqueInput
  }

  export type ShoppingListItemCreateNestedManyWithoutAlkoholInput = {
    create?: XOR<ShoppingListItemCreateWithoutAlkoholInput, ShoppingListItemUncheckedCreateWithoutAlkoholInput> | ShoppingListItemCreateWithoutAlkoholInput[] | ShoppingListItemUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutAlkoholInput | ShoppingListItemCreateOrConnectWithoutAlkoholInput[]
    createMany?: ShoppingListItemCreateManyAlkoholInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUncheckedCreateNestedManyWithoutAlkoholInput = {
    create?: XOR<PromotionCreateWithoutAlkoholInput, PromotionUncheckedCreateWithoutAlkoholInput> | PromotionCreateWithoutAlkoholInput[] | PromotionUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutAlkoholInput | PromotionCreateOrConnectWithoutAlkoholInput[]
    createMany?: PromotionCreateManyAlkoholInputEnvelope
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutAlkoholInput = {
    create?: XOR<ShoppingListItemCreateWithoutAlkoholInput, ShoppingListItemUncheckedCreateWithoutAlkoholInput> | ShoppingListItemCreateWithoutAlkoholInput[] | ShoppingListItemUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutAlkoholInput | ShoppingListItemCreateOrConnectWithoutAlkoholInput[]
    createMany?: ShoppingListItemCreateManyAlkoholInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type PromotionUpdateManyWithoutAlkoholNestedInput = {
    create?: XOR<PromotionCreateWithoutAlkoholInput, PromotionUncheckedCreateWithoutAlkoholInput> | PromotionCreateWithoutAlkoholInput[] | PromotionUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutAlkoholInput | PromotionCreateOrConnectWithoutAlkoholInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutAlkoholInput | PromotionUpsertWithWhereUniqueWithoutAlkoholInput[]
    createMany?: PromotionCreateManyAlkoholInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutAlkoholInput | PromotionUpdateWithWhereUniqueWithoutAlkoholInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutAlkoholInput | PromotionUpdateManyWithWhereWithoutAlkoholInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ProductAnalyticsUpdateOneWithoutAlkoholNestedInput = {
    create?: XOR<ProductAnalyticsCreateWithoutAlkoholInput, ProductAnalyticsUncheckedCreateWithoutAlkoholInput>
    connectOrCreate?: ProductAnalyticsCreateOrConnectWithoutAlkoholInput
    upsert?: ProductAnalyticsUpsertWithoutAlkoholInput
    disconnect?: ProductAnalyticsWhereInput | boolean
    delete?: ProductAnalyticsWhereInput | boolean
    connect?: ProductAnalyticsWhereUniqueInput
    update?: XOR<XOR<ProductAnalyticsUpdateToOneWithWhereWithoutAlkoholInput, ProductAnalyticsUpdateWithoutAlkoholInput>, ProductAnalyticsUncheckedUpdateWithoutAlkoholInput>
  }

  export type ShoppingListItemUpdateManyWithoutAlkoholNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutAlkoholInput, ShoppingListItemUncheckedCreateWithoutAlkoholInput> | ShoppingListItemCreateWithoutAlkoholInput[] | ShoppingListItemUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutAlkoholInput | ShoppingListItemCreateOrConnectWithoutAlkoholInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutAlkoholInput | ShoppingListItemUpsertWithWhereUniqueWithoutAlkoholInput[]
    createMany?: ShoppingListItemCreateManyAlkoholInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutAlkoholInput | ShoppingListItemUpdateWithWhereUniqueWithoutAlkoholInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutAlkoholInput | ShoppingListItemUpdateManyWithWhereWithoutAlkoholInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionUncheckedUpdateManyWithoutAlkoholNestedInput = {
    create?: XOR<PromotionCreateWithoutAlkoholInput, PromotionUncheckedCreateWithoutAlkoholInput> | PromotionCreateWithoutAlkoholInput[] | PromotionUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: PromotionCreateOrConnectWithoutAlkoholInput | PromotionCreateOrConnectWithoutAlkoholInput[]
    upsert?: PromotionUpsertWithWhereUniqueWithoutAlkoholInput | PromotionUpsertWithWhereUniqueWithoutAlkoholInput[]
    createMany?: PromotionCreateManyAlkoholInputEnvelope
    set?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    disconnect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    delete?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    connect?: PromotionWhereUniqueInput | PromotionWhereUniqueInput[]
    update?: PromotionUpdateWithWhereUniqueWithoutAlkoholInput | PromotionUpdateWithWhereUniqueWithoutAlkoholInput[]
    updateMany?: PromotionUpdateManyWithWhereWithoutAlkoholInput | PromotionUpdateManyWithWhereWithoutAlkoholInput[]
    deleteMany?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutAlkoholNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutAlkoholInput, ShoppingListItemUncheckedCreateWithoutAlkoholInput> | ShoppingListItemCreateWithoutAlkoholInput[] | ShoppingListItemUncheckedCreateWithoutAlkoholInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutAlkoholInput | ShoppingListItemCreateOrConnectWithoutAlkoholInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutAlkoholInput | ShoppingListItemUpsertWithWhereUniqueWithoutAlkoholInput[]
    createMany?: ShoppingListItemCreateManyAlkoholInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutAlkoholInput | ShoppingListItemUpdateWithWhereUniqueWithoutAlkoholInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutAlkoholInput | ShoppingListItemUpdateManyWithWhereWithoutAlkoholInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type PromotionCreateattributesInput = {
    set: string[]
  }

  export type OvocieAZeleninyCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutPromotionsInput, OvocieAZeleninyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutPromotionsInput
    connect?: OvocieAZeleninyWhereUniqueInput
  }

  export type GrilovanieCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<GrilovanieCreateWithoutPromotionsInput, GrilovanieUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: GrilovanieCreateOrConnectWithoutPromotionsInput
    connect?: GrilovanieWhereUniqueInput
  }

  export type MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutPromotionsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutPromotionsInput
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput
  }

  export type PecivoCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<PecivoCreateWithoutPromotionsInput, PecivoUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: PecivoCreateOrConnectWithoutPromotionsInput
    connect?: PecivoWhereUniqueInput
  }

  export type MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutPromotionsInput, MasoRybyALahodkyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutPromotionsInput
    connect?: MasoRybyALahodkyWhereUniqueInput
  }

  export type TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutPromotionsInput, TrvanlivePotravinyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutPromotionsInput
    connect?: TrvanlivePotravinyWhereUniqueInput
  }

  export type SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutPromotionsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutPromotionsInput
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput
  }

  export type MrazenePotravinyCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<MrazenePotravinyCreateWithoutPromotionsInput, MrazenePotravinyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutPromotionsInput
    connect?: MrazenePotravinyWhereUniqueInput
  }

  export type NapojeCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<NapojeCreateWithoutPromotionsInput, NapojeUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: NapojeCreateOrConnectWithoutPromotionsInput
    connect?: NapojeWhereUniqueInput
  }

  export type AlkoholCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<AlkoholCreateWithoutPromotionsInput, AlkoholUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: AlkoholCreateOrConnectWithoutPromotionsInput
    connect?: AlkoholWhereUniqueInput
  }

  export type StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutPromotionsInput, StarostlivostODomacnostUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutPromotionsInput
    connect?: StarostlivostODomacnostWhereUniqueInput
  }

  export type ZdravieAKrasaCreateNestedOneWithoutPromotionsInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutPromotionsInput, ZdravieAKrasaUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutPromotionsInput
    connect?: ZdravieAKrasaWhereUniqueInput
  }

  export type PromotionUpdateattributesInput = {
    set?: string[]
    push?: string | string[]
  }

  export type OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutPromotionsInput, OvocieAZeleninyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutPromotionsInput
    upsert?: OvocieAZeleninyUpsertWithoutPromotionsInput
    disconnect?: OvocieAZeleninyWhereInput | boolean
    delete?: OvocieAZeleninyWhereInput | boolean
    connect?: OvocieAZeleninyWhereUniqueInput
    update?: XOR<XOR<OvocieAZeleninyUpdateToOneWithWhereWithoutPromotionsInput, OvocieAZeleninyUpdateWithoutPromotionsInput>, OvocieAZeleninyUncheckedUpdateWithoutPromotionsInput>
  }

  export type GrilovanieUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<GrilovanieCreateWithoutPromotionsInput, GrilovanieUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: GrilovanieCreateOrConnectWithoutPromotionsInput
    upsert?: GrilovanieUpsertWithoutPromotionsInput
    disconnect?: GrilovanieWhereInput | boolean
    delete?: GrilovanieWhereInput | boolean
    connect?: GrilovanieWhereUniqueInput
    update?: XOR<XOR<GrilovanieUpdateToOneWithWhereWithoutPromotionsInput, GrilovanieUpdateWithoutPromotionsInput>, GrilovanieUncheckedUpdateWithoutPromotionsInput>
  }

  export type MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutPromotionsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutPromotionsInput
    upsert?: MliecneVyrobkyAVajciaUpsertWithoutPromotionsInput
    disconnect?: MliecneVyrobkyAVajciaWhereInput | boolean
    delete?: MliecneVyrobkyAVajciaWhereInput | boolean
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput
    update?: XOR<XOR<MliecneVyrobkyAVajciaUpdateToOneWithWhereWithoutPromotionsInput, MliecneVyrobkyAVajciaUpdateWithoutPromotionsInput>, MliecneVyrobkyAVajciaUncheckedUpdateWithoutPromotionsInput>
  }

  export type PecivoUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<PecivoCreateWithoutPromotionsInput, PecivoUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: PecivoCreateOrConnectWithoutPromotionsInput
    upsert?: PecivoUpsertWithoutPromotionsInput
    disconnect?: PecivoWhereInput | boolean
    delete?: PecivoWhereInput | boolean
    connect?: PecivoWhereUniqueInput
    update?: XOR<XOR<PecivoUpdateToOneWithWhereWithoutPromotionsInput, PecivoUpdateWithoutPromotionsInput>, PecivoUncheckedUpdateWithoutPromotionsInput>
  }

  export type MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutPromotionsInput, MasoRybyALahodkyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutPromotionsInput
    upsert?: MasoRybyALahodkyUpsertWithoutPromotionsInput
    disconnect?: MasoRybyALahodkyWhereInput | boolean
    delete?: MasoRybyALahodkyWhereInput | boolean
    connect?: MasoRybyALahodkyWhereUniqueInput
    update?: XOR<XOR<MasoRybyALahodkyUpdateToOneWithWhereWithoutPromotionsInput, MasoRybyALahodkyUpdateWithoutPromotionsInput>, MasoRybyALahodkyUncheckedUpdateWithoutPromotionsInput>
  }

  export type TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutPromotionsInput, TrvanlivePotravinyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutPromotionsInput
    upsert?: TrvanlivePotravinyUpsertWithoutPromotionsInput
    disconnect?: TrvanlivePotravinyWhereInput | boolean
    delete?: TrvanlivePotravinyWhereInput | boolean
    connect?: TrvanlivePotravinyWhereUniqueInput
    update?: XOR<XOR<TrvanlivePotravinyUpdateToOneWithWhereWithoutPromotionsInput, TrvanlivePotravinyUpdateWithoutPromotionsInput>, TrvanlivePotravinyUncheckedUpdateWithoutPromotionsInput>
  }

  export type SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutPromotionsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutPromotionsInput
    upsert?: SpecialnaAZdravaVyzivaUpsertWithoutPromotionsInput
    disconnect?: SpecialnaAZdravaVyzivaWhereInput | boolean
    delete?: SpecialnaAZdravaVyzivaWhereInput | boolean
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput
    update?: XOR<XOR<SpecialnaAZdravaVyzivaUpdateToOneWithWhereWithoutPromotionsInput, SpecialnaAZdravaVyzivaUpdateWithoutPromotionsInput>, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutPromotionsInput>
  }

  export type MrazenePotravinyUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<MrazenePotravinyCreateWithoutPromotionsInput, MrazenePotravinyUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutPromotionsInput
    upsert?: MrazenePotravinyUpsertWithoutPromotionsInput
    disconnect?: MrazenePotravinyWhereInput | boolean
    delete?: MrazenePotravinyWhereInput | boolean
    connect?: MrazenePotravinyWhereUniqueInput
    update?: XOR<XOR<MrazenePotravinyUpdateToOneWithWhereWithoutPromotionsInput, MrazenePotravinyUpdateWithoutPromotionsInput>, MrazenePotravinyUncheckedUpdateWithoutPromotionsInput>
  }

  export type NapojeUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<NapojeCreateWithoutPromotionsInput, NapojeUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: NapojeCreateOrConnectWithoutPromotionsInput
    upsert?: NapojeUpsertWithoutPromotionsInput
    disconnect?: NapojeWhereInput | boolean
    delete?: NapojeWhereInput | boolean
    connect?: NapojeWhereUniqueInput
    update?: XOR<XOR<NapojeUpdateToOneWithWhereWithoutPromotionsInput, NapojeUpdateWithoutPromotionsInput>, NapojeUncheckedUpdateWithoutPromotionsInput>
  }

  export type AlkoholUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<AlkoholCreateWithoutPromotionsInput, AlkoholUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: AlkoholCreateOrConnectWithoutPromotionsInput
    upsert?: AlkoholUpsertWithoutPromotionsInput
    disconnect?: AlkoholWhereInput | boolean
    delete?: AlkoholWhereInput | boolean
    connect?: AlkoholWhereUniqueInput
    update?: XOR<XOR<AlkoholUpdateToOneWithWhereWithoutPromotionsInput, AlkoholUpdateWithoutPromotionsInput>, AlkoholUncheckedUpdateWithoutPromotionsInput>
  }

  export type StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutPromotionsInput, StarostlivostODomacnostUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutPromotionsInput
    upsert?: StarostlivostODomacnostUpsertWithoutPromotionsInput
    disconnect?: StarostlivostODomacnostWhereInput | boolean
    delete?: StarostlivostODomacnostWhereInput | boolean
    connect?: StarostlivostODomacnostWhereUniqueInput
    update?: XOR<XOR<StarostlivostODomacnostUpdateToOneWithWhereWithoutPromotionsInput, StarostlivostODomacnostUpdateWithoutPromotionsInput>, StarostlivostODomacnostUncheckedUpdateWithoutPromotionsInput>
  }

  export type ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutPromotionsInput, ZdravieAKrasaUncheckedCreateWithoutPromotionsInput>
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutPromotionsInput
    upsert?: ZdravieAKrasaUpsertWithoutPromotionsInput
    disconnect?: ZdravieAKrasaWhereInput | boolean
    delete?: ZdravieAKrasaWhereInput | boolean
    connect?: ZdravieAKrasaWhereUniqueInput
    update?: XOR<XOR<ZdravieAKrasaUpdateToOneWithWhereWithoutPromotionsInput, ZdravieAKrasaUpdateWithoutPromotionsInput>, ZdravieAKrasaUncheckedUpdateWithoutPromotionsInput>
  }

  export type ShoppingListItemCreateNestedManyWithoutShoppingListInput = {
    create?: XOR<ShoppingListItemCreateWithoutShoppingListInput, ShoppingListItemUncheckedCreateWithoutShoppingListInput> | ShoppingListItemCreateWithoutShoppingListInput[] | ShoppingListItemUncheckedCreateWithoutShoppingListInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutShoppingListInput | ShoppingListItemCreateOrConnectWithoutShoppingListInput[]
    createMany?: ShoppingListItemCreateManyShoppingListInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type ShoppingListItemUncheckedCreateNestedManyWithoutShoppingListInput = {
    create?: XOR<ShoppingListItemCreateWithoutShoppingListInput, ShoppingListItemUncheckedCreateWithoutShoppingListInput> | ShoppingListItemCreateWithoutShoppingListInput[] | ShoppingListItemUncheckedCreateWithoutShoppingListInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutShoppingListInput | ShoppingListItemCreateOrConnectWithoutShoppingListInput[]
    createMany?: ShoppingListItemCreateManyShoppingListInputEnvelope
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type ShoppingListItemUpdateManyWithoutShoppingListNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutShoppingListInput, ShoppingListItemUncheckedCreateWithoutShoppingListInput> | ShoppingListItemCreateWithoutShoppingListInput[] | ShoppingListItemUncheckedCreateWithoutShoppingListInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutShoppingListInput | ShoppingListItemCreateOrConnectWithoutShoppingListInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutShoppingListInput | ShoppingListItemUpsertWithWhereUniqueWithoutShoppingListInput[]
    createMany?: ShoppingListItemCreateManyShoppingListInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutShoppingListInput | ShoppingListItemUpdateWithWhereUniqueWithoutShoppingListInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutShoppingListInput | ShoppingListItemUpdateManyWithWhereWithoutShoppingListInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutShoppingListNestedInput = {
    create?: XOR<ShoppingListItemCreateWithoutShoppingListInput, ShoppingListItemUncheckedCreateWithoutShoppingListInput> | ShoppingListItemCreateWithoutShoppingListInput[] | ShoppingListItemUncheckedCreateWithoutShoppingListInput[]
    connectOrCreate?: ShoppingListItemCreateOrConnectWithoutShoppingListInput | ShoppingListItemCreateOrConnectWithoutShoppingListInput[]
    upsert?: ShoppingListItemUpsertWithWhereUniqueWithoutShoppingListInput | ShoppingListItemUpsertWithWhereUniqueWithoutShoppingListInput[]
    createMany?: ShoppingListItemCreateManyShoppingListInputEnvelope
    set?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    disconnect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    delete?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    connect?: ShoppingListItemWhereUniqueInput | ShoppingListItemWhereUniqueInput[]
    update?: ShoppingListItemUpdateWithWhereUniqueWithoutShoppingListInput | ShoppingListItemUpdateWithWhereUniqueWithoutShoppingListInput[]
    updateMany?: ShoppingListItemUpdateManyWithWhereWithoutShoppingListInput | ShoppingListItemUpdateManyWithWhereWithoutShoppingListInput[]
    deleteMany?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
  }

  export type ShoppingListCreateNestedOneWithoutItemsInput = {
    create?: XOR<ShoppingListCreateWithoutItemsInput, ShoppingListUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ShoppingListCreateOrConnectWithoutItemsInput
    connect?: ShoppingListWhereUniqueInput
  }

  export type ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutShoppingListItemInput, ZdravieAKrasaUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutShoppingListItemInput
    connect?: ZdravieAKrasaWhereUniqueInput
  }

  export type OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutShoppingListItemInput, OvocieAZeleninyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutShoppingListItemInput
    connect?: OvocieAZeleninyWhereUniqueInput
  }

  export type GrilovanieCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<GrilovanieCreateWithoutShoppingListItemInput, GrilovanieUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: GrilovanieCreateOrConnectWithoutShoppingListItemInput
    connect?: GrilovanieWhereUniqueInput
  }

  export type StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutShoppingListItemInput, StarostlivostODomacnostUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutShoppingListItemInput
    connect?: StarostlivostODomacnostWhereUniqueInput
  }

  export type PecivoCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<PecivoCreateWithoutShoppingListItemInput, PecivoUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: PecivoCreateOrConnectWithoutShoppingListItemInput
    connect?: PecivoWhereUniqueInput
  }

  export type MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutShoppingListItemInput, MasoRybyALahodkyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutShoppingListItemInput
    connect?: MasoRybyALahodkyWhereUniqueInput
  }

  export type MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutShoppingListItemInput
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput
  }

  export type TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutShoppingListItemInput, TrvanlivePotravinyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutShoppingListItemInput
    connect?: TrvanlivePotravinyWhereUniqueInput
  }

  export type SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutShoppingListItemInput
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput
  }

  export type MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<MrazenePotravinyCreateWithoutShoppingListItemInput, MrazenePotravinyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutShoppingListItemInput
    connect?: MrazenePotravinyWhereUniqueInput
  }

  export type NapojeCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<NapojeCreateWithoutShoppingListItemInput, NapojeUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: NapojeCreateOrConnectWithoutShoppingListItemInput
    connect?: NapojeWhereUniqueInput
  }

  export type AlkoholCreateNestedOneWithoutShoppingListItemInput = {
    create?: XOR<AlkoholCreateWithoutShoppingListItemInput, AlkoholUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: AlkoholCreateOrConnectWithoutShoppingListItemInput
    connect?: AlkoholWhereUniqueInput
  }

  export type ShoppingListUpdateOneRequiredWithoutItemsNestedInput = {
    create?: XOR<ShoppingListCreateWithoutItemsInput, ShoppingListUncheckedCreateWithoutItemsInput>
    connectOrCreate?: ShoppingListCreateOrConnectWithoutItemsInput
    upsert?: ShoppingListUpsertWithoutItemsInput
    connect?: ShoppingListWhereUniqueInput
    update?: XOR<XOR<ShoppingListUpdateToOneWithWhereWithoutItemsInput, ShoppingListUpdateWithoutItemsInput>, ShoppingListUncheckedUpdateWithoutItemsInput>
  }

  export type ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<ZdravieAKrasaCreateWithoutShoppingListItemInput, ZdravieAKrasaUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: ZdravieAKrasaCreateOrConnectWithoutShoppingListItemInput
    upsert?: ZdravieAKrasaUpsertWithoutShoppingListItemInput
    disconnect?: ZdravieAKrasaWhereInput | boolean
    delete?: ZdravieAKrasaWhereInput | boolean
    connect?: ZdravieAKrasaWhereUniqueInput
    update?: XOR<XOR<ZdravieAKrasaUpdateToOneWithWhereWithoutShoppingListItemInput, ZdravieAKrasaUpdateWithoutShoppingListItemInput>, ZdravieAKrasaUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<OvocieAZeleninyCreateWithoutShoppingListItemInput, OvocieAZeleninyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: OvocieAZeleninyCreateOrConnectWithoutShoppingListItemInput
    upsert?: OvocieAZeleninyUpsertWithoutShoppingListItemInput
    disconnect?: OvocieAZeleninyWhereInput | boolean
    delete?: OvocieAZeleninyWhereInput | boolean
    connect?: OvocieAZeleninyWhereUniqueInput
    update?: XOR<XOR<OvocieAZeleninyUpdateToOneWithWhereWithoutShoppingListItemInput, OvocieAZeleninyUpdateWithoutShoppingListItemInput>, OvocieAZeleninyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type GrilovanieUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<GrilovanieCreateWithoutShoppingListItemInput, GrilovanieUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: GrilovanieCreateOrConnectWithoutShoppingListItemInput
    upsert?: GrilovanieUpsertWithoutShoppingListItemInput
    disconnect?: GrilovanieWhereInput | boolean
    delete?: GrilovanieWhereInput | boolean
    connect?: GrilovanieWhereUniqueInput
    update?: XOR<XOR<GrilovanieUpdateToOneWithWhereWithoutShoppingListItemInput, GrilovanieUpdateWithoutShoppingListItemInput>, GrilovanieUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<StarostlivostODomacnostCreateWithoutShoppingListItemInput, StarostlivostODomacnostUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: StarostlivostODomacnostCreateOrConnectWithoutShoppingListItemInput
    upsert?: StarostlivostODomacnostUpsertWithoutShoppingListItemInput
    disconnect?: StarostlivostODomacnostWhereInput | boolean
    delete?: StarostlivostODomacnostWhereInput | boolean
    connect?: StarostlivostODomacnostWhereUniqueInput
    update?: XOR<XOR<StarostlivostODomacnostUpdateToOneWithWhereWithoutShoppingListItemInput, StarostlivostODomacnostUpdateWithoutShoppingListItemInput>, StarostlivostODomacnostUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type PecivoUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<PecivoCreateWithoutShoppingListItemInput, PecivoUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: PecivoCreateOrConnectWithoutShoppingListItemInput
    upsert?: PecivoUpsertWithoutShoppingListItemInput
    disconnect?: PecivoWhereInput | boolean
    delete?: PecivoWhereInput | boolean
    connect?: PecivoWhereUniqueInput
    update?: XOR<XOR<PecivoUpdateToOneWithWhereWithoutShoppingListItemInput, PecivoUpdateWithoutShoppingListItemInput>, PecivoUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<MasoRybyALahodkyCreateWithoutShoppingListItemInput, MasoRybyALahodkyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: MasoRybyALahodkyCreateOrConnectWithoutShoppingListItemInput
    upsert?: MasoRybyALahodkyUpsertWithoutShoppingListItemInput
    disconnect?: MasoRybyALahodkyWhereInput | boolean
    delete?: MasoRybyALahodkyWhereInput | boolean
    connect?: MasoRybyALahodkyWhereUniqueInput
    update?: XOR<XOR<MasoRybyALahodkyUpdateToOneWithWhereWithoutShoppingListItemInput, MasoRybyALahodkyUpdateWithoutShoppingListItemInput>, MasoRybyALahodkyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<MliecneVyrobkyAVajciaCreateWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: MliecneVyrobkyAVajciaCreateOrConnectWithoutShoppingListItemInput
    upsert?: MliecneVyrobkyAVajciaUpsertWithoutShoppingListItemInput
    disconnect?: MliecneVyrobkyAVajciaWhereInput | boolean
    delete?: MliecneVyrobkyAVajciaWhereInput | boolean
    connect?: MliecneVyrobkyAVajciaWhereUniqueInput
    update?: XOR<XOR<MliecneVyrobkyAVajciaUpdateToOneWithWhereWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUpdateWithoutShoppingListItemInput>, MliecneVyrobkyAVajciaUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<TrvanlivePotravinyCreateWithoutShoppingListItemInput, TrvanlivePotravinyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: TrvanlivePotravinyCreateOrConnectWithoutShoppingListItemInput
    upsert?: TrvanlivePotravinyUpsertWithoutShoppingListItemInput
    disconnect?: TrvanlivePotravinyWhereInput | boolean
    delete?: TrvanlivePotravinyWhereInput | boolean
    connect?: TrvanlivePotravinyWhereUniqueInput
    update?: XOR<XOR<TrvanlivePotravinyUpdateToOneWithWhereWithoutShoppingListItemInput, TrvanlivePotravinyUpdateWithoutShoppingListItemInput>, TrvanlivePotravinyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<SpecialnaAZdravaVyzivaCreateWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: SpecialnaAZdravaVyzivaCreateOrConnectWithoutShoppingListItemInput
    upsert?: SpecialnaAZdravaVyzivaUpsertWithoutShoppingListItemInput
    disconnect?: SpecialnaAZdravaVyzivaWhereInput | boolean
    delete?: SpecialnaAZdravaVyzivaWhereInput | boolean
    connect?: SpecialnaAZdravaVyzivaWhereUniqueInput
    update?: XOR<XOR<SpecialnaAZdravaVyzivaUpdateToOneWithWhereWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUpdateWithoutShoppingListItemInput>, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<MrazenePotravinyCreateWithoutShoppingListItemInput, MrazenePotravinyUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: MrazenePotravinyCreateOrConnectWithoutShoppingListItemInput
    upsert?: MrazenePotravinyUpsertWithoutShoppingListItemInput
    disconnect?: MrazenePotravinyWhereInput | boolean
    delete?: MrazenePotravinyWhereInput | boolean
    connect?: MrazenePotravinyWhereUniqueInput
    update?: XOR<XOR<MrazenePotravinyUpdateToOneWithWhereWithoutShoppingListItemInput, MrazenePotravinyUpdateWithoutShoppingListItemInput>, MrazenePotravinyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type NapojeUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<NapojeCreateWithoutShoppingListItemInput, NapojeUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: NapojeCreateOrConnectWithoutShoppingListItemInput
    upsert?: NapojeUpsertWithoutShoppingListItemInput
    disconnect?: NapojeWhereInput | boolean
    delete?: NapojeWhereInput | boolean
    connect?: NapojeWhereUniqueInput
    update?: XOR<XOR<NapojeUpdateToOneWithWhereWithoutShoppingListItemInput, NapojeUpdateWithoutShoppingListItemInput>, NapojeUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type AlkoholUpdateOneWithoutShoppingListItemNestedInput = {
    create?: XOR<AlkoholCreateWithoutShoppingListItemInput, AlkoholUncheckedCreateWithoutShoppingListItemInput>
    connectOrCreate?: AlkoholCreateOrConnectWithoutShoppingListItemInput
    upsert?: AlkoholUpsertWithoutShoppingListItemInput
    disconnect?: AlkoholWhereInput | boolean
    delete?: AlkoholWhereInput | boolean
    connect?: AlkoholWhereUniqueInput
    update?: XOR<XOR<AlkoholUpdateToOneWithWhereWithoutShoppingListItemInput, AlkoholUpdateWithoutShoppingListItemInput>, AlkoholUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type OvocieAZeleninyCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionCreateNestedManyWithoutOvocieAZeleninyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutOvocieAZeleninyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyCreateOrConnectWithoutProductAnalyticsInput = {
    where: OvocieAZeleninyWhereUniqueInput
    create: XOR<OvocieAZeleninyCreateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type OvocieAZeleninyCreateManyProductAnalyticsInputEnvelope = {
    data: OvocieAZeleninyCreateManyProductAnalyticsInput | OvocieAZeleninyCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type GrilovanieCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutGrilovanieInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutGrilovanieInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieCreateOrConnectWithoutProductAnalyticsInput = {
    where: GrilovanieWhereUniqueInput
    create: XOR<GrilovanieCreateWithoutProductAnalyticsInput, GrilovanieUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type GrilovanieCreateManyProductAnalyticsInputEnvelope = {
    data: GrilovanieCreateManyProductAnalyticsInput | GrilovanieCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type PecivoCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutPecivoInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutPecivoInput
  }

  export type PecivoUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutPecivoInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutPecivoInput
  }

  export type PecivoCreateOrConnectWithoutProductAnalyticsInput = {
    where: PecivoWhereUniqueInput
    create: XOR<PecivoCreateWithoutProductAnalyticsInput, PecivoUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type PecivoCreateManyProductAnalyticsInputEnvelope = {
    data: PecivoCreateManyProductAnalyticsInput | PecivoCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type MasoRybyALahodkyCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMasoRybyALahodkyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyCreateOrConnectWithoutProductAnalyticsInput = {
    where: MasoRybyALahodkyWhereUniqueInput
    create: XOR<MasoRybyALahodkyCreateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type MasoRybyALahodkyCreateManyProductAnalyticsInputEnvelope = {
    data: MasoRybyALahodkyCreateManyProductAnalyticsInput | MasoRybyALahodkyCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaCreateOrConnectWithoutProductAnalyticsInput = {
    where: MliecneVyrobkyAVajciaWhereUniqueInput
    create: XOR<MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type MliecneVyrobkyAVajciaCreateManyProductAnalyticsInputEnvelope = {
    data: MliecneVyrobkyAVajciaCreateManyProductAnalyticsInput | MliecneVyrobkyAVajciaCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type TrvanlivePotravinyCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutTrvanlivePotravinyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyCreateOrConnectWithoutProductAnalyticsInput = {
    where: TrvanlivePotravinyWhereUniqueInput
    create: XOR<TrvanlivePotravinyCreateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type TrvanlivePotravinyCreateManyProductAnalyticsInputEnvelope = {
    data: TrvanlivePotravinyCreateManyProductAnalyticsInput | TrvanlivePotravinyCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaCreateOrConnectWithoutProductAnalyticsInput = {
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
    create: XOR<SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInputEnvelope = {
    data: SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInput | SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type MrazenePotravinyCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMrazenePotravinyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutMrazenePotravinyInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyCreateOrConnectWithoutProductAnalyticsInput = {
    where: MrazenePotravinyWhereUniqueInput
    create: XOR<MrazenePotravinyCreateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type MrazenePotravinyCreateManyProductAnalyticsInputEnvelope = {
    data: MrazenePotravinyCreateManyProductAnalyticsInput | MrazenePotravinyCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type NapojeCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutNapojeInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutNapojeInput
  }

  export type NapojeUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutNapojeInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutNapojeInput
  }

  export type NapojeCreateOrConnectWithoutProductAnalyticsInput = {
    where: NapojeWhereUniqueInput
    create: XOR<NapojeCreateWithoutProductAnalyticsInput, NapojeUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type NapojeCreateManyProductAnalyticsInputEnvelope = {
    data: NapojeCreateManyProductAnalyticsInput | NapojeCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type AlkoholCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutAlkoholInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutAlkoholInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholCreateOrConnectWithoutProductAnalyticsInput = {
    where: AlkoholWhereUniqueInput
    create: XOR<AlkoholCreateWithoutProductAnalyticsInput, AlkoholUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type AlkoholCreateManyProductAnalyticsInputEnvelope = {
    data: AlkoholCreateManyProductAnalyticsInput | AlkoholCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type StarostlivostODomacnostCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutStarostlivostODomacnostInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostCreateOrConnectWithoutProductAnalyticsInput = {
    where: StarostlivostODomacnostWhereUniqueInput
    create: XOR<StarostlivostODomacnostCreateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type StarostlivostODomacnostCreateManyProductAnalyticsInputEnvelope = {
    data: StarostlivostODomacnostCreateManyProductAnalyticsInput | StarostlivostODomacnostCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type ZdravieAKrasaCreateWithoutProductAnalyticsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionCreateNestedManyWithoutZdravieAKrasaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutZdravieAKrasaInput
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaCreateOrConnectWithoutProductAnalyticsInput = {
    where: ZdravieAKrasaWhereUniqueInput
    create: XOR<ZdravieAKrasaCreateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type ZdravieAKrasaCreateManyProductAnalyticsInputEnvelope = {
    data: ZdravieAKrasaCreateManyProductAnalyticsInput | ZdravieAKrasaCreateManyProductAnalyticsInput[]
    skipDuplicates?: boolean
  }

  export type OvocieAZeleninyUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: OvocieAZeleninyWhereUniqueInput
    update: XOR<OvocieAZeleninyUpdateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<OvocieAZeleninyCreateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type OvocieAZeleninyUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: OvocieAZeleninyWhereUniqueInput
    data: XOR<OvocieAZeleninyUpdateWithoutProductAnalyticsInput, OvocieAZeleninyUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type OvocieAZeleninyUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: OvocieAZeleninyScalarWhereInput
    data: XOR<OvocieAZeleninyUpdateManyMutationInput, OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type OvocieAZeleninyScalarWhereInput = {
    AND?: OvocieAZeleninyScalarWhereInput | OvocieAZeleninyScalarWhereInput[]
    OR?: OvocieAZeleninyScalarWhereInput[]
    NOT?: OvocieAZeleninyScalarWhereInput | OvocieAZeleninyScalarWhereInput[]
    id?: IntFilter<"OvocieAZeleniny"> | number
    productId?: StringFilter<"OvocieAZeleniny"> | string
    title?: StringFilter<"OvocieAZeleniny"> | string
    price?: FloatFilter<"OvocieAZeleniny"> | number
    unitPrice?: FloatFilter<"OvocieAZeleniny"> | number
    imageUrl?: StringFilter<"OvocieAZeleniny"> | string
    unitOfMeasure?: StringFilter<"OvocieAZeleniny"> | string
    isForSale?: BoolFilter<"OvocieAZeleniny"> | boolean
    aisleName?: StringFilter<"OvocieAZeleniny"> | string
    lastUpdated?: DateTimeFilter<"OvocieAZeleniny"> | Date | string
    category?: StringFilter<"OvocieAZeleniny"> | string
    superDepartmentName?: StringFilter<"OvocieAZeleniny"> | string
    hasPromotions?: BoolFilter<"OvocieAZeleniny"> | boolean
    analyticsId?: IntNullableFilter<"OvocieAZeleniny"> | number | null
    productAnalyticsId?: IntNullableFilter<"OvocieAZeleniny"> | number | null
  }

  export type GrilovanieUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: GrilovanieWhereUniqueInput
    update: XOR<GrilovanieUpdateWithoutProductAnalyticsInput, GrilovanieUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<GrilovanieCreateWithoutProductAnalyticsInput, GrilovanieUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type GrilovanieUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: GrilovanieWhereUniqueInput
    data: XOR<GrilovanieUpdateWithoutProductAnalyticsInput, GrilovanieUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type GrilovanieUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: GrilovanieScalarWhereInput
    data: XOR<GrilovanieUpdateManyMutationInput, GrilovanieUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type GrilovanieScalarWhereInput = {
    AND?: GrilovanieScalarWhereInput | GrilovanieScalarWhereInput[]
    OR?: GrilovanieScalarWhereInput[]
    NOT?: GrilovanieScalarWhereInput | GrilovanieScalarWhereInput[]
    id?: IntFilter<"Grilovanie"> | number
    productId?: StringFilter<"Grilovanie"> | string
    title?: StringFilter<"Grilovanie"> | string
    price?: FloatFilter<"Grilovanie"> | number
    unitPrice?: FloatFilter<"Grilovanie"> | number
    imageUrl?: StringFilter<"Grilovanie"> | string
    unitOfMeasure?: StringFilter<"Grilovanie"> | string
    isForSale?: BoolFilter<"Grilovanie"> | boolean
    aisleName?: StringFilter<"Grilovanie"> | string
    lastUpdated?: DateTimeFilter<"Grilovanie"> | Date | string
    category?: StringFilter<"Grilovanie"> | string
    superDepartmentName?: StringFilter<"Grilovanie"> | string
    hasPromotions?: BoolFilter<"Grilovanie"> | boolean
    productAnalyticsId?: IntNullableFilter<"Grilovanie"> | number | null
  }

  export type PecivoUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: PecivoWhereUniqueInput
    update: XOR<PecivoUpdateWithoutProductAnalyticsInput, PecivoUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<PecivoCreateWithoutProductAnalyticsInput, PecivoUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type PecivoUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: PecivoWhereUniqueInput
    data: XOR<PecivoUpdateWithoutProductAnalyticsInput, PecivoUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type PecivoUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: PecivoScalarWhereInput
    data: XOR<PecivoUpdateManyMutationInput, PecivoUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type PecivoScalarWhereInput = {
    AND?: PecivoScalarWhereInput | PecivoScalarWhereInput[]
    OR?: PecivoScalarWhereInput[]
    NOT?: PecivoScalarWhereInput | PecivoScalarWhereInput[]
    id?: IntFilter<"Pecivo"> | number
    productId?: StringFilter<"Pecivo"> | string
    title?: StringFilter<"Pecivo"> | string
    price?: FloatFilter<"Pecivo"> | number
    unitPrice?: FloatFilter<"Pecivo"> | number
    imageUrl?: StringFilter<"Pecivo"> | string
    unitOfMeasure?: StringFilter<"Pecivo"> | string
    isForSale?: BoolFilter<"Pecivo"> | boolean
    aisleName?: StringFilter<"Pecivo"> | string
    lastUpdated?: DateTimeFilter<"Pecivo"> | Date | string
    category?: StringFilter<"Pecivo"> | string
    superDepartmentName?: StringFilter<"Pecivo"> | string
    hasPromotions?: BoolFilter<"Pecivo"> | boolean
    productAnalyticsId?: IntNullableFilter<"Pecivo"> | number | null
  }

  export type MasoRybyALahodkyUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: MasoRybyALahodkyWhereUniqueInput
    update: XOR<MasoRybyALahodkyUpdateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<MasoRybyALahodkyCreateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type MasoRybyALahodkyUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: MasoRybyALahodkyWhereUniqueInput
    data: XOR<MasoRybyALahodkyUpdateWithoutProductAnalyticsInput, MasoRybyALahodkyUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type MasoRybyALahodkyUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: MasoRybyALahodkyScalarWhereInput
    data: XOR<MasoRybyALahodkyUpdateManyMutationInput, MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type MasoRybyALahodkyScalarWhereInput = {
    AND?: MasoRybyALahodkyScalarWhereInput | MasoRybyALahodkyScalarWhereInput[]
    OR?: MasoRybyALahodkyScalarWhereInput[]
    NOT?: MasoRybyALahodkyScalarWhereInput | MasoRybyALahodkyScalarWhereInput[]
    id?: IntFilter<"MasoRybyALahodky"> | number
    productId?: StringFilter<"MasoRybyALahodky"> | string
    title?: StringFilter<"MasoRybyALahodky"> | string
    price?: FloatFilter<"MasoRybyALahodky"> | number
    unitPrice?: FloatFilter<"MasoRybyALahodky"> | number
    imageUrl?: StringFilter<"MasoRybyALahodky"> | string
    unitOfMeasure?: StringFilter<"MasoRybyALahodky"> | string
    isForSale?: BoolFilter<"MasoRybyALahodky"> | boolean
    aisleName?: StringFilter<"MasoRybyALahodky"> | string
    lastUpdated?: DateTimeFilter<"MasoRybyALahodky"> | Date | string
    category?: StringFilter<"MasoRybyALahodky"> | string
    superDepartmentName?: StringFilter<"MasoRybyALahodky"> | string
    hasPromotions?: BoolFilter<"MasoRybyALahodky"> | boolean
    productAnalyticsId?: IntNullableFilter<"MasoRybyALahodky"> | number | null
  }

  export type MliecneVyrobkyAVajciaUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: MliecneVyrobkyAVajciaWhereUniqueInput
    update: XOR<MliecneVyrobkyAVajciaUpdateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<MliecneVyrobkyAVajciaCreateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type MliecneVyrobkyAVajciaUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: MliecneVyrobkyAVajciaWhereUniqueInput
    data: XOR<MliecneVyrobkyAVajciaUpdateWithoutProductAnalyticsInput, MliecneVyrobkyAVajciaUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type MliecneVyrobkyAVajciaUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: MliecneVyrobkyAVajciaScalarWhereInput
    data: XOR<MliecneVyrobkyAVajciaUpdateManyMutationInput, MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type MliecneVyrobkyAVajciaScalarWhereInput = {
    AND?: MliecneVyrobkyAVajciaScalarWhereInput | MliecneVyrobkyAVajciaScalarWhereInput[]
    OR?: MliecneVyrobkyAVajciaScalarWhereInput[]
    NOT?: MliecneVyrobkyAVajciaScalarWhereInput | MliecneVyrobkyAVajciaScalarWhereInput[]
    id?: IntFilter<"MliecneVyrobkyAVajcia"> | number
    productId?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    title?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    price?: FloatFilter<"MliecneVyrobkyAVajcia"> | number
    unitPrice?: FloatFilter<"MliecneVyrobkyAVajcia"> | number
    imageUrl?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    unitOfMeasure?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    isForSale?: BoolFilter<"MliecneVyrobkyAVajcia"> | boolean
    aisleName?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    lastUpdated?: DateTimeFilter<"MliecneVyrobkyAVajcia"> | Date | string
    category?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    superDepartmentName?: StringFilter<"MliecneVyrobkyAVajcia"> | string
    hasPromotions?: BoolFilter<"MliecneVyrobkyAVajcia"> | boolean
    productAnalyticsId?: IntNullableFilter<"MliecneVyrobkyAVajcia"> | number | null
  }

  export type TrvanlivePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: TrvanlivePotravinyWhereUniqueInput
    update: XOR<TrvanlivePotravinyUpdateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<TrvanlivePotravinyCreateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type TrvanlivePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: TrvanlivePotravinyWhereUniqueInput
    data: XOR<TrvanlivePotravinyUpdateWithoutProductAnalyticsInput, TrvanlivePotravinyUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type TrvanlivePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: TrvanlivePotravinyScalarWhereInput
    data: XOR<TrvanlivePotravinyUpdateManyMutationInput, TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type TrvanlivePotravinyScalarWhereInput = {
    AND?: TrvanlivePotravinyScalarWhereInput | TrvanlivePotravinyScalarWhereInput[]
    OR?: TrvanlivePotravinyScalarWhereInput[]
    NOT?: TrvanlivePotravinyScalarWhereInput | TrvanlivePotravinyScalarWhereInput[]
    id?: IntFilter<"TrvanlivePotraviny"> | number
    productId?: StringFilter<"TrvanlivePotraviny"> | string
    title?: StringFilter<"TrvanlivePotraviny"> | string
    price?: FloatFilter<"TrvanlivePotraviny"> | number
    unitPrice?: FloatFilter<"TrvanlivePotraviny"> | number
    imageUrl?: StringFilter<"TrvanlivePotraviny"> | string
    unitOfMeasure?: StringFilter<"TrvanlivePotraviny"> | string
    isForSale?: BoolFilter<"TrvanlivePotraviny"> | boolean
    aisleName?: StringFilter<"TrvanlivePotraviny"> | string
    lastUpdated?: DateTimeFilter<"TrvanlivePotraviny"> | Date | string
    category?: StringFilter<"TrvanlivePotraviny"> | string
    superDepartmentName?: StringFilter<"TrvanlivePotraviny"> | string
    hasPromotions?: BoolFilter<"TrvanlivePotraviny"> | boolean
    productAnalyticsId?: IntNullableFilter<"TrvanlivePotraviny"> | number | null
  }

  export type SpecialnaAZdravaVyzivaUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
    update: XOR<SpecialnaAZdravaVyzivaUpdateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<SpecialnaAZdravaVyzivaCreateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type SpecialnaAZdravaVyzivaUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
    data: XOR<SpecialnaAZdravaVyzivaUpdateWithoutProductAnalyticsInput, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type SpecialnaAZdravaVyzivaUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: SpecialnaAZdravaVyzivaScalarWhereInput
    data: XOR<SpecialnaAZdravaVyzivaUpdateManyMutationInput, SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type SpecialnaAZdravaVyzivaScalarWhereInput = {
    AND?: SpecialnaAZdravaVyzivaScalarWhereInput | SpecialnaAZdravaVyzivaScalarWhereInput[]
    OR?: SpecialnaAZdravaVyzivaScalarWhereInput[]
    NOT?: SpecialnaAZdravaVyzivaScalarWhereInput | SpecialnaAZdravaVyzivaScalarWhereInput[]
    id?: IntFilter<"SpecialnaAZdravaVyziva"> | number
    productId?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    title?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    price?: FloatFilter<"SpecialnaAZdravaVyziva"> | number
    unitPrice?: FloatFilter<"SpecialnaAZdravaVyziva"> | number
    imageUrl?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    unitOfMeasure?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    isForSale?: BoolFilter<"SpecialnaAZdravaVyziva"> | boolean
    aisleName?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    lastUpdated?: DateTimeFilter<"SpecialnaAZdravaVyziva"> | Date | string
    category?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    superDepartmentName?: StringFilter<"SpecialnaAZdravaVyziva"> | string
    hasPromotions?: BoolFilter<"SpecialnaAZdravaVyziva"> | boolean
    productAnalyticsId?: IntNullableFilter<"SpecialnaAZdravaVyziva"> | number | null
  }

  export type MrazenePotravinyUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: MrazenePotravinyWhereUniqueInput
    update: XOR<MrazenePotravinyUpdateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<MrazenePotravinyCreateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type MrazenePotravinyUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: MrazenePotravinyWhereUniqueInput
    data: XOR<MrazenePotravinyUpdateWithoutProductAnalyticsInput, MrazenePotravinyUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type MrazenePotravinyUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: MrazenePotravinyScalarWhereInput
    data: XOR<MrazenePotravinyUpdateManyMutationInput, MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type MrazenePotravinyScalarWhereInput = {
    AND?: MrazenePotravinyScalarWhereInput | MrazenePotravinyScalarWhereInput[]
    OR?: MrazenePotravinyScalarWhereInput[]
    NOT?: MrazenePotravinyScalarWhereInput | MrazenePotravinyScalarWhereInput[]
    id?: IntFilter<"MrazenePotraviny"> | number
    productId?: StringFilter<"MrazenePotraviny"> | string
    title?: StringFilter<"MrazenePotraviny"> | string
    price?: FloatFilter<"MrazenePotraviny"> | number
    unitPrice?: FloatFilter<"MrazenePotraviny"> | number
    imageUrl?: StringFilter<"MrazenePotraviny"> | string
    unitOfMeasure?: StringFilter<"MrazenePotraviny"> | string
    isForSale?: BoolFilter<"MrazenePotraviny"> | boolean
    aisleName?: StringFilter<"MrazenePotraviny"> | string
    lastUpdated?: DateTimeFilter<"MrazenePotraviny"> | Date | string
    category?: StringFilter<"MrazenePotraviny"> | string
    superDepartmentName?: StringFilter<"MrazenePotraviny"> | string
    hasPromotions?: BoolFilter<"MrazenePotraviny"> | boolean
    productAnalyticsId?: IntNullableFilter<"MrazenePotraviny"> | number | null
  }

  export type NapojeUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: NapojeWhereUniqueInput
    update: XOR<NapojeUpdateWithoutProductAnalyticsInput, NapojeUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<NapojeCreateWithoutProductAnalyticsInput, NapojeUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type NapojeUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: NapojeWhereUniqueInput
    data: XOR<NapojeUpdateWithoutProductAnalyticsInput, NapojeUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type NapojeUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: NapojeScalarWhereInput
    data: XOR<NapojeUpdateManyMutationInput, NapojeUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type NapojeScalarWhereInput = {
    AND?: NapojeScalarWhereInput | NapojeScalarWhereInput[]
    OR?: NapojeScalarWhereInput[]
    NOT?: NapojeScalarWhereInput | NapojeScalarWhereInput[]
    id?: IntFilter<"Napoje"> | number
    productId?: StringFilter<"Napoje"> | string
    title?: StringFilter<"Napoje"> | string
    price?: FloatFilter<"Napoje"> | number
    unitPrice?: FloatFilter<"Napoje"> | number
    imageUrl?: StringFilter<"Napoje"> | string
    unitOfMeasure?: StringFilter<"Napoje"> | string
    isForSale?: BoolFilter<"Napoje"> | boolean
    aisleName?: StringFilter<"Napoje"> | string
    lastUpdated?: DateTimeFilter<"Napoje"> | Date | string
    category?: StringFilter<"Napoje"> | string
    superDepartmentName?: StringFilter<"Napoje"> | string
    hasPromotions?: BoolFilter<"Napoje"> | boolean
    productAnalyticsId?: IntNullableFilter<"Napoje"> | number | null
  }

  export type AlkoholUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: AlkoholWhereUniqueInput
    update: XOR<AlkoholUpdateWithoutProductAnalyticsInput, AlkoholUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<AlkoholCreateWithoutProductAnalyticsInput, AlkoholUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type AlkoholUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: AlkoholWhereUniqueInput
    data: XOR<AlkoholUpdateWithoutProductAnalyticsInput, AlkoholUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type AlkoholUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: AlkoholScalarWhereInput
    data: XOR<AlkoholUpdateManyMutationInput, AlkoholUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type AlkoholScalarWhereInput = {
    AND?: AlkoholScalarWhereInput | AlkoholScalarWhereInput[]
    OR?: AlkoholScalarWhereInput[]
    NOT?: AlkoholScalarWhereInput | AlkoholScalarWhereInput[]
    id?: IntFilter<"Alkohol"> | number
    productId?: StringFilter<"Alkohol"> | string
    title?: StringFilter<"Alkohol"> | string
    price?: FloatFilter<"Alkohol"> | number
    unitPrice?: FloatFilter<"Alkohol"> | number
    imageUrl?: StringFilter<"Alkohol"> | string
    unitOfMeasure?: StringFilter<"Alkohol"> | string
    isForSale?: BoolFilter<"Alkohol"> | boolean
    aisleName?: StringFilter<"Alkohol"> | string
    lastUpdated?: DateTimeFilter<"Alkohol"> | Date | string
    category?: StringFilter<"Alkohol"> | string
    superDepartmentName?: StringFilter<"Alkohol"> | string
    hasPromotions?: BoolFilter<"Alkohol"> | boolean
    productAnalyticsId?: IntNullableFilter<"Alkohol"> | number | null
  }

  export type StarostlivostODomacnostUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: StarostlivostODomacnostWhereUniqueInput
    update: XOR<StarostlivostODomacnostUpdateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<StarostlivostODomacnostCreateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type StarostlivostODomacnostUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: StarostlivostODomacnostWhereUniqueInput
    data: XOR<StarostlivostODomacnostUpdateWithoutProductAnalyticsInput, StarostlivostODomacnostUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type StarostlivostODomacnostUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: StarostlivostODomacnostScalarWhereInput
    data: XOR<StarostlivostODomacnostUpdateManyMutationInput, StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type StarostlivostODomacnostScalarWhereInput = {
    AND?: StarostlivostODomacnostScalarWhereInput | StarostlivostODomacnostScalarWhereInput[]
    OR?: StarostlivostODomacnostScalarWhereInput[]
    NOT?: StarostlivostODomacnostScalarWhereInput | StarostlivostODomacnostScalarWhereInput[]
    id?: IntFilter<"StarostlivostODomacnost"> | number
    productId?: StringFilter<"StarostlivostODomacnost"> | string
    title?: StringFilter<"StarostlivostODomacnost"> | string
    price?: FloatFilter<"StarostlivostODomacnost"> | number
    unitPrice?: FloatFilter<"StarostlivostODomacnost"> | number
    imageUrl?: StringFilter<"StarostlivostODomacnost"> | string
    unitOfMeasure?: StringFilter<"StarostlivostODomacnost"> | string
    isForSale?: BoolFilter<"StarostlivostODomacnost"> | boolean
    aisleName?: StringFilter<"StarostlivostODomacnost"> | string
    lastUpdated?: DateTimeFilter<"StarostlivostODomacnost"> | Date | string
    category?: StringFilter<"StarostlivostODomacnost"> | string
    superDepartmentName?: StringFilter<"StarostlivostODomacnost"> | string
    hasPromotions?: BoolFilter<"StarostlivostODomacnost"> | boolean
    productAnalyticsId?: IntNullableFilter<"StarostlivostODomacnost"> | number | null
  }

  export type ZdravieAKrasaUpsertWithWhereUniqueWithoutProductAnalyticsInput = {
    where: ZdravieAKrasaWhereUniqueInput
    update: XOR<ZdravieAKrasaUpdateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedUpdateWithoutProductAnalyticsInput>
    create: XOR<ZdravieAKrasaCreateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedCreateWithoutProductAnalyticsInput>
  }

  export type ZdravieAKrasaUpdateWithWhereUniqueWithoutProductAnalyticsInput = {
    where: ZdravieAKrasaWhereUniqueInput
    data: XOR<ZdravieAKrasaUpdateWithoutProductAnalyticsInput, ZdravieAKrasaUncheckedUpdateWithoutProductAnalyticsInput>
  }

  export type ZdravieAKrasaUpdateManyWithWhereWithoutProductAnalyticsInput = {
    where: ZdravieAKrasaScalarWhereInput
    data: XOR<ZdravieAKrasaUpdateManyMutationInput, ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsInput>
  }

  export type ZdravieAKrasaScalarWhereInput = {
    AND?: ZdravieAKrasaScalarWhereInput | ZdravieAKrasaScalarWhereInput[]
    OR?: ZdravieAKrasaScalarWhereInput[]
    NOT?: ZdravieAKrasaScalarWhereInput | ZdravieAKrasaScalarWhereInput[]
    id?: IntFilter<"ZdravieAKrasa"> | number
    productId?: StringFilter<"ZdravieAKrasa"> | string
    title?: StringFilter<"ZdravieAKrasa"> | string
    price?: FloatFilter<"ZdravieAKrasa"> | number
    unitPrice?: FloatFilter<"ZdravieAKrasa"> | number
    imageUrl?: StringFilter<"ZdravieAKrasa"> | string
    unitOfMeasure?: StringFilter<"ZdravieAKrasa"> | string
    isForSale?: BoolFilter<"ZdravieAKrasa"> | boolean
    aisleName?: StringFilter<"ZdravieAKrasa"> | string
    lastUpdated?: DateTimeFilter<"ZdravieAKrasa"> | Date | string
    category?: StringFilter<"ZdravieAKrasa"> | string
    superDepartmentName?: StringFilter<"ZdravieAKrasa"> | string
    hasPromotions?: BoolFilter<"ZdravieAKrasa"> | boolean
    analyticsId?: IntNullableFilter<"ZdravieAKrasa"> | number | null
    productAnalyticsId?: IntNullableFilter<"ZdravieAKrasa"> | number | null
  }

  export type PromotionCreateWithoutZdravieAKrasaInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutZdravieAKrasaInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
  }

  export type PromotionCreateOrConnectWithoutZdravieAKrasaInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutZdravieAKrasaInput, PromotionUncheckedCreateWithoutZdravieAKrasaInput>
  }

  export type PromotionCreateManyZdravieAKrasaInputEnvelope = {
    data: PromotionCreateManyZdravieAKrasaInput | PromotionCreateManyZdravieAKrasaInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutZdravieAKrasaInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutZdravieAKrasaInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutZdravieAKrasaInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutZdravieAKrasaInput, ProductAnalyticsUncheckedCreateWithoutZdravieAKrasaInput>
  }

  export type ShoppingListItemCreateWithoutZdravieAKrasaInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutZdravieAKrasaInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput>
  }

  export type ShoppingListItemCreateManyZdravieAKrasaInputEnvelope = {
    data: ShoppingListItemCreateManyZdravieAKrasaInput | ShoppingListItemCreateManyZdravieAKrasaInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutZdravieAKrasaInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutZdravieAKrasaInput, PromotionUncheckedUpdateWithoutZdravieAKrasaInput>
    create: XOR<PromotionCreateWithoutZdravieAKrasaInput, PromotionUncheckedCreateWithoutZdravieAKrasaInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutZdravieAKrasaInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutZdravieAKrasaInput, PromotionUncheckedUpdateWithoutZdravieAKrasaInput>
  }

  export type PromotionUpdateManyWithWhereWithoutZdravieAKrasaInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutZdravieAKrasaInput>
  }

  export type PromotionScalarWhereInput = {
    AND?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
    OR?: PromotionScalarWhereInput[]
    NOT?: PromotionScalarWhereInput | PromotionScalarWhereInput[]
    id?: IntFilter<"Promotion"> | number
    promotionId?: StringFilter<"Promotion"> | string
    promotionType?: StringFilter<"Promotion"> | string
    startDate?: DateTimeFilter<"Promotion"> | Date | string
    endDate?: DateTimeFilter<"Promotion"> | Date | string
    offerText?: StringFilter<"Promotion"> | string
    promotionPrice?: FloatNullableFilter<"Promotion"> | number | null
    attributes?: StringNullableListFilter<"Promotion">
    ovocieAZeleninyId?: IntNullableFilter<"Promotion"> | number | null
    grilovanieId?: IntNullableFilter<"Promotion"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableFilter<"Promotion"> | number | null
    pecivoId?: IntNullableFilter<"Promotion"> | number | null
    masoRybyALahodkyId?: IntNullableFilter<"Promotion"> | number | null
    trvanlivePotravinyId?: IntNullableFilter<"Promotion"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableFilter<"Promotion"> | number | null
    mrazenePotravinyId?: IntNullableFilter<"Promotion"> | number | null
    napojeId?: IntNullableFilter<"Promotion"> | number | null
    alkoholId?: IntNullableFilter<"Promotion"> | number | null
    starostlivostODomacnostId?: IntNullableFilter<"Promotion"> | number | null
    zdravieAKrasaId?: IntNullableFilter<"Promotion"> | number | null
  }

  export type ProductAnalyticsUpsertWithoutZdravieAKrasaInput = {
    update: XOR<ProductAnalyticsUpdateWithoutZdravieAKrasaInput, ProductAnalyticsUncheckedUpdateWithoutZdravieAKrasaInput>
    create: XOR<ProductAnalyticsCreateWithoutZdravieAKrasaInput, ProductAnalyticsUncheckedCreateWithoutZdravieAKrasaInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutZdravieAKrasaInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutZdravieAKrasaInput, ProductAnalyticsUncheckedUpdateWithoutZdravieAKrasaInput>
  }

  export type ProductAnalyticsUpdateWithoutZdravieAKrasaInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutZdravieAKrasaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutZdravieAKrasaInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedUpdateWithoutZdravieAKrasaInput>
    create: XOR<ShoppingListItemCreateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedCreateWithoutZdravieAKrasaInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutZdravieAKrasaInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutZdravieAKrasaInput, ShoppingListItemUncheckedUpdateWithoutZdravieAKrasaInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutZdravieAKrasaInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutZdravieAKrasaInput>
  }

  export type ShoppingListItemScalarWhereInput = {
    AND?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
    OR?: ShoppingListItemScalarWhereInput[]
    NOT?: ShoppingListItemScalarWhereInput | ShoppingListItemScalarWhereInput[]
    id?: IntFilter<"ShoppingListItem"> | number
    shoppingListId?: IntFilter<"ShoppingListItem"> | number
    productId?: StringFilter<"ShoppingListItem"> | string
    quantity?: IntFilter<"ShoppingListItem"> | number
    category?: StringFilter<"ShoppingListItem"> | string
    createdAt?: DateTimeFilter<"ShoppingListItem"> | Date | string
    updatedAt?: DateTimeFilter<"ShoppingListItem"> | Date | string
    zdravieAKrasaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    ovocieAZeleninyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    grilovanieId?: IntNullableFilter<"ShoppingListItem"> | number | null
    starostlivostODomacnostId?: IntNullableFilter<"ShoppingListItem"> | number | null
    pecivoId?: IntNullableFilter<"ShoppingListItem"> | number | null
    masoRybyALahodkyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    mliecneVyrobkyAVajciaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    trvanlivePotravinyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    specialnaAZdravaVyzivaId?: IntNullableFilter<"ShoppingListItem"> | number | null
    mrazenePotravinyId?: IntNullableFilter<"ShoppingListItem"> | number | null
    napojeId?: IntNullableFilter<"ShoppingListItem"> | number | null
    alkoholId?: IntNullableFilter<"ShoppingListItem"> | number | null
  }

  export type PromotionCreateWithoutOvocieAZeleninyInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutOvocieAZeleninyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutOvocieAZeleninyInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutOvocieAZeleninyInput, PromotionUncheckedCreateWithoutOvocieAZeleninyInput>
  }

  export type PromotionCreateManyOvocieAZeleninyInputEnvelope = {
    data: PromotionCreateManyOvocieAZeleninyInput | PromotionCreateManyOvocieAZeleninyInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutOvocieAZeleninyInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutOvocieAZeleninyInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutOvocieAZeleninyInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutOvocieAZeleninyInput, ProductAnalyticsUncheckedCreateWithoutOvocieAZeleninyInput>
  }

  export type ShoppingListItemCreateWithoutOvocieAZeleninyInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutOvocieAZeleninyInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput>
  }

  export type ShoppingListItemCreateManyOvocieAZeleninyInputEnvelope = {
    data: ShoppingListItemCreateManyOvocieAZeleninyInput | ShoppingListItemCreateManyOvocieAZeleninyInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutOvocieAZeleninyInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutOvocieAZeleninyInput, PromotionUncheckedUpdateWithoutOvocieAZeleninyInput>
    create: XOR<PromotionCreateWithoutOvocieAZeleninyInput, PromotionUncheckedCreateWithoutOvocieAZeleninyInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutOvocieAZeleninyInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutOvocieAZeleninyInput, PromotionUncheckedUpdateWithoutOvocieAZeleninyInput>
  }

  export type PromotionUpdateManyWithWhereWithoutOvocieAZeleninyInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutOvocieAZeleninyInput>
  }

  export type ProductAnalyticsUpsertWithoutOvocieAZeleninyInput = {
    update: XOR<ProductAnalyticsUpdateWithoutOvocieAZeleninyInput, ProductAnalyticsUncheckedUpdateWithoutOvocieAZeleninyInput>
    create: XOR<ProductAnalyticsCreateWithoutOvocieAZeleninyInput, ProductAnalyticsUncheckedCreateWithoutOvocieAZeleninyInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutOvocieAZeleninyInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutOvocieAZeleninyInput, ProductAnalyticsUncheckedUpdateWithoutOvocieAZeleninyInput>
  }

  export type ProductAnalyticsUpdateWithoutOvocieAZeleninyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutOvocieAZeleninyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutOvocieAZeleninyInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedUpdateWithoutOvocieAZeleninyInput>
    create: XOR<ShoppingListItemCreateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedCreateWithoutOvocieAZeleninyInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutOvocieAZeleninyInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutOvocieAZeleninyInput, ShoppingListItemUncheckedUpdateWithoutOvocieAZeleninyInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutOvocieAZeleninyInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutOvocieAZeleninyInput>
  }

  export type PromotionCreateWithoutGrilovanieInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutGrilovanieInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutGrilovanieInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutGrilovanieInput, PromotionUncheckedCreateWithoutGrilovanieInput>
  }

  export type PromotionCreateManyGrilovanieInputEnvelope = {
    data: PromotionCreateManyGrilovanieInput | PromotionCreateManyGrilovanieInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutGrilovanieInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutGrilovanieInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutGrilovanieInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutGrilovanieInput, ProductAnalyticsUncheckedCreateWithoutGrilovanieInput>
  }

  export type ShoppingListItemCreateWithoutGrilovanieInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutGrilovanieInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutGrilovanieInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutGrilovanieInput, ShoppingListItemUncheckedCreateWithoutGrilovanieInput>
  }

  export type ShoppingListItemCreateManyGrilovanieInputEnvelope = {
    data: ShoppingListItemCreateManyGrilovanieInput | ShoppingListItemCreateManyGrilovanieInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutGrilovanieInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutGrilovanieInput, PromotionUncheckedUpdateWithoutGrilovanieInput>
    create: XOR<PromotionCreateWithoutGrilovanieInput, PromotionUncheckedCreateWithoutGrilovanieInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutGrilovanieInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutGrilovanieInput, PromotionUncheckedUpdateWithoutGrilovanieInput>
  }

  export type PromotionUpdateManyWithWhereWithoutGrilovanieInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutGrilovanieInput>
  }

  export type ProductAnalyticsUpsertWithoutGrilovanieInput = {
    update: XOR<ProductAnalyticsUpdateWithoutGrilovanieInput, ProductAnalyticsUncheckedUpdateWithoutGrilovanieInput>
    create: XOR<ProductAnalyticsCreateWithoutGrilovanieInput, ProductAnalyticsUncheckedCreateWithoutGrilovanieInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutGrilovanieInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutGrilovanieInput, ProductAnalyticsUncheckedUpdateWithoutGrilovanieInput>
  }

  export type ProductAnalyticsUpdateWithoutGrilovanieInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutGrilovanieInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutGrilovanieInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutGrilovanieInput, ShoppingListItemUncheckedUpdateWithoutGrilovanieInput>
    create: XOR<ShoppingListItemCreateWithoutGrilovanieInput, ShoppingListItemUncheckedCreateWithoutGrilovanieInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutGrilovanieInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutGrilovanieInput, ShoppingListItemUncheckedUpdateWithoutGrilovanieInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutGrilovanieInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutGrilovanieInput>
  }

  export type PromotionCreateWithoutStarostlivostODomacnostInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutStarostlivostODomacnostInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutStarostlivostODomacnostInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutStarostlivostODomacnostInput, PromotionUncheckedCreateWithoutStarostlivostODomacnostInput>
  }

  export type PromotionCreateManyStarostlivostODomacnostInputEnvelope = {
    data: PromotionCreateManyStarostlivostODomacnostInput | PromotionCreateManyStarostlivostODomacnostInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutStarostlivostODomacnostInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutStarostlivostODomacnostInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutStarostlivostODomacnostInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutStarostlivostODomacnostInput, ProductAnalyticsUncheckedCreateWithoutStarostlivostODomacnostInput>
  }

  export type ShoppingListItemCreateWithoutStarostlivostODomacnostInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutStarostlivostODomacnostInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput>
  }

  export type ShoppingListItemCreateManyStarostlivostODomacnostInputEnvelope = {
    data: ShoppingListItemCreateManyStarostlivostODomacnostInput | ShoppingListItemCreateManyStarostlivostODomacnostInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutStarostlivostODomacnostInput, PromotionUncheckedUpdateWithoutStarostlivostODomacnostInput>
    create: XOR<PromotionCreateWithoutStarostlivostODomacnostInput, PromotionUncheckedCreateWithoutStarostlivostODomacnostInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutStarostlivostODomacnostInput, PromotionUncheckedUpdateWithoutStarostlivostODomacnostInput>
  }

  export type PromotionUpdateManyWithWhereWithoutStarostlivostODomacnostInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutStarostlivostODomacnostInput>
  }

  export type ProductAnalyticsUpsertWithoutStarostlivostODomacnostInput = {
    update: XOR<ProductAnalyticsUpdateWithoutStarostlivostODomacnostInput, ProductAnalyticsUncheckedUpdateWithoutStarostlivostODomacnostInput>
    create: XOR<ProductAnalyticsCreateWithoutStarostlivostODomacnostInput, ProductAnalyticsUncheckedCreateWithoutStarostlivostODomacnostInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutStarostlivostODomacnostInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutStarostlivostODomacnostInput, ProductAnalyticsUncheckedUpdateWithoutStarostlivostODomacnostInput>
  }

  export type ProductAnalyticsUpdateWithoutStarostlivostODomacnostInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutStarostlivostODomacnostInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutStarostlivostODomacnostInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedUpdateWithoutStarostlivostODomacnostInput>
    create: XOR<ShoppingListItemCreateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedCreateWithoutStarostlivostODomacnostInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutStarostlivostODomacnostInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutStarostlivostODomacnostInput, ShoppingListItemUncheckedUpdateWithoutStarostlivostODomacnostInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutStarostlivostODomacnostInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutStarostlivostODomacnostInput>
  }

  export type PromotionCreateWithoutPecivoInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutPecivoInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutPecivoInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutPecivoInput, PromotionUncheckedCreateWithoutPecivoInput>
  }

  export type PromotionCreateManyPecivoInputEnvelope = {
    data: PromotionCreateManyPecivoInput | PromotionCreateManyPecivoInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutPecivoInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutPecivoInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutPecivoInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutPecivoInput, ProductAnalyticsUncheckedCreateWithoutPecivoInput>
  }

  export type ShoppingListItemCreateWithoutPecivoInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutPecivoInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutPecivoInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutPecivoInput, ShoppingListItemUncheckedCreateWithoutPecivoInput>
  }

  export type ShoppingListItemCreateManyPecivoInputEnvelope = {
    data: ShoppingListItemCreateManyPecivoInput | ShoppingListItemCreateManyPecivoInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutPecivoInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutPecivoInput, PromotionUncheckedUpdateWithoutPecivoInput>
    create: XOR<PromotionCreateWithoutPecivoInput, PromotionUncheckedCreateWithoutPecivoInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutPecivoInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutPecivoInput, PromotionUncheckedUpdateWithoutPecivoInput>
  }

  export type PromotionUpdateManyWithWhereWithoutPecivoInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutPecivoInput>
  }

  export type ProductAnalyticsUpsertWithoutPecivoInput = {
    update: XOR<ProductAnalyticsUpdateWithoutPecivoInput, ProductAnalyticsUncheckedUpdateWithoutPecivoInput>
    create: XOR<ProductAnalyticsCreateWithoutPecivoInput, ProductAnalyticsUncheckedCreateWithoutPecivoInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutPecivoInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutPecivoInput, ProductAnalyticsUncheckedUpdateWithoutPecivoInput>
  }

  export type ProductAnalyticsUpdateWithoutPecivoInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutPecivoInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutPecivoInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutPecivoInput, ShoppingListItemUncheckedUpdateWithoutPecivoInput>
    create: XOR<ShoppingListItemCreateWithoutPecivoInput, ShoppingListItemUncheckedCreateWithoutPecivoInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutPecivoInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutPecivoInput, ShoppingListItemUncheckedUpdateWithoutPecivoInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutPecivoInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutPecivoInput>
  }

  export type PromotionCreateWithoutMasoRybyALahodkyInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutMasoRybyALahodkyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutMasoRybyALahodkyInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutMasoRybyALahodkyInput, PromotionUncheckedCreateWithoutMasoRybyALahodkyInput>
  }

  export type PromotionCreateManyMasoRybyALahodkyInputEnvelope = {
    data: PromotionCreateManyMasoRybyALahodkyInput | PromotionCreateManyMasoRybyALahodkyInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutMasoRybyALahodkyInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutMasoRybyALahodkyInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutMasoRybyALahodkyInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutMasoRybyALahodkyInput, ProductAnalyticsUncheckedCreateWithoutMasoRybyALahodkyInput>
  }

  export type ShoppingListItemCreateWithoutMasoRybyALahodkyInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutMasoRybyALahodkyInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput>
  }

  export type ShoppingListItemCreateManyMasoRybyALahodkyInputEnvelope = {
    data: ShoppingListItemCreateManyMasoRybyALahodkyInput | ShoppingListItemCreateManyMasoRybyALahodkyInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutMasoRybyALahodkyInput, PromotionUncheckedUpdateWithoutMasoRybyALahodkyInput>
    create: XOR<PromotionCreateWithoutMasoRybyALahodkyInput, PromotionUncheckedCreateWithoutMasoRybyALahodkyInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutMasoRybyALahodkyInput, PromotionUncheckedUpdateWithoutMasoRybyALahodkyInput>
  }

  export type PromotionUpdateManyWithWhereWithoutMasoRybyALahodkyInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutMasoRybyALahodkyInput>
  }

  export type ProductAnalyticsUpsertWithoutMasoRybyALahodkyInput = {
    update: XOR<ProductAnalyticsUpdateWithoutMasoRybyALahodkyInput, ProductAnalyticsUncheckedUpdateWithoutMasoRybyALahodkyInput>
    create: XOR<ProductAnalyticsCreateWithoutMasoRybyALahodkyInput, ProductAnalyticsUncheckedCreateWithoutMasoRybyALahodkyInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutMasoRybyALahodkyInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutMasoRybyALahodkyInput, ProductAnalyticsUncheckedUpdateWithoutMasoRybyALahodkyInput>
  }

  export type ProductAnalyticsUpdateWithoutMasoRybyALahodkyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutMasoRybyALahodkyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutMasoRybyALahodkyInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedUpdateWithoutMasoRybyALahodkyInput>
    create: XOR<ShoppingListItemCreateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedCreateWithoutMasoRybyALahodkyInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutMasoRybyALahodkyInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutMasoRybyALahodkyInput, ShoppingListItemUncheckedUpdateWithoutMasoRybyALahodkyInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutMasoRybyALahodkyInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutMasoRybyALahodkyInput>
  }

  export type PromotionCreateWithoutMliecneVyrobkyAVajciaInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutMliecneVyrobkyAVajciaInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type PromotionCreateManyMliecneVyrobkyAVajciaInputEnvelope = {
    data: PromotionCreateManyMliecneVyrobkyAVajciaInput | PromotionCreateManyMliecneVyrobkyAVajciaInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutMliecneVyrobkyAVajciaInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutMliecneVyrobkyAVajciaInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutMliecneVyrobkyAVajciaInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutMliecneVyrobkyAVajciaInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ShoppingListItemCreateManyMliecneVyrobkyAVajciaInputEnvelope = {
    data: ShoppingListItemCreateManyMliecneVyrobkyAVajciaInput | ShoppingListItemCreateManyMliecneVyrobkyAVajciaInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
    create: XOR<PromotionCreateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutMliecneVyrobkyAVajciaInput, PromotionUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type PromotionUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ProductAnalyticsUpsertWithoutMliecneVyrobkyAVajciaInput = {
    update: XOR<ProductAnalyticsUpdateWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
    create: XOR<ProductAnalyticsCreateWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutMliecneVyrobkyAVajciaInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutMliecneVyrobkyAVajciaInput, ProductAnalyticsUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ProductAnalyticsUpdateWithoutMliecneVyrobkyAVajciaInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
    create: XOR<ShoppingListItemCreateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedCreateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutMliecneVyrobkyAVajciaInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutMliecneVyrobkyAVajciaInput, ShoppingListItemUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutMliecneVyrobkyAVajciaInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaInput>
  }

  export type PromotionCreateWithoutTrvanlivePotravinyInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutTrvanlivePotravinyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutTrvanlivePotravinyInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutTrvanlivePotravinyInput, PromotionUncheckedCreateWithoutTrvanlivePotravinyInput>
  }

  export type PromotionCreateManyTrvanlivePotravinyInputEnvelope = {
    data: PromotionCreateManyTrvanlivePotravinyInput | PromotionCreateManyTrvanlivePotravinyInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutTrvanlivePotravinyInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutTrvanlivePotravinyInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutTrvanlivePotravinyInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutTrvanlivePotravinyInput, ProductAnalyticsUncheckedCreateWithoutTrvanlivePotravinyInput>
  }

  export type ShoppingListItemCreateWithoutTrvanlivePotravinyInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutTrvanlivePotravinyInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput>
  }

  export type ShoppingListItemCreateManyTrvanlivePotravinyInputEnvelope = {
    data: ShoppingListItemCreateManyTrvanlivePotravinyInput | ShoppingListItemCreateManyTrvanlivePotravinyInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutTrvanlivePotravinyInput, PromotionUncheckedUpdateWithoutTrvanlivePotravinyInput>
    create: XOR<PromotionCreateWithoutTrvanlivePotravinyInput, PromotionUncheckedCreateWithoutTrvanlivePotravinyInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutTrvanlivePotravinyInput, PromotionUncheckedUpdateWithoutTrvanlivePotravinyInput>
  }

  export type PromotionUpdateManyWithWhereWithoutTrvanlivePotravinyInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutTrvanlivePotravinyInput>
  }

  export type ProductAnalyticsUpsertWithoutTrvanlivePotravinyInput = {
    update: XOR<ProductAnalyticsUpdateWithoutTrvanlivePotravinyInput, ProductAnalyticsUncheckedUpdateWithoutTrvanlivePotravinyInput>
    create: XOR<ProductAnalyticsCreateWithoutTrvanlivePotravinyInput, ProductAnalyticsUncheckedCreateWithoutTrvanlivePotravinyInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutTrvanlivePotravinyInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutTrvanlivePotravinyInput, ProductAnalyticsUncheckedUpdateWithoutTrvanlivePotravinyInput>
  }

  export type ProductAnalyticsUpdateWithoutTrvanlivePotravinyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutTrvanlivePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutTrvanlivePotravinyInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedUpdateWithoutTrvanlivePotravinyInput>
    create: XOR<ShoppingListItemCreateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedCreateWithoutTrvanlivePotravinyInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutTrvanlivePotravinyInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutTrvanlivePotravinyInput, ShoppingListItemUncheckedUpdateWithoutTrvanlivePotravinyInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutTrvanlivePotravinyInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutTrvanlivePotravinyInput>
  }

  export type PromotionCreateWithoutSpecialnaAZdravaVyzivaInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type PromotionCreateManySpecialnaAZdravaVyzivaInputEnvelope = {
    data: PromotionCreateManySpecialnaAZdravaVyzivaInput | PromotionCreateManySpecialnaAZdravaVyzivaInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutSpecialnaAZdravaVyzivaInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutSpecialnaAZdravaVyzivaInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ShoppingListItemCreateManySpecialnaAZdravaVyzivaInputEnvelope = {
    data: ShoppingListItemCreateManySpecialnaAZdravaVyzivaInput | ShoppingListItemCreateManySpecialnaAZdravaVyzivaInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
    create: XOR<PromotionCreateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutSpecialnaAZdravaVyzivaInput, PromotionUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type PromotionUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ProductAnalyticsUpsertWithoutSpecialnaAZdravaVyzivaInput = {
    update: XOR<ProductAnalyticsUpdateWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
    create: XOR<ProductAnalyticsCreateWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutSpecialnaAZdravaVyzivaInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutSpecialnaAZdravaVyzivaInput, ProductAnalyticsUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ProductAnalyticsUpdateWithoutSpecialnaAZdravaVyzivaInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
    create: XOR<ShoppingListItemCreateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedCreateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutSpecialnaAZdravaVyzivaInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutSpecialnaAZdravaVyzivaInput, ShoppingListItemUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutSpecialnaAZdravaVyzivaInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaInput>
  }

  export type PromotionCreateWithoutMrazenePotravinyInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutMrazenePotravinyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutMrazenePotravinyInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutMrazenePotravinyInput, PromotionUncheckedCreateWithoutMrazenePotravinyInput>
  }

  export type PromotionCreateManyMrazenePotravinyInputEnvelope = {
    data: PromotionCreateManyMrazenePotravinyInput | PromotionCreateManyMrazenePotravinyInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutMrazenePotravinyInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutMrazenePotravinyInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutMrazenePotravinyInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutMrazenePotravinyInput, ProductAnalyticsUncheckedCreateWithoutMrazenePotravinyInput>
  }

  export type ShoppingListItemCreateWithoutMrazenePotravinyInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutMrazenePotravinyInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput>
  }

  export type ShoppingListItemCreateManyMrazenePotravinyInputEnvelope = {
    data: ShoppingListItemCreateManyMrazenePotravinyInput | ShoppingListItemCreateManyMrazenePotravinyInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutMrazenePotravinyInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutMrazenePotravinyInput, PromotionUncheckedUpdateWithoutMrazenePotravinyInput>
    create: XOR<PromotionCreateWithoutMrazenePotravinyInput, PromotionUncheckedCreateWithoutMrazenePotravinyInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutMrazenePotravinyInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutMrazenePotravinyInput, PromotionUncheckedUpdateWithoutMrazenePotravinyInput>
  }

  export type PromotionUpdateManyWithWhereWithoutMrazenePotravinyInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutMrazenePotravinyInput>
  }

  export type ProductAnalyticsUpsertWithoutMrazenePotravinyInput = {
    update: XOR<ProductAnalyticsUpdateWithoutMrazenePotravinyInput, ProductAnalyticsUncheckedUpdateWithoutMrazenePotravinyInput>
    create: XOR<ProductAnalyticsCreateWithoutMrazenePotravinyInput, ProductAnalyticsUncheckedCreateWithoutMrazenePotravinyInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutMrazenePotravinyInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutMrazenePotravinyInput, ProductAnalyticsUncheckedUpdateWithoutMrazenePotravinyInput>
  }

  export type ProductAnalyticsUpdateWithoutMrazenePotravinyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutMrazenePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutMrazenePotravinyInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedUpdateWithoutMrazenePotravinyInput>
    create: XOR<ShoppingListItemCreateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedCreateWithoutMrazenePotravinyInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutMrazenePotravinyInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutMrazenePotravinyInput, ShoppingListItemUncheckedUpdateWithoutMrazenePotravinyInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutMrazenePotravinyInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutMrazenePotravinyInput>
  }

  export type PromotionCreateWithoutNapojeInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    alkohol?: AlkoholCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutNapojeInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutNapojeInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutNapojeInput, PromotionUncheckedCreateWithoutNapojeInput>
  }

  export type PromotionCreateManyNapojeInputEnvelope = {
    data: PromotionCreateManyNapojeInput | PromotionCreateManyNapojeInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutNapojeInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutNapojeInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    alkohol?: AlkoholUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutNapojeInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutNapojeInput, ProductAnalyticsUncheckedCreateWithoutNapojeInput>
  }

  export type ShoppingListItemCreateWithoutNapojeInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutNapojeInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutNapojeInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutNapojeInput, ShoppingListItemUncheckedCreateWithoutNapojeInput>
  }

  export type ShoppingListItemCreateManyNapojeInputEnvelope = {
    data: ShoppingListItemCreateManyNapojeInput | ShoppingListItemCreateManyNapojeInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutNapojeInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutNapojeInput, PromotionUncheckedUpdateWithoutNapojeInput>
    create: XOR<PromotionCreateWithoutNapojeInput, PromotionUncheckedCreateWithoutNapojeInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutNapojeInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutNapojeInput, PromotionUncheckedUpdateWithoutNapojeInput>
  }

  export type PromotionUpdateManyWithWhereWithoutNapojeInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutNapojeInput>
  }

  export type ProductAnalyticsUpsertWithoutNapojeInput = {
    update: XOR<ProductAnalyticsUpdateWithoutNapojeInput, ProductAnalyticsUncheckedUpdateWithoutNapojeInput>
    create: XOR<ProductAnalyticsCreateWithoutNapojeInput, ProductAnalyticsUncheckedCreateWithoutNapojeInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutNapojeInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutNapojeInput, ProductAnalyticsUncheckedUpdateWithoutNapojeInput>
  }

  export type ProductAnalyticsUpdateWithoutNapojeInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutNapojeInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    alkohol?: AlkoholUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutNapojeInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutNapojeInput, ShoppingListItemUncheckedUpdateWithoutNapojeInput>
    create: XOR<ShoppingListItemCreateWithoutNapojeInput, ShoppingListItemUncheckedCreateWithoutNapojeInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutNapojeInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutNapojeInput, ShoppingListItemUncheckedUpdateWithoutNapojeInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutNapojeInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutNapojeInput>
  }

  export type PromotionCreateWithoutAlkoholInput = {
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutPromotionsInput
    grilovanie?: GrilovanieCreateNestedOneWithoutPromotionsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutPromotionsInput
    pecivo?: PecivoCreateNestedOneWithoutPromotionsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutPromotionsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutPromotionsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutPromotionsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutPromotionsInput
    napoje?: NapojeCreateNestedOneWithoutPromotionsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutPromotionsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutPromotionsInput
  }

  export type PromotionUncheckedCreateWithoutAlkoholInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type PromotionCreateOrConnectWithoutAlkoholInput = {
    where: PromotionWhereUniqueInput
    create: XOR<PromotionCreateWithoutAlkoholInput, PromotionUncheckedCreateWithoutAlkoholInput>
  }

  export type PromotionCreateManyAlkoholInputEnvelope = {
    data: PromotionCreateManyAlkoholInput | PromotionCreateManyAlkoholInput[]
    skipDuplicates?: boolean
  }

  export type ProductAnalyticsCreateWithoutAlkoholInput = {
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsUncheckedCreateWithoutAlkoholInput = {
    id?: number
    productId: string
    priceDrop: number
    priceIncrease: number
    percentageChange: number
    isBuyRecommended: string
    isOnSale: boolean
    previousPrice?: number | null
    priceChangeStatus: string
    averagePrice?: number | null
    medianPrice?: number | null
    priceStdDev?: number | null
    promotionImpact?: number | null
    lastCalculated: Date | string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    grilovanie?: GrilovanieUncheckedCreateNestedManyWithoutProductAnalyticsInput
    pecivo?: PecivoUncheckedCreateNestedManyWithoutProductAnalyticsInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedCreateNestedManyWithoutProductAnalyticsInput
    mrazenePotraviny?: MrazenePotravinyUncheckedCreateNestedManyWithoutProductAnalyticsInput
    napoje?: NapojeUncheckedCreateNestedManyWithoutProductAnalyticsInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedCreateNestedManyWithoutProductAnalyticsInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedCreateNestedManyWithoutProductAnalyticsInput
  }

  export type ProductAnalyticsCreateOrConnectWithoutAlkoholInput = {
    where: ProductAnalyticsWhereUniqueInput
    create: XOR<ProductAnalyticsCreateWithoutAlkoholInput, ProductAnalyticsUncheckedCreateWithoutAlkoholInput>
  }

  export type ShoppingListItemCreateWithoutAlkoholInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shoppingList: ShoppingListCreateNestedOneWithoutItemsInput
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutAlkoholInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutAlkoholInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutAlkoholInput, ShoppingListItemUncheckedCreateWithoutAlkoholInput>
  }

  export type ShoppingListItemCreateManyAlkoholInputEnvelope = {
    data: ShoppingListItemCreateManyAlkoholInput | ShoppingListItemCreateManyAlkoholInput[]
    skipDuplicates?: boolean
  }

  export type PromotionUpsertWithWhereUniqueWithoutAlkoholInput = {
    where: PromotionWhereUniqueInput
    update: XOR<PromotionUpdateWithoutAlkoholInput, PromotionUncheckedUpdateWithoutAlkoholInput>
    create: XOR<PromotionCreateWithoutAlkoholInput, PromotionUncheckedCreateWithoutAlkoholInput>
  }

  export type PromotionUpdateWithWhereUniqueWithoutAlkoholInput = {
    where: PromotionWhereUniqueInput
    data: XOR<PromotionUpdateWithoutAlkoholInput, PromotionUncheckedUpdateWithoutAlkoholInput>
  }

  export type PromotionUpdateManyWithWhereWithoutAlkoholInput = {
    where: PromotionScalarWhereInput
    data: XOR<PromotionUpdateManyMutationInput, PromotionUncheckedUpdateManyWithoutAlkoholInput>
  }

  export type ProductAnalyticsUpsertWithoutAlkoholInput = {
    update: XOR<ProductAnalyticsUpdateWithoutAlkoholInput, ProductAnalyticsUncheckedUpdateWithoutAlkoholInput>
    create: XOR<ProductAnalyticsCreateWithoutAlkoholInput, ProductAnalyticsUncheckedCreateWithoutAlkoholInput>
    where?: ProductAnalyticsWhereInput
  }

  export type ProductAnalyticsUpdateToOneWithWhereWithoutAlkoholInput = {
    where?: ProductAnalyticsWhereInput
    data: XOR<ProductAnalyticsUpdateWithoutAlkoholInput, ProductAnalyticsUncheckedUpdateWithoutAlkoholInput>
  }

  export type ProductAnalyticsUpdateWithoutAlkoholInput = {
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ProductAnalyticsUncheckedUpdateWithoutAlkoholInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    priceDrop?: FloatFieldUpdateOperationsInput | number
    priceIncrease?: FloatFieldUpdateOperationsInput | number
    percentageChange?: FloatFieldUpdateOperationsInput | number
    isBuyRecommended?: StringFieldUpdateOperationsInput | string
    isOnSale?: BoolFieldUpdateOperationsInput | boolean
    previousPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceChangeStatus?: StringFieldUpdateOperationsInput | string
    averagePrice?: NullableFloatFieldUpdateOperationsInput | number | null
    medianPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    priceStdDev?: NullableFloatFieldUpdateOperationsInput | number | null
    promotionImpact?: NullableFloatFieldUpdateOperationsInput | number | null
    lastCalculated?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleniny?: OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    grilovanie?: GrilovanieUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    pecivo?: PecivoUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    mrazenePotraviny?: MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    napoje?: NapojeUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsNestedInput
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutAlkoholInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutAlkoholInput, ShoppingListItemUncheckedUpdateWithoutAlkoholInput>
    create: XOR<ShoppingListItemCreateWithoutAlkoholInput, ShoppingListItemUncheckedCreateWithoutAlkoholInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutAlkoholInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutAlkoholInput, ShoppingListItemUncheckedUpdateWithoutAlkoholInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutAlkoholInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutAlkoholInput>
  }

  export type OvocieAZeleninyCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutOvocieAZeleninyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyCreateOrConnectWithoutPromotionsInput = {
    where: OvocieAZeleninyWhereUniqueInput
    create: XOR<OvocieAZeleninyCreateWithoutPromotionsInput, OvocieAZeleninyUncheckedCreateWithoutPromotionsInput>
  }

  export type GrilovanieCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutGrilovanieInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieCreateOrConnectWithoutPromotionsInput = {
    where: GrilovanieWhereUniqueInput
    create: XOR<GrilovanieCreateWithoutPromotionsInput, GrilovanieUncheckedCreateWithoutPromotionsInput>
  }

  export type MliecneVyrobkyAVajciaCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMliecneVyrobkyAVajciaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaCreateOrConnectWithoutPromotionsInput = {
    where: MliecneVyrobkyAVajciaWhereUniqueInput
    create: XOR<MliecneVyrobkyAVajciaCreateWithoutPromotionsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutPromotionsInput>
  }

  export type PecivoCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutPecivoInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutPecivoInput
  }

  export type PecivoUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutPecivoInput
  }

  export type PecivoCreateOrConnectWithoutPromotionsInput = {
    where: PecivoWhereUniqueInput
    create: XOR<PecivoCreateWithoutPromotionsInput, PecivoUncheckedCreateWithoutPromotionsInput>
  }

  export type MasoRybyALahodkyCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMasoRybyALahodkyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyCreateOrConnectWithoutPromotionsInput = {
    where: MasoRybyALahodkyWhereUniqueInput
    create: XOR<MasoRybyALahodkyCreateWithoutPromotionsInput, MasoRybyALahodkyUncheckedCreateWithoutPromotionsInput>
  }

  export type TrvanlivePotravinyCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutTrvanlivePotravinyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyCreateOrConnectWithoutPromotionsInput = {
    where: TrvanlivePotravinyWhereUniqueInput
    create: XOR<TrvanlivePotravinyCreateWithoutPromotionsInput, TrvanlivePotravinyUncheckedCreateWithoutPromotionsInput>
  }

  export type SpecialnaAZdravaVyzivaCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutSpecialnaAZdravaVyzivaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaCreateOrConnectWithoutPromotionsInput = {
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
    create: XOR<SpecialnaAZdravaVyzivaCreateWithoutPromotionsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutPromotionsInput>
  }

  export type MrazenePotravinyCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMrazenePotravinyInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyCreateOrConnectWithoutPromotionsInput = {
    where: MrazenePotravinyWhereUniqueInput
    create: XOR<MrazenePotravinyCreateWithoutPromotionsInput, MrazenePotravinyUncheckedCreateWithoutPromotionsInput>
  }

  export type NapojeCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutNapojeInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutNapojeInput
  }

  export type NapojeUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutNapojeInput
  }

  export type NapojeCreateOrConnectWithoutPromotionsInput = {
    where: NapojeWhereUniqueInput
    create: XOR<NapojeCreateWithoutPromotionsInput, NapojeUncheckedCreateWithoutPromotionsInput>
  }

  export type AlkoholCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutAlkoholInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholCreateOrConnectWithoutPromotionsInput = {
    where: AlkoholWhereUniqueInput
    create: XOR<AlkoholCreateWithoutPromotionsInput, AlkoholUncheckedCreateWithoutPromotionsInput>
  }

  export type StarostlivostODomacnostCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutStarostlivostODomacnostInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostCreateOrConnectWithoutPromotionsInput = {
    where: StarostlivostODomacnostWhereUniqueInput
    create: XOR<StarostlivostODomacnostCreateWithoutPromotionsInput, StarostlivostODomacnostUncheckedCreateWithoutPromotionsInput>
  }

  export type ZdravieAKrasaCreateWithoutPromotionsInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutZdravieAKrasaInput
    ShoppingListItem?: ShoppingListItemCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaUncheckedCreateWithoutPromotionsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
    ShoppingListItem?: ShoppingListItemUncheckedCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaCreateOrConnectWithoutPromotionsInput = {
    where: ZdravieAKrasaWhereUniqueInput
    create: XOR<ZdravieAKrasaCreateWithoutPromotionsInput, ZdravieAKrasaUncheckedCreateWithoutPromotionsInput>
  }

  export type OvocieAZeleninyUpsertWithoutPromotionsInput = {
    update: XOR<OvocieAZeleninyUpdateWithoutPromotionsInput, OvocieAZeleninyUncheckedUpdateWithoutPromotionsInput>
    create: XOR<OvocieAZeleninyCreateWithoutPromotionsInput, OvocieAZeleninyUncheckedCreateWithoutPromotionsInput>
    where?: OvocieAZeleninyWhereInput
  }

  export type OvocieAZeleninyUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: OvocieAZeleninyWhereInput
    data: XOR<OvocieAZeleninyUpdateWithoutPromotionsInput, OvocieAZeleninyUncheckedUpdateWithoutPromotionsInput>
  }

  export type OvocieAZeleninyUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutOvocieAZeleninyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type OvocieAZeleninyUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type GrilovanieUpsertWithoutPromotionsInput = {
    update: XOR<GrilovanieUpdateWithoutPromotionsInput, GrilovanieUncheckedUpdateWithoutPromotionsInput>
    create: XOR<GrilovanieCreateWithoutPromotionsInput, GrilovanieUncheckedCreateWithoutPromotionsInput>
    where?: GrilovanieWhereInput
  }

  export type GrilovanieUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: GrilovanieWhereInput
    data: XOR<GrilovanieUpdateWithoutPromotionsInput, GrilovanieUncheckedUpdateWithoutPromotionsInput>
  }

  export type GrilovanieUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutGrilovanieNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutGrilovanieNestedInput
  }

  export type GrilovanieUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutGrilovanieNestedInput
  }

  export type MliecneVyrobkyAVajciaUpsertWithoutPromotionsInput = {
    update: XOR<MliecneVyrobkyAVajciaUpdateWithoutPromotionsInput, MliecneVyrobkyAVajciaUncheckedUpdateWithoutPromotionsInput>
    create: XOR<MliecneVyrobkyAVajciaCreateWithoutPromotionsInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutPromotionsInput>
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  export type MliecneVyrobkyAVajciaUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: MliecneVyrobkyAVajciaWhereInput
    data: XOR<MliecneVyrobkyAVajciaUpdateWithoutPromotionsInput, MliecneVyrobkyAVajciaUncheckedUpdateWithoutPromotionsInput>
  }

  export type MliecneVyrobkyAVajciaUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMliecneVyrobkyAVajciaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type PecivoUpsertWithoutPromotionsInput = {
    update: XOR<PecivoUpdateWithoutPromotionsInput, PecivoUncheckedUpdateWithoutPromotionsInput>
    create: XOR<PecivoCreateWithoutPromotionsInput, PecivoUncheckedCreateWithoutPromotionsInput>
    where?: PecivoWhereInput
  }

  export type PecivoUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: PecivoWhereInput
    data: XOR<PecivoUpdateWithoutPromotionsInput, PecivoUncheckedUpdateWithoutPromotionsInput>
  }

  export type PecivoUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutPecivoNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutPecivoNestedInput
  }

  export type PecivoUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutPecivoNestedInput
  }

  export type MasoRybyALahodkyUpsertWithoutPromotionsInput = {
    update: XOR<MasoRybyALahodkyUpdateWithoutPromotionsInput, MasoRybyALahodkyUncheckedUpdateWithoutPromotionsInput>
    create: XOR<MasoRybyALahodkyCreateWithoutPromotionsInput, MasoRybyALahodkyUncheckedCreateWithoutPromotionsInput>
    where?: MasoRybyALahodkyWhereInput
  }

  export type MasoRybyALahodkyUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: MasoRybyALahodkyWhereInput
    data: XOR<MasoRybyALahodkyUpdateWithoutPromotionsInput, MasoRybyALahodkyUncheckedUpdateWithoutPromotionsInput>
  }

  export type MasoRybyALahodkyUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMasoRybyALahodkyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type MasoRybyALahodkyUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type TrvanlivePotravinyUpsertWithoutPromotionsInput = {
    update: XOR<TrvanlivePotravinyUpdateWithoutPromotionsInput, TrvanlivePotravinyUncheckedUpdateWithoutPromotionsInput>
    create: XOR<TrvanlivePotravinyCreateWithoutPromotionsInput, TrvanlivePotravinyUncheckedCreateWithoutPromotionsInput>
    where?: TrvanlivePotravinyWhereInput
  }

  export type TrvanlivePotravinyUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: TrvanlivePotravinyWhereInput
    data: XOR<TrvanlivePotravinyUpdateWithoutPromotionsInput, TrvanlivePotravinyUncheckedUpdateWithoutPromotionsInput>
  }

  export type TrvanlivePotravinyUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutTrvanlivePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type TrvanlivePotravinyUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type SpecialnaAZdravaVyzivaUpsertWithoutPromotionsInput = {
    update: XOR<SpecialnaAZdravaVyzivaUpdateWithoutPromotionsInput, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutPromotionsInput>
    create: XOR<SpecialnaAZdravaVyzivaCreateWithoutPromotionsInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutPromotionsInput>
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  export type SpecialnaAZdravaVyzivaUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: SpecialnaAZdravaVyzivaWhereInput
    data: XOR<SpecialnaAZdravaVyzivaUpdateWithoutPromotionsInput, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutPromotionsInput>
  }

  export type SpecialnaAZdravaVyzivaUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutSpecialnaAZdravaVyzivaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type MrazenePotravinyUpsertWithoutPromotionsInput = {
    update: XOR<MrazenePotravinyUpdateWithoutPromotionsInput, MrazenePotravinyUncheckedUpdateWithoutPromotionsInput>
    create: XOR<MrazenePotravinyCreateWithoutPromotionsInput, MrazenePotravinyUncheckedCreateWithoutPromotionsInput>
    where?: MrazenePotravinyWhereInput
  }

  export type MrazenePotravinyUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: MrazenePotravinyWhereInput
    data: XOR<MrazenePotravinyUpdateWithoutPromotionsInput, MrazenePotravinyUncheckedUpdateWithoutPromotionsInput>
  }

  export type MrazenePotravinyUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMrazenePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type MrazenePotravinyUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type NapojeUpsertWithoutPromotionsInput = {
    update: XOR<NapojeUpdateWithoutPromotionsInput, NapojeUncheckedUpdateWithoutPromotionsInput>
    create: XOR<NapojeCreateWithoutPromotionsInput, NapojeUncheckedCreateWithoutPromotionsInput>
    where?: NapojeWhereInput
  }

  export type NapojeUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: NapojeWhereInput
    data: XOR<NapojeUpdateWithoutPromotionsInput, NapojeUncheckedUpdateWithoutPromotionsInput>
  }

  export type NapojeUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutNapojeNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutNapojeNestedInput
  }

  export type NapojeUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutNapojeNestedInput
  }

  export type AlkoholUpsertWithoutPromotionsInput = {
    update: XOR<AlkoholUpdateWithoutPromotionsInput, AlkoholUncheckedUpdateWithoutPromotionsInput>
    create: XOR<AlkoholCreateWithoutPromotionsInput, AlkoholUncheckedCreateWithoutPromotionsInput>
    where?: AlkoholWhereInput
  }

  export type AlkoholUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: AlkoholWhereInput
    data: XOR<AlkoholUpdateWithoutPromotionsInput, AlkoholUncheckedUpdateWithoutPromotionsInput>
  }

  export type AlkoholUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutAlkoholNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutAlkoholNestedInput
  }

  export type AlkoholUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutAlkoholNestedInput
  }

  export type StarostlivostODomacnostUpsertWithoutPromotionsInput = {
    update: XOR<StarostlivostODomacnostUpdateWithoutPromotionsInput, StarostlivostODomacnostUncheckedUpdateWithoutPromotionsInput>
    create: XOR<StarostlivostODomacnostCreateWithoutPromotionsInput, StarostlivostODomacnostUncheckedCreateWithoutPromotionsInput>
    where?: StarostlivostODomacnostWhereInput
  }

  export type StarostlivostODomacnostUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: StarostlivostODomacnostWhereInput
    data: XOR<StarostlivostODomacnostUpdateWithoutPromotionsInput, StarostlivostODomacnostUncheckedUpdateWithoutPromotionsInput>
  }

  export type StarostlivostODomacnostUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutStarostlivostODomacnostNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type StarostlivostODomacnostUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type ZdravieAKrasaUpsertWithoutPromotionsInput = {
    update: XOR<ZdravieAKrasaUpdateWithoutPromotionsInput, ZdravieAKrasaUncheckedUpdateWithoutPromotionsInput>
    create: XOR<ZdravieAKrasaCreateWithoutPromotionsInput, ZdravieAKrasaUncheckedCreateWithoutPromotionsInput>
    where?: ZdravieAKrasaWhereInput
  }

  export type ZdravieAKrasaUpdateToOneWithWhereWithoutPromotionsInput = {
    where?: ZdravieAKrasaWhereInput
    data: XOR<ZdravieAKrasaUpdateWithoutPromotionsInput, ZdravieAKrasaUncheckedUpdateWithoutPromotionsInput>
  }

  export type ZdravieAKrasaUpdateWithoutPromotionsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutZdravieAKrasaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type ZdravieAKrasaUncheckedUpdateWithoutPromotionsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type ShoppingListItemCreateWithoutShoppingListInput = {
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ZdravieAKrasa?: ZdravieAKrasaCreateNestedOneWithoutShoppingListItemInput
    OvocieAZeleniny?: OvocieAZeleninyCreateNestedOneWithoutShoppingListItemInput
    Grilovanie?: GrilovanieCreateNestedOneWithoutShoppingListItemInput
    StarostlivostODomacnost?: StarostlivostODomacnostCreateNestedOneWithoutShoppingListItemInput
    Pecivo?: PecivoCreateNestedOneWithoutShoppingListItemInput
    MasoRybyALahodky?: MasoRybyALahodkyCreateNestedOneWithoutShoppingListItemInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaCreateNestedOneWithoutShoppingListItemInput
    TrvanlivePotraviny?: TrvanlivePotravinyCreateNestedOneWithoutShoppingListItemInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaCreateNestedOneWithoutShoppingListItemInput
    MrazenePotraviny?: MrazenePotravinyCreateNestedOneWithoutShoppingListItemInput
    Napoje?: NapojeCreateNestedOneWithoutShoppingListItemInput
    Alkohol?: AlkoholCreateNestedOneWithoutShoppingListItemInput
  }

  export type ShoppingListItemUncheckedCreateWithoutShoppingListInput = {
    id?: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemCreateOrConnectWithoutShoppingListInput = {
    where: ShoppingListItemWhereUniqueInput
    create: XOR<ShoppingListItemCreateWithoutShoppingListInput, ShoppingListItemUncheckedCreateWithoutShoppingListInput>
  }

  export type ShoppingListItemCreateManyShoppingListInputEnvelope = {
    data: ShoppingListItemCreateManyShoppingListInput | ShoppingListItemCreateManyShoppingListInput[]
    skipDuplicates?: boolean
  }

  export type ShoppingListItemUpsertWithWhereUniqueWithoutShoppingListInput = {
    where: ShoppingListItemWhereUniqueInput
    update: XOR<ShoppingListItemUpdateWithoutShoppingListInput, ShoppingListItemUncheckedUpdateWithoutShoppingListInput>
    create: XOR<ShoppingListItemCreateWithoutShoppingListInput, ShoppingListItemUncheckedCreateWithoutShoppingListInput>
  }

  export type ShoppingListItemUpdateWithWhereUniqueWithoutShoppingListInput = {
    where: ShoppingListItemWhereUniqueInput
    data: XOR<ShoppingListItemUpdateWithoutShoppingListInput, ShoppingListItemUncheckedUpdateWithoutShoppingListInput>
  }

  export type ShoppingListItemUpdateManyWithWhereWithoutShoppingListInput = {
    where: ShoppingListItemScalarWhereInput
    data: XOR<ShoppingListItemUpdateManyMutationInput, ShoppingListItemUncheckedUpdateManyWithoutShoppingListInput>
  }

  export type ShoppingListCreateWithoutItemsInput = {
    name: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shared?: boolean
    sharedUrlId?: string | null
  }

  export type ShoppingListUncheckedCreateWithoutItemsInput = {
    id?: number
    name: string
    userId: string
    createdAt?: Date | string
    updatedAt?: Date | string
    shared?: boolean
    sharedUrlId?: string | null
  }

  export type ShoppingListCreateOrConnectWithoutItemsInput = {
    where: ShoppingListWhereUniqueInput
    create: XOR<ShoppingListCreateWithoutItemsInput, ShoppingListUncheckedCreateWithoutItemsInput>
  }

  export type ZdravieAKrasaCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionCreateNestedManyWithoutZdravieAKrasaInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutZdravieAKrasaInput
  }

  export type ZdravieAKrasaCreateOrConnectWithoutShoppingListItemInput = {
    where: ZdravieAKrasaWhereUniqueInput
    create: XOR<ZdravieAKrasaCreateWithoutShoppingListItemInput, ZdravieAKrasaUncheckedCreateWithoutShoppingListItemInput>
  }

  export type OvocieAZeleninyCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    promotions?: PromotionCreateNestedManyWithoutOvocieAZeleninyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutOvocieAZeleninyInput
  }

  export type OvocieAZeleninyCreateOrConnectWithoutShoppingListItemInput = {
    where: OvocieAZeleninyWhereUniqueInput
    create: XOR<OvocieAZeleninyCreateWithoutShoppingListItemInput, OvocieAZeleninyUncheckedCreateWithoutShoppingListItemInput>
  }

  export type GrilovanieCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutGrilovanieInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutGrilovanieInput
  }

  export type GrilovanieUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutGrilovanieInput
  }

  export type GrilovanieCreateOrConnectWithoutShoppingListItemInput = {
    where: GrilovanieWhereUniqueInput
    create: XOR<GrilovanieCreateWithoutShoppingListItemInput, GrilovanieUncheckedCreateWithoutShoppingListItemInput>
  }

  export type StarostlivostODomacnostCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutStarostlivostODomacnostInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutStarostlivostODomacnostInput
  }

  export type StarostlivostODomacnostCreateOrConnectWithoutShoppingListItemInput = {
    where: StarostlivostODomacnostWhereUniqueInput
    create: XOR<StarostlivostODomacnostCreateWithoutShoppingListItemInput, StarostlivostODomacnostUncheckedCreateWithoutShoppingListItemInput>
  }

  export type PecivoCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutPecivoInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutPecivoInput
  }

  export type PecivoUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutPecivoInput
  }

  export type PecivoCreateOrConnectWithoutShoppingListItemInput = {
    where: PecivoWhereUniqueInput
    create: XOR<PecivoCreateWithoutShoppingListItemInput, PecivoUncheckedCreateWithoutShoppingListItemInput>
  }

  export type MasoRybyALahodkyCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMasoRybyALahodkyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutMasoRybyALahodkyInput
  }

  export type MasoRybyALahodkyCreateOrConnectWithoutShoppingListItemInput = {
    where: MasoRybyALahodkyWhereUniqueInput
    create: XOR<MasoRybyALahodkyCreateWithoutShoppingListItemInput, MasoRybyALahodkyUncheckedCreateWithoutShoppingListItemInput>
  }

  export type MliecneVyrobkyAVajciaCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutMliecneVyrobkyAVajciaInput
  }

  export type MliecneVyrobkyAVajciaCreateOrConnectWithoutShoppingListItemInput = {
    where: MliecneVyrobkyAVajciaWhereUniqueInput
    create: XOR<MliecneVyrobkyAVajciaCreateWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutShoppingListItemInput>
  }

  export type TrvanlivePotravinyCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutTrvanlivePotravinyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutTrvanlivePotravinyInput
  }

  export type TrvanlivePotravinyCreateOrConnectWithoutShoppingListItemInput = {
    where: TrvanlivePotravinyWhereUniqueInput
    create: XOR<TrvanlivePotravinyCreateWithoutShoppingListItemInput, TrvanlivePotravinyUncheckedCreateWithoutShoppingListItemInput>
  }

  export type SpecialnaAZdravaVyzivaCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutSpecialnaAZdravaVyzivaInput
  }

  export type SpecialnaAZdravaVyzivaCreateOrConnectWithoutShoppingListItemInput = {
    where: SpecialnaAZdravaVyzivaWhereUniqueInput
    create: XOR<SpecialnaAZdravaVyzivaCreateWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutShoppingListItemInput>
  }

  export type MrazenePotravinyCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutMrazenePotravinyInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutMrazenePotravinyInput
  }

  export type MrazenePotravinyCreateOrConnectWithoutShoppingListItemInput = {
    where: MrazenePotravinyWhereUniqueInput
    create: XOR<MrazenePotravinyCreateWithoutShoppingListItemInput, MrazenePotravinyUncheckedCreateWithoutShoppingListItemInput>
  }

  export type NapojeCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutNapojeInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutNapojeInput
  }

  export type NapojeUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutNapojeInput
  }

  export type NapojeCreateOrConnectWithoutShoppingListItemInput = {
    where: NapojeWhereUniqueInput
    create: XOR<NapojeCreateWithoutShoppingListItemInput, NapojeUncheckedCreateWithoutShoppingListItemInput>
  }

  export type AlkoholCreateWithoutShoppingListItemInput = {
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    promotions?: PromotionCreateNestedManyWithoutAlkoholInput
    ProductAnalytics?: ProductAnalyticsCreateNestedOneWithoutAlkoholInput
  }

  export type AlkoholUncheckedCreateWithoutShoppingListItemInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    productAnalyticsId?: number | null
    promotions?: PromotionUncheckedCreateNestedManyWithoutAlkoholInput
  }

  export type AlkoholCreateOrConnectWithoutShoppingListItemInput = {
    where: AlkoholWhereUniqueInput
    create: XOR<AlkoholCreateWithoutShoppingListItemInput, AlkoholUncheckedCreateWithoutShoppingListItemInput>
  }

  export type ShoppingListUpsertWithoutItemsInput = {
    update: XOR<ShoppingListUpdateWithoutItemsInput, ShoppingListUncheckedUpdateWithoutItemsInput>
    create: XOR<ShoppingListCreateWithoutItemsInput, ShoppingListUncheckedCreateWithoutItemsInput>
    where?: ShoppingListWhereInput
  }

  export type ShoppingListUpdateToOneWithWhereWithoutItemsInput = {
    where?: ShoppingListWhereInput
    data: XOR<ShoppingListUpdateWithoutItemsInput, ShoppingListUncheckedUpdateWithoutItemsInput>
  }

  export type ShoppingListUpdateWithoutItemsInput = {
    name?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shared?: BoolFieldUpdateOperationsInput | boolean
    sharedUrlId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ShoppingListUncheckedUpdateWithoutItemsInput = {
    id?: IntFieldUpdateOperationsInput | number
    name?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shared?: BoolFieldUpdateOperationsInput | boolean
    sharedUrlId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ZdravieAKrasaUpsertWithoutShoppingListItemInput = {
    update: XOR<ZdravieAKrasaUpdateWithoutShoppingListItemInput, ZdravieAKrasaUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<ZdravieAKrasaCreateWithoutShoppingListItemInput, ZdravieAKrasaUncheckedCreateWithoutShoppingListItemInput>
    where?: ZdravieAKrasaWhereInput
  }

  export type ZdravieAKrasaUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: ZdravieAKrasaWhereInput
    data: XOR<ZdravieAKrasaUpdateWithoutShoppingListItemInput, ZdravieAKrasaUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type ZdravieAKrasaUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUpdateManyWithoutZdravieAKrasaNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutZdravieAKrasaNestedInput
  }

  export type ZdravieAKrasaUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type OvocieAZeleninyUpsertWithoutShoppingListItemInput = {
    update: XOR<OvocieAZeleninyUpdateWithoutShoppingListItemInput, OvocieAZeleninyUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<OvocieAZeleninyCreateWithoutShoppingListItemInput, OvocieAZeleninyUncheckedCreateWithoutShoppingListItemInput>
    where?: OvocieAZeleninyWhereInput
  }

  export type OvocieAZeleninyUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: OvocieAZeleninyWhereInput
    data: XOR<OvocieAZeleninyUpdateWithoutShoppingListItemInput, OvocieAZeleninyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type OvocieAZeleninyUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUpdateManyWithoutOvocieAZeleninyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutOvocieAZeleninyNestedInput
  }

  export type OvocieAZeleninyUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type GrilovanieUpsertWithoutShoppingListItemInput = {
    update: XOR<GrilovanieUpdateWithoutShoppingListItemInput, GrilovanieUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<GrilovanieCreateWithoutShoppingListItemInput, GrilovanieUncheckedCreateWithoutShoppingListItemInput>
    where?: GrilovanieWhereInput
  }

  export type GrilovanieUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: GrilovanieWhereInput
    data: XOR<GrilovanieUpdateWithoutShoppingListItemInput, GrilovanieUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type GrilovanieUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutGrilovanieNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutGrilovanieNestedInput
  }

  export type GrilovanieUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutGrilovanieNestedInput
  }

  export type StarostlivostODomacnostUpsertWithoutShoppingListItemInput = {
    update: XOR<StarostlivostODomacnostUpdateWithoutShoppingListItemInput, StarostlivostODomacnostUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<StarostlivostODomacnostCreateWithoutShoppingListItemInput, StarostlivostODomacnostUncheckedCreateWithoutShoppingListItemInput>
    where?: StarostlivostODomacnostWhereInput
  }

  export type StarostlivostODomacnostUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: StarostlivostODomacnostWhereInput
    data: XOR<StarostlivostODomacnostUpdateWithoutShoppingListItemInput, StarostlivostODomacnostUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type StarostlivostODomacnostUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutStarostlivostODomacnostNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutStarostlivostODomacnostNestedInput
  }

  export type StarostlivostODomacnostUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type PecivoUpsertWithoutShoppingListItemInput = {
    update: XOR<PecivoUpdateWithoutShoppingListItemInput, PecivoUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<PecivoCreateWithoutShoppingListItemInput, PecivoUncheckedCreateWithoutShoppingListItemInput>
    where?: PecivoWhereInput
  }

  export type PecivoUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: PecivoWhereInput
    data: XOR<PecivoUpdateWithoutShoppingListItemInput, PecivoUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type PecivoUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutPecivoNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutPecivoNestedInput
  }

  export type PecivoUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutPecivoNestedInput
  }

  export type MasoRybyALahodkyUpsertWithoutShoppingListItemInput = {
    update: XOR<MasoRybyALahodkyUpdateWithoutShoppingListItemInput, MasoRybyALahodkyUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<MasoRybyALahodkyCreateWithoutShoppingListItemInput, MasoRybyALahodkyUncheckedCreateWithoutShoppingListItemInput>
    where?: MasoRybyALahodkyWhereInput
  }

  export type MasoRybyALahodkyUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: MasoRybyALahodkyWhereInput
    data: XOR<MasoRybyALahodkyUpdateWithoutShoppingListItemInput, MasoRybyALahodkyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type MasoRybyALahodkyUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMasoRybyALahodkyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMasoRybyALahodkyNestedInput
  }

  export type MasoRybyALahodkyUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type MliecneVyrobkyAVajciaUpsertWithoutShoppingListItemInput = {
    update: XOR<MliecneVyrobkyAVajciaUpdateWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<MliecneVyrobkyAVajciaCreateWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUncheckedCreateWithoutShoppingListItemInput>
    where?: MliecneVyrobkyAVajciaWhereInput
  }

  export type MliecneVyrobkyAVajciaUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: MliecneVyrobkyAVajciaWhereInput
    data: XOR<MliecneVyrobkyAVajciaUpdateWithoutShoppingListItemInput, MliecneVyrobkyAVajciaUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type MliecneVyrobkyAVajciaUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type TrvanlivePotravinyUpsertWithoutShoppingListItemInput = {
    update: XOR<TrvanlivePotravinyUpdateWithoutShoppingListItemInput, TrvanlivePotravinyUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<TrvanlivePotravinyCreateWithoutShoppingListItemInput, TrvanlivePotravinyUncheckedCreateWithoutShoppingListItemInput>
    where?: TrvanlivePotravinyWhereInput
  }

  export type TrvanlivePotravinyUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: TrvanlivePotravinyWhereInput
    data: XOR<TrvanlivePotravinyUpdateWithoutShoppingListItemInput, TrvanlivePotravinyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type TrvanlivePotravinyUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutTrvanlivePotravinyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutTrvanlivePotravinyNestedInput
  }

  export type TrvanlivePotravinyUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type SpecialnaAZdravaVyzivaUpsertWithoutShoppingListItemInput = {
    update: XOR<SpecialnaAZdravaVyzivaUpdateWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<SpecialnaAZdravaVyzivaCreateWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUncheckedCreateWithoutShoppingListItemInput>
    where?: SpecialnaAZdravaVyzivaWhereInput
  }

  export type SpecialnaAZdravaVyzivaUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: SpecialnaAZdravaVyzivaWhereInput
    data: XOR<SpecialnaAZdravaVyzivaUpdateWithoutShoppingListItemInput, SpecialnaAZdravaVyzivaUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type SpecialnaAZdravaVyzivaUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type MrazenePotravinyUpsertWithoutShoppingListItemInput = {
    update: XOR<MrazenePotravinyUpdateWithoutShoppingListItemInput, MrazenePotravinyUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<MrazenePotravinyCreateWithoutShoppingListItemInput, MrazenePotravinyUncheckedCreateWithoutShoppingListItemInput>
    where?: MrazenePotravinyWhereInput
  }

  export type MrazenePotravinyUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: MrazenePotravinyWhereInput
    data: XOR<MrazenePotravinyUpdateWithoutShoppingListItemInput, MrazenePotravinyUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type MrazenePotravinyUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMrazenePotravinyNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutMrazenePotravinyNestedInput
  }

  export type MrazenePotravinyUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type NapojeUpsertWithoutShoppingListItemInput = {
    update: XOR<NapojeUpdateWithoutShoppingListItemInput, NapojeUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<NapojeCreateWithoutShoppingListItemInput, NapojeUncheckedCreateWithoutShoppingListItemInput>
    where?: NapojeWhereInput
  }

  export type NapojeUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: NapojeWhereInput
    data: XOR<NapojeUpdateWithoutShoppingListItemInput, NapojeUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type NapojeUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutNapojeNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutNapojeNestedInput
  }

  export type NapojeUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutNapojeNestedInput
  }

  export type AlkoholUpsertWithoutShoppingListItemInput = {
    update: XOR<AlkoholUpdateWithoutShoppingListItemInput, AlkoholUncheckedUpdateWithoutShoppingListItemInput>
    create: XOR<AlkoholCreateWithoutShoppingListItemInput, AlkoholUncheckedCreateWithoutShoppingListItemInput>
    where?: AlkoholWhereInput
  }

  export type AlkoholUpdateToOneWithWhereWithoutShoppingListItemInput = {
    where?: AlkoholWhereInput
    data: XOR<AlkoholUpdateWithoutShoppingListItemInput, AlkoholUncheckedUpdateWithoutShoppingListItemInput>
  }

  export type AlkoholUpdateWithoutShoppingListItemInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutAlkoholNestedInput
    ProductAnalytics?: ProductAnalyticsUpdateOneWithoutAlkoholNestedInput
  }

  export type AlkoholUncheckedUpdateWithoutShoppingListItemInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    productAnalyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutAlkoholNestedInput
  }

  export type OvocieAZeleninyCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
  }

  export type GrilovanieCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type PecivoCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type MasoRybyALahodkyCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type MliecneVyrobkyAVajciaCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type TrvanlivePotravinyCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type SpecialnaAZdravaVyzivaCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type MrazenePotravinyCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type NapojeCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type AlkoholCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type StarostlivostODomacnostCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
  }

  export type ZdravieAKrasaCreateManyProductAnalyticsInput = {
    id?: number
    productId: string
    title: string
    price: number
    unitPrice: number
    imageUrl: string
    unitOfMeasure: string
    isForSale: boolean
    aisleName: string
    lastUpdated: Date | string
    category: string
    superDepartmentName: string
    hasPromotions: boolean
    analyticsId?: number | null
  }

  export type OvocieAZeleninyUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUpdateManyWithoutOvocieAZeleninyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type OvocieAZeleninyUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutOvocieAZeleninyNestedInput
  }

  export type OvocieAZeleninyUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type GrilovanieUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutGrilovanieNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutGrilovanieNestedInput
  }

  export type GrilovanieUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutGrilovanieNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutGrilovanieNestedInput
  }

  export type GrilovanieUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type PecivoUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutPecivoNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutPecivoNestedInput
  }

  export type PecivoUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutPecivoNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutPecivoNestedInput
  }

  export type PecivoUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MasoRybyALahodkyUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMasoRybyALahodkyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type MasoRybyALahodkyUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMasoRybyALahodkyNestedInput
  }

  export type MasoRybyALahodkyUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MliecneVyrobkyAVajciaUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaNestedInput
  }

  export type MliecneVyrobkyAVajciaUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type TrvanlivePotravinyUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutTrvanlivePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type TrvanlivePotravinyUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutTrvanlivePotravinyNestedInput
  }

  export type TrvanlivePotravinyUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SpecialnaAZdravaVyzivaUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaNestedInput
  }

  export type SpecialnaAZdravaVyzivaUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type MrazenePotravinyUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutMrazenePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type MrazenePotravinyUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutMrazenePotravinyNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutMrazenePotravinyNestedInput
  }

  export type MrazenePotravinyUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type NapojeUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutNapojeNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutNapojeNestedInput
  }

  export type NapojeUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutNapojeNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutNapojeNestedInput
  }

  export type NapojeUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type AlkoholUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutAlkoholNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutAlkoholNestedInput
  }

  export type AlkoholUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutAlkoholNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutAlkoholNestedInput
  }

  export type AlkoholUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type StarostlivostODomacnostUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUpdateManyWithoutStarostlivostODomacnostNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type StarostlivostODomacnostUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    promotions?: PromotionUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutStarostlivostODomacnostNestedInput
  }

  export type StarostlivostODomacnostUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
  }

  export type ZdravieAKrasaUpdateWithoutProductAnalyticsInput = {
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUpdateManyWithoutZdravieAKrasaNestedInput
    ShoppingListItem?: ShoppingListItemUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type ZdravieAKrasaUncheckedUpdateWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
    promotions?: PromotionUncheckedUpdateManyWithoutZdravieAKrasaNestedInput
    ShoppingListItem?: ShoppingListItemUncheckedUpdateManyWithoutZdravieAKrasaNestedInput
  }

  export type ZdravieAKrasaUncheckedUpdateManyWithoutProductAnalyticsInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    price?: FloatFieldUpdateOperationsInput | number
    unitPrice?: FloatFieldUpdateOperationsInput | number
    imageUrl?: StringFieldUpdateOperationsInput | string
    unitOfMeasure?: StringFieldUpdateOperationsInput | string
    isForSale?: BoolFieldUpdateOperationsInput | boolean
    aisleName?: StringFieldUpdateOperationsInput | string
    lastUpdated?: DateTimeFieldUpdateOperationsInput | Date | string
    category?: StringFieldUpdateOperationsInput | string
    superDepartmentName?: StringFieldUpdateOperationsInput | string
    hasPromotions?: BoolFieldUpdateOperationsInput | boolean
    analyticsId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyZdravieAKrasaInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
  }

  export type ShoppingListItemCreateManyZdravieAKrasaInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutZdravieAKrasaInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutZdravieAKrasaInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutZdravieAKrasaInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutZdravieAKrasaInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutZdravieAKrasaInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutZdravieAKrasaInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyOvocieAZeleninyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyOvocieAZeleninyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutOvocieAZeleninyInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutOvocieAZeleninyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutOvocieAZeleninyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutOvocieAZeleninyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutOvocieAZeleninyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutOvocieAZeleninyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyGrilovanieInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyGrilovanieInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutGrilovanieInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutGrilovanieInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutGrilovanieInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutGrilovanieInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutGrilovanieInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutGrilovanieInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyStarostlivostODomacnostInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyStarostlivostODomacnostInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutStarostlivostODomacnostInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutStarostlivostODomacnostInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutStarostlivostODomacnostInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutStarostlivostODomacnostInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutStarostlivostODomacnostInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutStarostlivostODomacnostInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyPecivoInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyPecivoInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutPecivoInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutPecivoInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutPecivoInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutPecivoInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutPecivoInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutPecivoInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyMasoRybyALahodkyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyMasoRybyALahodkyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutMasoRybyALahodkyInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutMasoRybyALahodkyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutMasoRybyALahodkyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutMasoRybyALahodkyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutMasoRybyALahodkyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutMasoRybyALahodkyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyMliecneVyrobkyAVajciaInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyMliecneVyrobkyAVajciaInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutMliecneVyrobkyAVajciaInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutMliecneVyrobkyAVajciaInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutMliecneVyrobkyAVajciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutMliecneVyrobkyAVajciaInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyTrvanlivePotravinyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyTrvanlivePotravinyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutTrvanlivePotravinyInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutTrvanlivePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutTrvanlivePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutTrvanlivePotravinyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutTrvanlivePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutTrvanlivePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManySpecialnaAZdravaVyzivaInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManySpecialnaAZdravaVyzivaInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutSpecialnaAZdravaVyzivaInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutSpecialnaAZdravaVyzivaInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutSpecialnaAZdravaVyzivaInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutSpecialnaAZdravaVyzivaInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyMrazenePotravinyInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyMrazenePotravinyInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutMrazenePotravinyInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutMrazenePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutMrazenePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutMrazenePotravinyInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutMrazenePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutMrazenePotravinyInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyNapojeInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    alkoholId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyNapojeInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    alkoholId?: number | null
  }

  export type PromotionUpdateWithoutNapojeInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    alkohol?: AlkoholUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutNapojeInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutNapojeInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutNapojeInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutNapojeInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutNapojeInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionCreateManyAlkoholInput = {
    id?: number
    promotionId: string
    promotionType: string
    startDate: Date | string
    endDate: Date | string
    offerText: string
    promotionPrice?: number | null
    attributes?: PromotionCreateattributesInput | string[]
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    starostlivostODomacnostId?: number | null
    zdravieAKrasaId?: number | null
  }

  export type ShoppingListItemCreateManyAlkoholInput = {
    id?: number
    shoppingListId: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
  }

  export type PromotionUpdateWithoutAlkoholInput = {
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutPromotionsNestedInput
    grilovanie?: GrilovanieUpdateOneWithoutPromotionsNestedInput
    mliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutPromotionsNestedInput
    pecivo?: PecivoUpdateOneWithoutPromotionsNestedInput
    masoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutPromotionsNestedInput
    trvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutPromotionsNestedInput
    specialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutPromotionsNestedInput
    mrazenePotraviny?: MrazenePotravinyUpdateOneWithoutPromotionsNestedInput
    napoje?: NapojeUpdateOneWithoutPromotionsNestedInput
    starostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutPromotionsNestedInput
    zdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutPromotionsNestedInput
  }

  export type PromotionUncheckedUpdateWithoutAlkoholInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type PromotionUncheckedUpdateManyWithoutAlkoholInput = {
    id?: IntFieldUpdateOperationsInput | number
    promotionId?: StringFieldUpdateOperationsInput | string
    promotionType?: StringFieldUpdateOperationsInput | string
    startDate?: DateTimeFieldUpdateOperationsInput | Date | string
    endDate?: DateTimeFieldUpdateOperationsInput | Date | string
    offerText?: StringFieldUpdateOperationsInput | string
    promotionPrice?: NullableFloatFieldUpdateOperationsInput | number | null
    attributes?: PromotionUpdateattributesInput | string[]
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUpdateWithoutAlkoholInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    shoppingList?: ShoppingListUpdateOneRequiredWithoutItemsNestedInput
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutAlkoholInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutAlkoholInput = {
    id?: IntFieldUpdateOperationsInput | number
    shoppingListId?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemCreateManyShoppingListInput = {
    id?: number
    productId: string
    quantity?: number
    category: string
    createdAt?: Date | string
    updatedAt?: Date | string
    zdravieAKrasaId?: number | null
    ovocieAZeleninyId?: number | null
    grilovanieId?: number | null
    starostlivostODomacnostId?: number | null
    pecivoId?: number | null
    masoRybyALahodkyId?: number | null
    mliecneVyrobkyAVajciaId?: number | null
    trvanlivePotravinyId?: number | null
    specialnaAZdravaVyzivaId?: number | null
    mrazenePotravinyId?: number | null
    napojeId?: number | null
    alkoholId?: number | null
  }

  export type ShoppingListItemUpdateWithoutShoppingListInput = {
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    ZdravieAKrasa?: ZdravieAKrasaUpdateOneWithoutShoppingListItemNestedInput
    OvocieAZeleniny?: OvocieAZeleninyUpdateOneWithoutShoppingListItemNestedInput
    Grilovanie?: GrilovanieUpdateOneWithoutShoppingListItemNestedInput
    StarostlivostODomacnost?: StarostlivostODomacnostUpdateOneWithoutShoppingListItemNestedInput
    Pecivo?: PecivoUpdateOneWithoutShoppingListItemNestedInput
    MasoRybyALahodky?: MasoRybyALahodkyUpdateOneWithoutShoppingListItemNestedInput
    MliecneVyrobkyAVajcia?: MliecneVyrobkyAVajciaUpdateOneWithoutShoppingListItemNestedInput
    TrvanlivePotraviny?: TrvanlivePotravinyUpdateOneWithoutShoppingListItemNestedInput
    SpecialnaAZdravaVyziva?: SpecialnaAZdravaVyzivaUpdateOneWithoutShoppingListItemNestedInput
    MrazenePotraviny?: MrazenePotravinyUpdateOneWithoutShoppingListItemNestedInput
    Napoje?: NapojeUpdateOneWithoutShoppingListItemNestedInput
    Alkohol?: AlkoholUpdateOneWithoutShoppingListItemNestedInput
  }

  export type ShoppingListItemUncheckedUpdateWithoutShoppingListInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type ShoppingListItemUncheckedUpdateManyWithoutShoppingListInput = {
    id?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
    quantity?: IntFieldUpdateOperationsInput | number
    category?: StringFieldUpdateOperationsInput | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    updatedAt?: DateTimeFieldUpdateOperationsInput | Date | string
    zdravieAKrasaId?: NullableIntFieldUpdateOperationsInput | number | null
    ovocieAZeleninyId?: NullableIntFieldUpdateOperationsInput | number | null
    grilovanieId?: NullableIntFieldUpdateOperationsInput | number | null
    starostlivostODomacnostId?: NullableIntFieldUpdateOperationsInput | number | null
    pecivoId?: NullableIntFieldUpdateOperationsInput | number | null
    masoRybyALahodkyId?: NullableIntFieldUpdateOperationsInput | number | null
    mliecneVyrobkyAVajciaId?: NullableIntFieldUpdateOperationsInput | number | null
    trvanlivePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    specialnaAZdravaVyzivaId?: NullableIntFieldUpdateOperationsInput | number | null
    mrazenePotravinyId?: NullableIntFieldUpdateOperationsInput | number | null
    napojeId?: NullableIntFieldUpdateOperationsInput | number | null
    alkoholId?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use ProductAnalyticsCountOutputTypeDefaultArgs instead
     */
    export type ProductAnalyticsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductAnalyticsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ZdravieAKrasaCountOutputTypeDefaultArgs instead
     */
    export type ZdravieAKrasaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ZdravieAKrasaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OvocieAZeleninyCountOutputTypeDefaultArgs instead
     */
    export type OvocieAZeleninyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OvocieAZeleninyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GrilovanieCountOutputTypeDefaultArgs instead
     */
    export type GrilovanieCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GrilovanieCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StarostlivostODomacnostCountOutputTypeDefaultArgs instead
     */
    export type StarostlivostODomacnostCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StarostlivostODomacnostCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PecivoCountOutputTypeDefaultArgs instead
     */
    export type PecivoCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PecivoCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MasoRybyALahodkyCountOutputTypeDefaultArgs instead
     */
    export type MasoRybyALahodkyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MasoRybyALahodkyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MliecneVyrobkyAVajciaCountOutputTypeDefaultArgs instead
     */
    export type MliecneVyrobkyAVajciaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MliecneVyrobkyAVajciaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TrvanlivePotravinyCountOutputTypeDefaultArgs instead
     */
    export type TrvanlivePotravinyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TrvanlivePotravinyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SpecialnaAZdravaVyzivaCountOutputTypeDefaultArgs instead
     */
    export type SpecialnaAZdravaVyzivaCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SpecialnaAZdravaVyzivaCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MrazenePotravinyCountOutputTypeDefaultArgs instead
     */
    export type MrazenePotravinyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MrazenePotravinyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NapojeCountOutputTypeDefaultArgs instead
     */
    export type NapojeCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NapojeCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlkoholCountOutputTypeDefaultArgs instead
     */
    export type AlkoholCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlkoholCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShoppingListCountOutputTypeDefaultArgs instead
     */
    export type ShoppingListCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShoppingListCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FavoriteDefaultArgs instead
     */
    export type FavoriteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FavoriteDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductAnalyticsDefaultArgs instead
     */
    export type ProductAnalyticsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductAnalyticsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ZdravieAKrasaDefaultArgs instead
     */
    export type ZdravieAKrasaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ZdravieAKrasaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OvocieAZeleninyDefaultArgs instead
     */
    export type OvocieAZeleninyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OvocieAZeleninyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use GrilovanieDefaultArgs instead
     */
    export type GrilovanieArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = GrilovanieDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StarostlivostODomacnostDefaultArgs instead
     */
    export type StarostlivostODomacnostArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StarostlivostODomacnostDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PecivoDefaultArgs instead
     */
    export type PecivoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PecivoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MasoRybyALahodkyDefaultArgs instead
     */
    export type MasoRybyALahodkyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MasoRybyALahodkyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MliecneVyrobkyAVajciaDefaultArgs instead
     */
    export type MliecneVyrobkyAVajciaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MliecneVyrobkyAVajciaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use TrvanlivePotravinyDefaultArgs instead
     */
    export type TrvanlivePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = TrvanlivePotravinyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SpecialnaAZdravaVyzivaDefaultArgs instead
     */
    export type SpecialnaAZdravaVyzivaArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SpecialnaAZdravaVyzivaDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MrazenePotravinyDefaultArgs instead
     */
    export type MrazenePotravinyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MrazenePotravinyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use NapojeDefaultArgs instead
     */
    export type NapojeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = NapojeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AlkoholDefaultArgs instead
     */
    export type AlkoholArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AlkoholDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PromotionDefaultArgs instead
     */
    export type PromotionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PromotionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UpdateSettingsDefaultArgs instead
     */
    export type UpdateSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UpdateSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShoppingListDefaultArgs instead
     */
    export type ShoppingListArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShoppingListDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShoppingListItemDefaultArgs instead
     */
    export type ShoppingListItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShoppingListItemDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}